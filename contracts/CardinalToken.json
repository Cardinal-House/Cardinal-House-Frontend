{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_preSaleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burnWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidityWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_memberGiveawayWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_marketingWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_developerWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouterAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "developerTransactionFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "marketingTransactionFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "memberGiveawayTransactionFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "marketingFee",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "developerFee",
          "type": "uint256"
        }
      ],
      "name": "transactionFeeMaticDispersed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "cardinalTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "maticAmount",
          "type": "uint256"
        }
      ],
      "name": "transactionFeesSwappedForMatic",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pairAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPairAddress",
          "type": "bool"
        }
      ],
      "name": "addOrRemovePairAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractTokenDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disperseFeesManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "excludeUserFromFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "excludedFromFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "includeUsersInFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "memberGiveawayFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "memberGiveawayWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pairAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "preSaleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDivisor",
          "type": "uint256"
        }
      ],
      "name": "setContractTokenDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useAmount",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "minimumAmountOut",
          "type": "uint256"
        }
      ],
      "name": "swapCardinalTokensForMaticManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "blacklisted",
          "type": "bool"
        }
      ],
      "name": "updateBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDeveloperTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateDeveloperTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMarketingTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateMarketingTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMemberGiveawayTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateMemberGiveawayTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isMinter",
          "type": "bool"
        }
      ],
      "name": "updateMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "2": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "20": "contracts/CardinalToken.sol",
    "3": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "39": "interfaces/Uniswap.sol",
    "4": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CardinalToken.sol",
    "exportedSymbols": {
      "CardinalToken": [
        4441
      ],
      "Context": [
        11585
      ],
      "ERC20": [
        10955
      ],
      "IERC20": [
        12143
      ],
      "IERC20Metadata": [
        12168
      ],
      "IUniswapV2Factory": [
        10967
      ],
      "IUniswapV2Pair": [
        10971
      ],
      "IUniswapV2Router01": [
        11028
      ],
      "IUniswapV2Router02": [
        11088
      ],
      "Ownable": [
        9056
      ]
    },
    "id": 4442,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3354,
        "literals": [
          "solidity",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:22:20"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3355,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4442,
        "sourceUnit": 10956,
        "src": "59:55:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3356,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4442,
        "sourceUnit": 9057,
        "src": "115:52:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/Uniswap.sol",
        "file": "../interfaces/Uniswap.sol",
        "id": 3357,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4442,
        "sourceUnit": 11089,
        "src": "168:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3359,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10955,
              "src": "335:5:20"
            },
            "id": 3360,
            "nodeType": "InheritanceSpecifier",
            "src": "335:5:20"
          },
          {
            "baseName": {
              "id": 3361,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9056,
              "src": "342:7:20"
            },
            "id": 3362,
            "nodeType": "InheritanceSpecifier",
            "src": "342:7:20"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3358,
          "nodeType": "StructuredDocumentation",
          "src": "205:103:20",
          "text": " @title Cardinal House Token\n @dev Token contract for the Cardinal House ecosystem currency"
        },
        "fullyImplemented": true,
        "id": 4441,
        "linearizedBaseContracts": [
          4441,
          9056,
          10955,
          12168,
          12143,
          11585
        ],
        "name": "CardinalToken",
        "nameLocation": "318:13:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "dbe66ca0",
            "id": 3366,
            "mutability": "mutable",
            "name": "excludedFromFees",
            "nameLocation": "526:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "493:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3365,
              "keyType": {
                "id": 3363,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "493:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3364,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "513:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9f92be4",
            "id": 3370,
            "mutability": "mutable",
            "name": "blacklist",
            "nameLocation": "693:9:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "660:42:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3369,
              "keyType": {
                "id": 3367,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "669:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "660:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3368,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "680:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f46eccc4",
            "id": 3374,
            "mutability": "mutable",
            "name": "minters",
            "nameLocation": "825:7:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "792:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3373,
              "keyType": {
                "id": 3371,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "801:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "792:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3372,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "812:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8b16cf98",
            "id": 3378,
            "mutability": "mutable",
            "name": "pairAddresses",
            "nameLocation": "936:13:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "903:46:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3377,
              "keyType": {
                "id": 3375,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "912:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "903:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3376,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "923:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5b3c1da1",
            "id": 3380,
            "mutability": "mutable",
            "name": "burnWalletAddress",
            "nameLocation": "1031:17:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1016:32:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3379,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1016:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8eb83f25",
            "id": 3382,
            "mutability": "mutable",
            "name": "liquidityWalletAddress",
            "nameLocation": "1251:22:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1236:37:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3381,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eb08aa3b",
            "id": 3384,
            "mutability": "mutable",
            "name": "preSaleAddress",
            "nameLocation": "1350:14:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1335:29:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3383,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1335:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd092bc5",
            "id": 3386,
            "mutability": "mutable",
            "name": "memberGiveawayWalletAddress",
            "nameLocation": "1462:27:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1439:50:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3385,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1439:15:20",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d158272d",
            "id": 3388,
            "mutability": "mutable",
            "name": "marketingWalletAddress",
            "nameLocation": "1579:22:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1556:45:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3387,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1556:15:20",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61eb048a",
            "id": 3390,
            "mutability": "mutable",
            "name": "developerWalletAddress",
            "nameLocation": "1690:22:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1667:45:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1667:15:20",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20ca3c7f",
            "id": 3392,
            "mutability": "mutable",
            "name": "uniswapRouterAddress",
            "nameLocation": "1804:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1789:35:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3391,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1789:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f481683",
            "id": 3395,
            "mutability": "mutable",
            "name": "memberGiveawayFeePercent",
            "nameLocation": "1903:24:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1888:43:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3393,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1888:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 3394,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1930:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da6fa55c",
            "id": 3398,
            "mutability": "mutable",
            "name": "marketingFeePercent",
            "nameLocation": "2004:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "1989:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3396,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1989:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 3397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2026:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fcd1285",
            "id": 3401,
            "mutability": "mutable",
            "name": "developerFeePercent",
            "nameLocation": "2105:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "2090:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3399,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2090:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 3400,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2127:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3404,
            "mutability": "mutable",
            "name": "uniswapRouter",
            "nameLocation": "2191:13:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "2164:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 3403,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3402,
                "name": "IUniswapV2Router02",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11088,
                "src": "2164:18:20"
              },
              "referencedDeclaration": 11088,
              "src": "2164:18:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c816841b",
            "id": 3406,
            "mutability": "mutable",
            "name": "uniswapPair",
            "nameLocation": "2289:11:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "2274:26:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3405,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2274:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "404e8a82",
            "id": 3409,
            "mutability": "mutable",
            "name": "contractTokenDivisor",
            "nameLocation": "2431:20:20",
            "nodeType": "VariableDeclaration",
            "scope": 4441,
            "src": "2416:42:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3407,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2416:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 3408,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2454:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3413,
            "name": "memberGiveawayTransactionFeeUpdated",
            "nameLocation": "2580:35:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3411,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "2632:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3413,
                  "src": "2616:36:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2615:38:20"
            },
            "src": "2574:80:20"
          },
          {
            "anonymous": false,
            "id": 3417,
            "name": "marketingTransactionFeeUpdated",
            "nameLocation": "2665:30:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3415,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "2712:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3417,
                  "src": "2696:36:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2696:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2695:38:20"
            },
            "src": "2659:75:20"
          },
          {
            "anonymous": false,
            "id": 3421,
            "name": "developerTransactionFeeUpdated",
            "nameLocation": "2745:30:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3419,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "2792:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3421,
                  "src": "2776:36:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2775:38:20"
            },
            "src": "2739:75:20"
          },
          {
            "anonymous": false,
            "id": 3427,
            "name": "transactionFeesSwappedForMatic",
            "nameLocation": "2825:30:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3423,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "cardinalTokenAmount",
                  "nameLocation": "2872:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3427,
                  "src": "2856:35:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3425,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "maticAmount",
                  "nameLocation": "2909:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3427,
                  "src": "2893:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2893:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2855:66:20"
            },
            "src": "2819:103:20"
          },
          {
            "anonymous": false,
            "id": 3433,
            "name": "transactionFeeMaticDispersed",
            "nameLocation": "2933:28:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3429,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "marketingFee",
                  "nameLocation": "2978:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "2962:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2962:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3431,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "developerFee",
                  "nameLocation": "3008:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "2992:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2992:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2961:60:20"
            },
            "src": "2927:95:20"
          },
          {
            "body": {
              "id": 3611,
              "nodeType": "Block",
              "src": "3590:1459:20",
              "statements": [
                {
                  "expression": {
                    "id": 3458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3456,
                      "name": "preSaleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3384,
                      "src": "3604:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3457,
                      "name": "_preSaleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3437,
                      "src": "3621:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3604:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3459,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:32:20"
                },
                {
                  "expression": {
                    "id": 3462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3460,
                      "name": "memberGiveawayWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3386,
                      "src": "3650:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3461,
                      "name": "_memberGiveawayWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3443,
                      "src": "3680:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3650:58:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3463,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:58:20"
                },
                {
                  "expression": {
                    "id": 3466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3464,
                      "name": "burnWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3380,
                      "src": "3722:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3465,
                      "name": "_burnWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3439,
                      "src": "3742:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3722:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3467,
                  "nodeType": "ExpressionStatement",
                  "src": "3722:38:20"
                },
                {
                  "expression": {
                    "id": 3470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3468,
                      "name": "liquidityWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3382,
                      "src": "3774:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3469,
                      "name": "_liquidityWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3441,
                      "src": "3799:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3774:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3471,
                  "nodeType": "ExpressionStatement",
                  "src": "3774:48:20"
                },
                {
                  "expression": {
                    "id": 3474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3472,
                      "name": "marketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3388,
                      "src": "3836:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3473,
                      "name": "_marketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3445,
                      "src": "3861:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3836:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3475,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:48:20"
                },
                {
                  "expression": {
                    "id": 3478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3476,
                      "name": "developerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3390,
                      "src": "3898:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3477,
                      "name": "_developerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3447,
                      "src": "3923:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3898:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3479,
                  "nodeType": "ExpressionStatement",
                  "src": "3898:48:20"
                },
                {
                  "expression": {
                    "id": 3482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3480,
                      "name": "uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3392,
                      "src": "3960:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3481,
                      "name": "_uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3449,
                      "src": "3983:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3960:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3483,
                  "nodeType": "ExpressionStatement",
                  "src": "3960:44:20"
                },
                {
                  "expression": {
                    "id": 3488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3484,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "4019:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3486,
                      "indexExpression": {
                        "id": 3485,
                        "name": "memberGiveawayWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "4036:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4019:45:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4067:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4019:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3489,
                  "nodeType": "ExpressionStatement",
                  "src": "4019:52:20"
                },
                {
                  "expression": {
                    "id": 3494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3490,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "4085:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3492,
                      "indexExpression": {
                        "id": 3491,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "4102:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4085:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4128:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4085:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3495,
                  "nodeType": "ExpressionStatement",
                  "src": "4085:47:20"
                },
                {
                  "expression": {
                    "id": 3500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3496,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "4146:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3498,
                      "indexExpression": {
                        "id": 3497,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "4163:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4146:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4189:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4146:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3501,
                  "nodeType": "ExpressionStatement",
                  "src": "4146:47:20"
                },
                {
                  "expression": {
                    "id": 3506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3502,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "4207:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3504,
                      "indexExpression": {
                        "id": 3503,
                        "name": "liquidityWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3382,
                        "src": "4224:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4207:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4250:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4207:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3507,
                  "nodeType": "ExpressionStatement",
                  "src": "4207:47:20"
                },
                {
                  "expression": {
                    "id": 3512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3508,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "4268:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3510,
                      "indexExpression": {
                        "id": 3509,
                        "name": "preSaleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3384,
                        "src": "4285:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4268:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4303:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4268:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3513,
                  "nodeType": "ExpressionStatement",
                  "src": "4268:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3515,
                        "name": "preSaleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3384,
                        "src": "4328:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "id": 3516,
                                    "name": "initialSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3435,
                                    "src": "4346:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3517,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4345:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3335",
                                "id": 3518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4363:2:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_35_by_1",
                                  "typeString": "int_const 35"
                                },
                                "value": "35"
                              },
                              "src": "4345:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 3520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4368:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "4345:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3522,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4344:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3514,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10772,
                      "src": "4322:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3524,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:51:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3526,
                        "name": "liquidityWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3382,
                        "src": "4393:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "id": 3527,
                                    "name": "initialSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3435,
                                    "src": "4419:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3528,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4418:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "3335",
                                "id": 3529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4436:2:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_35_by_1",
                                  "typeString": "int_const 35"
                                },
                                "value": "35"
                              },
                              "src": "4418:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 3531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4441:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "4418:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3533,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4417:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3525,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10772,
                      "src": "4387:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4387:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3535,
                  "nodeType": "ExpressionStatement",
                  "src": "4387:59:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3537,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "4466:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3538,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3435,
                          "src": "4490:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 3539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4506:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "4490:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3536,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10772,
                      "src": "4460:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4460:49:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3542,
                  "nodeType": "ExpressionStatement",
                  "src": "4460:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3544,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "4529:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3545,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3435,
                          "src": "4553:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 3546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4569:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "4553:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3543,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10772,
                      "src": "4523:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4523:48:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3549,
                  "nodeType": "ExpressionStatement",
                  "src": "4523:48:20"
                },
                {
                  "assignments": [
                    3552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3552,
                      "mutability": "mutable",
                      "name": "_uniswapV2Router",
                      "nameLocation": "4605:16:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3611,
                      "src": "4586:35:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                        "typeString": "contract IUniswapV2Router02"
                      },
                      "typeName": {
                        "id": 3551,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3550,
                          "name": "IUniswapV2Router02",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11088,
                          "src": "4586:18:20"
                        },
                        "referencedDeclaration": 11088,
                        "src": "4586:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3556,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3554,
                        "name": "uniswapRouterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3392,
                        "src": "4643:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3553,
                      "name": "IUniswapV2Router02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11088,
                      "src": "4624:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$11088_$",
                        "typeString": "type(contract IUniswapV2Router02)"
                      }
                    },
                    "id": 3555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4624:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4586:78:20"
                },
                {
                  "expression": {
                    "id": 3559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3557,
                      "name": "uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3404,
                      "src": "4678:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3558,
                      "name": "_uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3552,
                      "src": "4694:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "4678:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 3560,
                  "nodeType": "ExpressionStatement",
                  "src": "4678:32:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3564,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4741:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4733:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3562,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4733:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4733:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3568,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3404,
                            "src": "4756:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 3567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4748:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3566,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4748:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4748:22:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3570,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3435,
                        "src": "4772:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3561,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10889,
                      "src": "4724:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4724:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3572,
                  "nodeType": "ExpressionStatement",
                  "src": "4724:62:20"
                },
                {
                  "expression": {
                    "id": 3588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3573,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3406,
                      "src": "4800:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3582,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4879:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                "typeString": "contract CardinalToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                "typeString": "contract CardinalToken"
                              }
                            ],
                            "id": 3581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4871:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3580,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4871:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4871:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3584,
                              "name": "_uniswapV2Router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3552,
                              "src": "4886:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 3585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "WETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10981,
                            "src": "4886:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                              "typeString": "function () pure external returns (address)"
                            }
                          },
                          "id": 3586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4886:23:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 3575,
                                  "name": "_uniswapV2Router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3552,
                                  "src": "4832:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                },
                                "id": 3576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "factory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10976,
                                "src": "4832:24:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                  "typeString": "function () pure external returns (address)"
                                }
                              },
                              "id": 3577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4832:26:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3574,
                            "name": "IUniswapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10967,
                            "src": "4814:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$10967_$",
                              "typeString": "type(contract IUniswapV2Factory)"
                            }
                          },
                          "id": 3578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4814:45:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$10967",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 3579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createPair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10966,
                        "src": "4814:56:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                          "typeString": "function (address,address) external returns (address)"
                        }
                      },
                      "id": 3587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4814:96:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4800:110:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3589,
                  "nodeType": "ExpressionStatement",
                  "src": "4800:110:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3596,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3404,
                            "src": "4960:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 3595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4952:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3594,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4952:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4952:22:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4981:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3599,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4981:7:20",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 3598,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4976:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4976:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 3602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4976:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3591,
                            "name": "uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3406,
                            "src": "4931:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3590,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12143,
                          "src": "4924:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12143_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4924:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12143",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12112,
                      "src": "4924:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4924:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3604,
                  "nodeType": "ExpressionStatement",
                  "src": "4924:70:20"
                },
                {
                  "expression": {
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3605,
                        "name": "pairAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "5009:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3607,
                      "indexExpression": {
                        "id": 3606,
                        "name": "uniswapPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3406,
                        "src": "5023:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5009:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5038:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5009:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3610,
                  "nodeType": "ExpressionStatement",
                  "src": "5009:33:20"
                }
              ]
            },
            "id": 3612,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43617264696e616c546f6b656e",
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3565:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8b03f4f4c16dd037ba2c407eb6d886722dbec6e3911190273577b8917f56ba3f",
                      "typeString": "literal_string \"CardinalToken\""
                    },
                    "value": "CardinalToken"
                  },
                  {
                    "hexValue": "43524e4c",
                    "id": 3453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3582:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_beea0adffe6dc677ad15c6f15df001e1abd4243d7bec8bc4a12b5140df9ea0b0",
                      "typeString": "literal_string \"CRNL\""
                    },
                    "value": "CRNL"
                  }
                ],
                "id": 3454,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3451,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10955,
                  "src": "3559:5:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "3559:30:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3435,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "3242:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3234:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3234:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3437,
                  "mutability": "mutable",
                  "name": "_preSaleAddress",
                  "nameLocation": "3273:15:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3265:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3439,
                  "mutability": "mutable",
                  "name": "_burnWalletAddress",
                  "nameLocation": "3307:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3299:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3299:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3441,
                  "mutability": "mutable",
                  "name": "_liquidityWalletAddress",
                  "nameLocation": "3343:23:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3335:31:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3443,
                  "mutability": "mutable",
                  "name": "_memberGiveawayWalletAddress",
                  "nameLocation": "3392:28:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3376:44:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3445,
                  "mutability": "mutable",
                  "name": "_marketingWalletAddress",
                  "nameLocation": "3446:23:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3430:39:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3430:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3447,
                  "mutability": "mutable",
                  "name": "_developerWalletAddress",
                  "nameLocation": "3495:23:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3479:39:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3479:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3449,
                  "mutability": "mutable",
                  "name": "_uniswapRouterAddress",
                  "nameLocation": "3536:21:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3528:29:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3528:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3224:334:20"
            },
            "returnParameters": {
              "id": 3455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3590:0:20"
            },
            "scope": 4441,
            "src": "3213:1836:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3623,
              "nodeType": "Block",
              "src": "5205:37:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3620,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "5230:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CardinalToken_$4441",
                          "typeString": "contract CardinalToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CardinalToken_$4441",
                          "typeString": "contract CardinalToken"
                        }
                      ],
                      "id": 3619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5222:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3618,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5222:7:20",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5222:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3617,
                  "id": 3622,
                  "nodeType": "Return",
                  "src": "5215:20:20"
                }
              ]
            },
            "documentation": {
              "id": 3613,
              "nodeType": "StructuredDocumentation",
              "src": "5055:84:20",
              "text": " @dev Returns the contract address\n @return contract address"
            },
            "functionSelector": "32a2c5d0",
            "id": 3624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nameLocation": "5153:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5171:2:20"
            },
            "returnParameters": {
              "id": 3617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3624,
                  "src": "5197:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5196:9:20"
            },
            "scope": 4441,
            "src": "5144:98:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3638,
              "nodeType": "Block",
              "src": "5439:46:20",
              "statements": [
                {
                  "expression": {
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3632,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "5449:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3634,
                      "indexExpression": {
                        "id": 3633,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3627,
                        "src": "5466:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5449:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5474:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5449:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "5449:29:20"
                }
              ]
            },
            "documentation": {
              "id": 3625,
              "nodeType": "StructuredDocumentation",
              "src": "5248:124:20",
              "text": " @dev Adds a user to be excluded from fees.\n @param user address of the user to be excluded from fees."
            },
            "functionSelector": "78c1d245",
            "id": 3639,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3630,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3629,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "5429:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5429:9:20"
              }
            ],
            "name": "excludeUserFromFees",
            "nameLocation": "5386:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3627,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5414:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "5406:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5406:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5405:14:20"
            },
            "returnParameters": {
              "id": 3631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5439:0:20"
            },
            "scope": 4441,
            "src": "5377:108:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3648,
              "nodeType": "Block",
              "src": "5694:39:20",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3645,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "5711:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 3646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "5711:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3644,
                  "id": 3647,
                  "nodeType": "Return",
                  "src": "5704:22:20"
                }
              ]
            },
            "documentation": {
              "id": 3640,
              "nodeType": "StructuredDocumentation",
              "src": "5491:135:20",
              "text": " @dev Gets the current timestamp, used for testing + verification\n @return the the timestamp of the current block"
            },
            "functionSelector": "6c9230db",
            "id": 3649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTimestamp",
            "nameLocation": "5640:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5659:2:20"
            },
            "returnParameters": {
              "id": 3644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3643,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3649,
                  "src": "5685:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5685:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5684:9:20"
            },
            "scope": 4441,
            "src": "5631:102:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3663,
              "nodeType": "Block",
              "src": "5948:47:20",
              "statements": [
                {
                  "expression": {
                    "id": 3661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3657,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "5958:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3659,
                      "indexExpression": {
                        "id": 3658,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3652,
                        "src": "5975:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5958:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5983:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5958:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3662,
                  "nodeType": "ExpressionStatement",
                  "src": "5958:30:20"
                }
              ]
            },
            "documentation": {
              "id": 3650,
              "nodeType": "StructuredDocumentation",
              "src": "5739:143:20",
              "text": " @dev Removes a user from the fee exclusion.\n @param user address of the user than will now have to pay transaction fees."
            },
            "functionSelector": "bbeaa1f8",
            "id": 3664,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3654,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "5938:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5938:9:20"
              }
            ],
            "name": "includeUsersInFees",
            "nameLocation": "5896:18:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3652,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5923:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3664,
                  "src": "5915:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5914:14:20"
            },
            "returnParameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5948:0:20"
            },
            "scope": 4441,
            "src": "5887:108:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10491
            ],
            "body": {
              "id": 3862,
              "nodeType": "Block",
              "src": "6347:2616:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6413:24:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3676,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3370,
                            "src": "6414:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3679,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3677,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11575,
                              "src": "6424:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6424:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6414:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6439:131:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6410efe56cb606d9fff98ba1f1ad7463072ee575be6e8ee88235d0988510a3f",
                          "typeString": "literal_string \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6410efe56cb606d9fff98ba1f1ad7463072ee575be6e8ee88235d0988510a3f",
                          "typeString": "literal_string \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6405:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6405:166:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3683,
                  "nodeType": "ExpressionStatement",
                  "src": "6405:166:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6640:21:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3685,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3370,
                            "src": "6641:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3687,
                          "indexExpression": {
                            "id": 3686,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3667,
                            "src": "6651:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6641:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f752061726520747279696e6720746f2073656e642043617264696e616c20546f6b656e7320746f20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6663:180:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b243ef0e2acf994586646820eb9083d74218066d7bbf0b3dce04357f56c9a03f",
                          "typeString": "literal_string \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b243ef0e2acf994586646820eb9083d74218066d7bbf0b3dce04357f56c9a03f",
                          "typeString": "literal_string \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6632:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6632:212:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3691,
                  "nodeType": "ExpressionStatement",
                  "src": "6632:212:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 3692,
                          "name": "pairAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3378,
                          "src": "6977:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3695,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3693,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11575,
                            "src": "6991:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6991:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6977:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "id": 3700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7008:31:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3696,
                            "name": "excludedFromFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3366,
                            "src": "7009:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3699,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3697,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11575,
                              "src": "7026:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7026:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7009:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "6977:62:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 3705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7043:28:20",
                      "subExpression": {
                        "baseExpression": {
                          "id": 3702,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3366,
                          "src": "7044:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3704,
                        "indexExpression": {
                          "id": 3703,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3667,
                          "src": "7061:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7044:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6977:94:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3724,
                  "nodeType": "IfStatement",
                  "src": "6973:272:20",
                  "trueBody": {
                    "id": 3723,
                    "nodeType": "Block",
                    "src": "7073:172:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 3709,
                                          "name": "recipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3667,
                                          "src": "7106:9:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3708,
                                        "name": "balanceOf",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10466,
                                        "src": "7096:9:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view returns (uint256)"
                                        }
                                      },
                                      "id": 3710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7096:20:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 3711,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3669,
                                      "src": "7119:6:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7096:29:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3713,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7095:31:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3717,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 3714,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10452,
                                        "src": "7130:11:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 3715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7130:13:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "3230",
                                      "id": 3716,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7146:2:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      },
                                      "value": "20"
                                    },
                                    "src": "7130:18:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 3718,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7129:20:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7095:54:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752063616e27742068617665206d6f7265207468616e203525206f662074686520746f74616c2043617264696e616c20546f6b656e20737570706c7920616674657220612044455820737761702e",
                              "id": 3720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7151:82:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c1f096d03f5c997858f2265dfac591a3250500aa4f3e28086d7bdc9da983d7c9",
                                "typeString": "literal_string \"You can't have more than 5% of the total Cardinal Token supply after a DEX swap.\""
                              },
                              "value": "You can't have more than 5% of the total Cardinal Token supply after a DEX swap."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c1f096d03f5c997858f2265dfac591a3250500aa4f3e28086d7bdc9da983d7c9",
                                "typeString": "literal_string \"You can't have more than 5% of the total Cardinal Token supply after a DEX swap.\""
                              }
                            ],
                            "id": 3707,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7087:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7087:147:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3722,
                        "nodeType": "ExpressionStatement",
                        "src": "7087:147:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3725,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "7350:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3728,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3726,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11575,
                          "src": "7367:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7367:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7350:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 3729,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "7384:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3731,
                      "indexExpression": {
                        "id": 3730,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3667,
                        "src": "7401:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7384:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7350:61:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3743,
                  "nodeType": "IfStatement",
                  "src": "7346:159:20",
                  "trueBody": {
                    "id": 3742,
                    "nodeType": "Block",
                    "src": "7413:92:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3734,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11575,
                                "src": "7437:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7437:12:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3736,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3667,
                              "src": "7451:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3737,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3669,
                              "src": "7462:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3733,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10716,
                            "src": "7427:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7427:42:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3739,
                        "nodeType": "ExpressionStatement",
                        "src": "7427:42:20"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7490:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3674,
                        "id": 3741,
                        "nodeType": "Return",
                        "src": "7483:11:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3745,
                      "mutability": "mutable",
                      "name": "memberGiveawayFee",
                      "nameLocation": "7567:17:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3862,
                      "src": "7559:25:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3744,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7559:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3752,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3746,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3669,
                            "src": "7588:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3747,
                            "name": "memberGiveawayFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3395,
                            "src": "7597:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7588:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3749,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7587:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7625:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "7587:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7559:69:20"
                },
                {
                  "assignments": [
                    3754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3754,
                      "mutability": "mutable",
                      "name": "marketingFee",
                      "nameLocation": "7689:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3862,
                      "src": "7681:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7681:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3761,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3755,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3669,
                            "src": "7705:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3756,
                            "name": "marketingFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3398,
                            "src": "7714:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7705:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3758,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7704:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7737:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "7704:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7681:59:20"
                },
                {
                  "assignments": [
                    3763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3763,
                      "mutability": "mutable",
                      "name": "developerFee",
                      "nameLocation": "7801:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3862,
                      "src": "7793:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7793:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3770,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3764,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3669,
                            "src": "7817:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3765,
                            "name": "developerFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3401,
                            "src": "7826:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7817:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3767,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7816:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7849:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "7816:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7793:59:20"
                },
                {
                  "assignments": [
                    3772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3772,
                      "mutability": "mutable",
                      "name": "contractFee",
                      "nameLocation": "7955:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3862,
                      "src": "7947:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3771,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7947:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3776,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3773,
                      "name": "marketingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3754,
                      "src": "7969:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3774,
                      "name": "developerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3763,
                      "src": "7984:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7969:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7947:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3778,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11575,
                          "src": "8100:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8100:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3780,
                        "name": "memberGiveawayWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "8114:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3781,
                        "name": "memberGiveawayFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3745,
                        "src": "8143:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3777,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10716,
                      "src": "8090:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8090:71:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3783,
                  "nodeType": "ExpressionStatement",
                  "src": "8090:71:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3785,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11575,
                          "src": "8181:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8181:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3789,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8203:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8195:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8195:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8195:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3791,
                        "name": "contractFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3772,
                        "src": "8210:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3784,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10716,
                      "src": "8171:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8171:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3793,
                  "nodeType": "ExpressionStatement",
                  "src": "8171:51:20"
                },
                {
                  "assignments": [
                    3795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3795,
                      "mutability": "mutable",
                      "name": "valueAfterFees",
                      "nameLocation": "8302:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3862,
                      "src": "8294:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3794,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8294:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3801,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3796,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3669,
                        "src": "8319:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3797,
                        "name": "contractFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3772,
                        "src": "8328:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8319:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3799,
                      "name": "memberGiveawayFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3745,
                      "src": "8342:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8319:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8294:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3803,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11575,
                          "src": "8379:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8379:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3805,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3667,
                        "src": "8393:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3806,
                        "name": "valueAfterFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3795,
                        "src": "8404:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3802,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10716,
                      "src": "8369:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8369:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3808,
                  "nodeType": "ExpressionStatement",
                  "src": "8369:50:20"
                },
                {
                  "assignments": [
                    3810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3810,
                      "mutability": "mutable",
                      "name": "contractCardinalTokenBalance",
                      "nameLocation": "8438:28:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3862,
                      "src": "8430:36:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3809,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8430:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3817,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3814,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8487:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8479:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3812,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8479:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8479:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3811,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10466,
                      "src": "8469:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 3816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8469:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8430:63:20"
                },
                {
                  "condition": {
                    "id": 3822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8508:28:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3818,
                        "name": "pairAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "8509:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3821,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3819,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11575,
                          "src": "8523:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8523:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8509:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3859,
                  "nodeType": "IfStatement",
                  "src": "8504:431:20",
                  "trueBody": {
                    "id": 3858,
                    "nodeType": "Block",
                    "src": "8538:397:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3823,
                            "name": "contractCardinalTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3810,
                            "src": "8556:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3825,
                                  "name": "uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3406,
                                  "src": "8597:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3824,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10466,
                                "src": "8587:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 3826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8587:22:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3827,
                              "name": "contractTokenDivisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3409,
                              "src": "8612:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8587:45:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8556:76:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3836,
                        "nodeType": "IfStatement",
                        "src": "8552:174:20",
                        "trueBody": {
                          "id": 3835,
                          "nodeType": "Block",
                          "src": "8634:92:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3831,
                                    "name": "contractCardinalTokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3810,
                                    "src": "8679:28:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 3832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8709:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3830,
                                  "name": "swapCardinalTokensForMatic",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4125,
                                  "src": "8652:26:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 3833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8652:59:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3834,
                              "nodeType": "ExpressionStatement",
                              "src": "8652:59:20"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3838
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3838,
                            "mutability": "mutable",
                            "name": "contractMaticBalance",
                            "nameLocation": "8764:20:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 3858,
                            "src": "8756:28:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3837,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8756:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3844,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3841,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8795:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                  "typeString": "contract CardinalToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                  "typeString": "contract CardinalToken"
                                }
                              ],
                              "id": 3840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8787:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3839,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8787:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8787:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8787:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8756:52:20"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3845,
                            "name": "contractMaticBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3838,
                            "src": "8826:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8849:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8826:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3857,
                        "nodeType": "IfStatement",
                        "src": "8822:103:20",
                        "trueBody": {
                          "id": 3856,
                          "nodeType": "Block",
                          "src": "8852:73:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3851,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "8896:4:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                            "typeString": "contract CardinalToken"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                            "typeString": "contract CardinalToken"
                                          }
                                        ],
                                        "id": 3850,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8888:7:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3849,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8888:7:20",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3852,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8888:13:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3853,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "8888:21:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3848,
                                  "name": "sendFeesToWallets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4189,
                                  "src": "8870:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 3854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8870:40:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3855,
                              "nodeType": "ExpressionStatement",
                              "src": "8870:40:20"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8952:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3674,
                  "id": 3861,
                  "nodeType": "Return",
                  "src": "8945:11:20"
                }
              ]
            },
            "documentation": {
              "id": 3665,
              "nodeType": "StructuredDocumentation",
              "src": "6001:257:20",
              "text": " @dev Overrides the BEP20 transfer function to include transaction fees.\n @param recipient the recipient of the transfer\n @param amount the amount to be transfered\n @return bool representing if the transfer was successful"
            },
            "functionSelector": "a9059cbb",
            "id": 3863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "6272:8:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3671,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6323:8:20"
            },
            "parameters": {
              "id": 3670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3667,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6289:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "6281:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6281:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3669,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6308:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "6300:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6300:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6280:35:20"
            },
            "returnParameters": {
              "id": 3674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "6341:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3672,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6341:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6340:6:20"
            },
            "scope": 4441,
            "src": "6263:2700:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10567
            ],
            "body": {
              "id": 4052,
              "nodeType": "Block",
              "src": "9392:2608:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9458:24:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3877,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3370,
                            "src": "9459:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3880,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3878,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11575,
                              "src": "9469:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9469:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9459:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9484:131:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6410efe56cb606d9fff98ba1f1ad7463072ee575be6e8ee88235d0988510a3f",
                          "typeString": "literal_string \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6410efe56cb606d9fff98ba1f1ad7463072ee575be6e8ee88235d0988510a3f",
                          "typeString": "literal_string \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9450:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9450:166:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3884,
                  "nodeType": "ExpressionStatement",
                  "src": "9450:166:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9716:16:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3886,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3370,
                            "src": "9717:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3888,
                          "indexExpression": {
                            "id": 3887,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3866,
                            "src": "9727:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9717:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f7527726520747279696e6720746f207370656e64207468652043617264696e616c20546f6b656e732066726f6d20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9734:186:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd7162bf8ad8c716db9dde5383bbc2b29cc163c10d3c3c8e25f9a721273a1e43",
                          "typeString": "literal_string \"The address you're trying to spend the Cardinal Tokens from has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "The address you're trying to spend the Cardinal Tokens from has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd7162bf8ad8c716db9dde5383bbc2b29cc163c10d3c3c8e25f9a721273a1e43",
                          "typeString": "literal_string \"The address you're trying to spend the Cardinal Tokens from has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9708:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9708:213:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3892,
                  "nodeType": "ExpressionStatement",
                  "src": "9708:213:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9990:14:20",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3894,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3370,
                            "src": "9991:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3896,
                          "indexExpression": {
                            "id": 3895,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3868,
                            "src": "10001:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9991:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f752061726520747279696e6720746f2073656e642043617264696e616c20546f6b656e7320746f20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e67207468652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e74616374207468652043617264696e616c20486f757365207465616d2e",
                        "id": 3898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10006:180:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b243ef0e2acf994586646820eb9083d74218066d7bbf0b3dce04357f56c9a03f",
                          "typeString": "literal_string \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        },
                        "value": "The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b243ef0e2acf994586646820eb9083d74218066d7bbf0b3dce04357f56c9a03f",
                          "typeString": "literal_string \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\""
                        }
                      ],
                      "id": 3893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9982:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9982:205:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3900,
                  "nodeType": "ExpressionStatement",
                  "src": "9982:205:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 3901,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3366,
                          "src": "10304:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3903,
                        "indexExpression": {
                          "id": 3902,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "10321:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10304:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 3904,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3366,
                          "src": "10330:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3906,
                        "indexExpression": {
                          "id": 3905,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3868,
                          "src": "10347:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10330:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10304:46:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 3908,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "10354:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3911,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3909,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11575,
                          "src": "10371:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10371:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10354:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10304:80:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3929,
                  "nodeType": "IfStatement",
                  "src": "10300:220:20",
                  "trueBody": {
                    "id": 3928,
                    "nodeType": "Block",
                    "src": "10386:134:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3914,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3866,
                              "src": "10416:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3915,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11575,
                                "src": "10422:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10422:12:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3917,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3870,
                              "src": "10436:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3913,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10932,
                            "src": "10400:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10400:43:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3919,
                        "nodeType": "ExpressionStatement",
                        "src": "10400:43:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3921,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3866,
                              "src": "10467:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3922,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3868,
                              "src": "10473:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3923,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3870,
                              "src": "10477:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3920,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10716,
                            "src": "10457:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10457:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3925,
                        "nodeType": "ExpressionStatement",
                        "src": "10457:27:20"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10505:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3875,
                        "id": 3927,
                        "nodeType": "Return",
                        "src": "10498:11:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3931
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3931,
                      "mutability": "mutable",
                      "name": "memberGiveawayFee",
                      "nameLocation": "10582:17:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4052,
                      "src": "10574:25:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3930,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10574:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3938,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3932,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3870,
                            "src": "10603:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3933,
                            "name": "memberGiveawayFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3395,
                            "src": "10612:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10603:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3935,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10602:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10640:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10602:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10574:69:20"
                },
                {
                  "assignments": [
                    3940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3940,
                      "mutability": "mutable",
                      "name": "marketingFee",
                      "nameLocation": "10704:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4052,
                      "src": "10696:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3939,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10696:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3947,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3941,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3870,
                            "src": "10720:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3942,
                            "name": "marketingFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3398,
                            "src": "10729:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10720:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3944,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10719:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10752:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10719:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10696:59:20"
                },
                {
                  "assignments": [
                    3949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3949,
                      "mutability": "mutable",
                      "name": "developerFee",
                      "nameLocation": "10816:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4052,
                      "src": "10808:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3948,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10808:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3956,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3950,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3870,
                            "src": "10832:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3951,
                            "name": "developerFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3401,
                            "src": "10841:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10832:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3953,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10831:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10864:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10831:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10808:59:20"
                },
                {
                  "assignments": [
                    3958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3958,
                      "mutability": "mutable",
                      "name": "contractFee",
                      "nameLocation": "10970:11:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4052,
                      "src": "10962:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3957,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10962:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3962,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3959,
                      "name": "marketingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3940,
                      "src": "10984:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3960,
                      "name": "developerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3949,
                      "src": "10999:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10984:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10962:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3964,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "11121:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3965,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11575,
                          "src": "11127:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11127:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3967,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3870,
                        "src": "11141:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3963,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10932,
                      "src": "11105:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11105:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3969,
                  "nodeType": "ExpressionStatement",
                  "src": "11105:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3971,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "11168:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3972,
                        "name": "memberGiveawayWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "11174:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3973,
                        "name": "memberGiveawayFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3931,
                        "src": "11203:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3970,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10716,
                      "src": "11158:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11158:63:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3975,
                  "nodeType": "ExpressionStatement",
                  "src": "11158:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3977,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "11241:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3980,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11255:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 3979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11247:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3978,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11247:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11247:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3982,
                        "name": "contractFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3958,
                        "src": "11262:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3976,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10716,
                      "src": "11231:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11231:43:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3984,
                  "nodeType": "ExpressionStatement",
                  "src": "11231:43:20"
                },
                {
                  "assignments": [
                    3986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3986,
                      "mutability": "mutable",
                      "name": "valueAfterFees",
                      "nameLocation": "11354:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4052,
                      "src": "11346:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3985,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11346:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3992,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3987,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3870,
                        "src": "11371:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3988,
                        "name": "contractFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3958,
                        "src": "11380:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11371:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3990,
                      "name": "memberGiveawayFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3931,
                      "src": "11394:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11371:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11346:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3994,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "11431:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3995,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3868,
                        "src": "11437:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3996,
                        "name": "valueAfterFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3986,
                        "src": "11441:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3993,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10716,
                      "src": "11421:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11421:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3998,
                  "nodeType": "ExpressionStatement",
                  "src": "11421:35:20"
                },
                {
                  "assignments": [
                    4000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4000,
                      "mutability": "mutable",
                      "name": "contractCardinalTokenBalance",
                      "nameLocation": "11475:28:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4052,
                      "src": "11467:36:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11467:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4007,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4004,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11524:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 4003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11516:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4002,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11516:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11516:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4001,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10466,
                      "src": "11506:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 4006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11506:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11467:63:20"
                },
                {
                  "condition": {
                    "id": 4012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "11545:28:20",
                    "subExpression": {
                      "baseExpression": {
                        "id": 4008,
                        "name": "pairAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "11546:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4011,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4009,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11575,
                          "src": "11560:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11560:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11546:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4049,
                  "nodeType": "IfStatement",
                  "src": "11541:431:20",
                  "trueBody": {
                    "id": 4048,
                    "nodeType": "Block",
                    "src": "11575:397:20",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4013,
                            "name": "contractCardinalTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4000,
                            "src": "11593:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 4015,
                                  "name": "uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3406,
                                  "src": "11634:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4014,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10466,
                                "src": "11624:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 4016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11624:22:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 4017,
                              "name": "contractTokenDivisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3409,
                              "src": "11649:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11624:45:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11593:76:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4026,
                        "nodeType": "IfStatement",
                        "src": "11589:174:20",
                        "trueBody": {
                          "id": 4025,
                          "nodeType": "Block",
                          "src": "11671:92:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4021,
                                    "name": "contractCardinalTokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4000,
                                    "src": "11716:28:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 4022,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11746:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 4020,
                                  "name": "swapCardinalTokensForMatic",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4125,
                                  "src": "11689:26:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 4023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11689:59:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4024,
                              "nodeType": "ExpressionStatement",
                              "src": "11689:59:20"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4028
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4028,
                            "mutability": "mutable",
                            "name": "contractMaticBalance",
                            "nameLocation": "11801:20:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 4048,
                            "src": "11793:28:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4027,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11793:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4034,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 4031,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11832:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                  "typeString": "contract CardinalToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                  "typeString": "contract CardinalToken"
                                }
                              ],
                              "id": 4030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11824:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4029,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11824:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11824:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "11824:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11793:52:20"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4035,
                            "name": "contractMaticBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4028,
                            "src": "11863:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11886:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11863:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4047,
                        "nodeType": "IfStatement",
                        "src": "11859:103:20",
                        "trueBody": {
                          "id": 4046,
                          "nodeType": "Block",
                          "src": "11889:73:20",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 4041,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "11933:4:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                            "typeString": "contract CardinalToken"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                            "typeString": "contract CardinalToken"
                                          }
                                        ],
                                        "id": 4040,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11925:7:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 4039,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11925:7:20",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 4042,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11925:13:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 4043,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "11925:21:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4038,
                                  "name": "sendFeesToWallets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4189,
                                  "src": "11907:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 4044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11907:40:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4045,
                              "nodeType": "ExpressionStatement",
                              "src": "11907:40:20"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11989:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3875,
                  "id": 4051,
                  "nodeType": "Return",
                  "src": "11982:11:20"
                }
              ]
            },
            "documentation": {
              "id": 3864,
              "nodeType": "StructuredDocumentation",
              "src": "8969:323:20",
              "text": " @dev Overrides the BEP20 transferFrom function to include transaction fees.\n @param from the address from where the tokens are coming from\n @param to the recipient of the transfer\n @param amount the amount to be transfered\n @return bool representing if the transfer was successful"
            },
            "functionSelector": "23b872dd",
            "id": 4053,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "9306:12:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3872,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9368:8:20"
            },
            "parameters": {
              "id": 3871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3866,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9327:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4053,
                  "src": "9319:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9319:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3868,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9341:2:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4053,
                  "src": "9333:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9333:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3870,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9353:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4053,
                  "src": "9345:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9345:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9318:42:20"
            },
            "returnParameters": {
              "id": 3875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4053,
                  "src": "9386:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3873,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9386:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9385:6:20"
            },
            "scope": 4441,
            "src": "9297:2703:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4124,
              "nodeType": "Block",
              "src": "12318:480:20",
              "statements": [
                {
                  "assignments": [
                    4065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4065,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "12345:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4124,
                      "src": "12328:21:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4063,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12328:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4064,
                        "nodeType": "ArrayTypeName",
                        "src": "12328:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4071,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 4069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12366:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 4068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "12352:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4066,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12356:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4067,
                        "nodeType": "ArrayTypeName",
                        "src": "12356:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12352:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12328:40:20"
                },
                {
                  "expression": {
                    "id": 4079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4072,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "12378:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4074,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 4073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12383:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12378:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4077,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12396:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                            "typeString": "contract CardinalToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                            "typeString": "contract CardinalToken"
                          }
                        ],
                        "id": 4076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12388:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4075,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12388:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12388:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12378:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4080,
                  "nodeType": "ExpressionStatement",
                  "src": "12378:23:20"
                },
                {
                  "expression": {
                    "id": 4087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4081,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "12411:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4083,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 4082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12416:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12411:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 4084,
                          "name": "uniswapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3404,
                          "src": "12421:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 4085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10981,
                        "src": "12421:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 4086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12421:20:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12411:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4088,
                  "nodeType": "ExpressionStatement",
                  "src": "12411:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4092,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12468:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 4091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12460:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4090,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12460:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12460:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4096,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3404,
                            "src": "12483:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 4095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12475:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12475:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12475:22:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4098,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4056,
                        "src": "12499:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4089,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10889,
                      "src": "12451:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12451:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4100,
                  "nodeType": "ExpressionStatement",
                  "src": "12451:55:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4104,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4056,
                        "src": "12594:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4105,
                        "name": "minimumAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4058,
                        "src": "12614:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4106,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "12644:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12670:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CardinalToken_$4441",
                              "typeString": "contract CardinalToken"
                            }
                          ],
                          "id": 4108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12662:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12662:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12662:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4111,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12689:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12689:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4101,
                        "name": "uniswapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "12516:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$11088",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 4103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11061,
                      "src": "12516:64:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                      }
                    },
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12516:198:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4114,
                  "nodeType": "ExpressionStatement",
                  "src": "12516:198:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4116,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4056,
                        "src": "12761:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4119,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "12777:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                "typeString": "contract CardinalToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                "typeString": "contract CardinalToken"
                              }
                            ],
                            "id": 4118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12769:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4117,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12769:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12769:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12769:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4115,
                      "name": "transactionFeesSwappedForMatic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3427,
                      "src": "12730:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12730:61:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4123,
                  "nodeType": "EmitStatement",
                  "src": "12725:66:20"
                }
              ]
            },
            "documentation": {
              "id": 4054,
              "nodeType": "StructuredDocumentation",
              "src": "12006:221:20",
              "text": " @dev Swaps Cardinal Tokens from transaction fees to Matic.\n @param amount the amount of Cardinal Tokens to swap\n @param minimumAmountOut the minimum amount of Matic to receive from the swap "
            },
            "id": 4125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapCardinalTokensForMatic",
            "nameLocation": "12241:26:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4056,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12276:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4125,
                  "src": "12268:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12268:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4058,
                  "mutability": "mutable",
                  "name": "minimumAmountOut",
                  "nameLocation": "12292:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4125,
                  "src": "12284:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12284:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12267:42:20"
            },
            "returnParameters": {
              "id": 4060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12318:0:20"
            },
            "scope": 4441,
            "src": "12232:566:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4188,
              "nodeType": "Block",
              "src": "12999:638:20",
              "statements": [
                {
                  "assignments": [
                    4132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4132,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "13017:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4188,
                      "src": "13009:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13009:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4136,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4133,
                      "name": "marketingFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3398,
                      "src": "13028:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 4134,
                      "name": "developerFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3401,
                      "src": "13050:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13028:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13009:60:20"
                },
                {
                  "assignments": [
                    4138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4138,
                      "mutability": "mutable",
                      "name": "marketingFee",
                      "nameLocation": "13087:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4188,
                      "src": "13079:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13079:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4145,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4139,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4128,
                            "src": "13103:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 4140,
                            "name": "marketingFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3398,
                            "src": "13112:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13103:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4142,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13102:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 4143,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4132,
                      "src": "13135:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13102:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13079:64:20"
                },
                {
                  "assignments": [
                    4147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4147,
                      "mutability": "mutable",
                      "name": "developerFee",
                      "nameLocation": "13161:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4188,
                      "src": "13153:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13153:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4154,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4148,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4128,
                            "src": "13177:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 4149,
                            "name": "developerFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3401,
                            "src": "13186:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13177:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4151,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13176:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 4152,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4132,
                      "src": "13209:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13176:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13153:64:20"
                },
                {
                  "assignments": [
                    4156,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4156,
                      "mutability": "mutable",
                      "name": "marketingSuccess",
                      "nameLocation": "13234:16:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4188,
                      "src": "13229:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4155,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13229:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4163,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 4161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13305:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 4157,
                          "name": "marketingWalletAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3388,
                          "src": "13256:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 4158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "13256:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 4160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 4159,
                          "name": "marketingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4138,
                          "src": "13291:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "13256:48:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 4162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13256:52:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13228:80:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4165,
                        "name": "marketingSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4156,
                        "src": "13326:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204d6174696320746f206d61726b6574696e672061646472657373",
                        "id": 4166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13344:43:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58dfc0b04e10a22c52298f3e2d0f0bfb5d5a2e343f6265a0ee1973466bce8b2d",
                          "typeString": "literal_string \"Failed to send Matic to marketing address\""
                        },
                        "value": "Failed to send Matic to marketing address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58dfc0b04e10a22c52298f3e2d0f0bfb5d5a2e343f6265a0ee1973466bce8b2d",
                          "typeString": "literal_string \"Failed to send Matic to marketing address\""
                        }
                      ],
                      "id": 4164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13318:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13318:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4168,
                  "nodeType": "ExpressionStatement",
                  "src": "13318:70:20"
                },
                {
                  "assignments": [
                    4170,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4170,
                      "mutability": "mutable",
                      "name": "developerSuccess",
                      "nameLocation": "13404:16:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4188,
                      "src": "13399:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4169,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13399:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4177,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 4175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13475:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 4171,
                          "name": "developerWalletAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3390,
                          "src": "13426:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 4172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "13426:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 4174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 4173,
                          "name": "developerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4147,
                          "src": "13461:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "13426:48:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 4176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13426:52:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13398:80:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4179,
                        "name": "developerSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4170,
                        "src": "13496:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204d6174696320746f20646576656c6f7065722061646472657373",
                        "id": 4180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13514:43:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af6be3d89a983e3674af961ff5c0b783f19b06b1421981a1ffaf6dc4772988f9",
                          "typeString": "literal_string \"Failed to send Matic to developer address\""
                        },
                        "value": "Failed to send Matic to developer address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af6be3d89a983e3674af961ff5c0b783f19b06b1421981a1ffaf6dc4772988f9",
                          "typeString": "literal_string \"Failed to send Matic to developer address\""
                        }
                      ],
                      "id": 4178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13488:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13488:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4182,
                  "nodeType": "ExpressionStatement",
                  "src": "13488:70:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4184,
                        "name": "marketingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4138,
                        "src": "13603:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4185,
                        "name": "developerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4147,
                        "src": "13617:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4183,
                      "name": "transactionFeeMaticDispersed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3433,
                      "src": "13574:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13574:56:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4187,
                  "nodeType": "EmitStatement",
                  "src": "13569:61:20"
                }
              ]
            },
            "documentation": {
              "id": 4126,
              "nodeType": "StructuredDocumentation",
              "src": "12804:139:20",
              "text": " @dev Sends Matic to transaction fee wallets after Cardinal Token swaps.\n @param amount the amount to be transfered"
            },
            "id": 4189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendFeesToWallets",
            "nameLocation": "12957:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4128,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12983:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "12975:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12975:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12974:16:20"
            },
            "returnParameters": {
              "id": 4130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12999:0:20"
            },
            "scope": 4441,
            "src": "12948:689:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4207,
              "nodeType": "Block",
              "src": "13840:118:20",
              "statements": [
                {
                  "assignments": [
                    4196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4196,
                      "mutability": "mutable",
                      "name": "contractMaticBalance",
                      "nameLocation": "13858:20:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4207,
                      "src": "13850:28:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13850:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4202,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 4199,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "13889:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                            "typeString": "contract CardinalToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                            "typeString": "contract CardinalToken"
                          }
                        ],
                        "id": 4198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13881:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13881:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13881:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13881:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13850:52:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4204,
                        "name": "contractMaticBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4196,
                        "src": "13930:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4203,
                      "name": "sendFeesToWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4189,
                      "src": "13912:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13912:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4206,
                  "nodeType": "ExpressionStatement",
                  "src": "13912:39:20"
                }
              ]
            },
            "documentation": {
              "id": 4190,
              "nodeType": "StructuredDocumentation",
              "src": "13643:141:20",
              "text": " @dev Sends Matic to transaction fee wallets manually as opposed to happening automatically after a certain level of volume"
            },
            "functionSelector": "7c13efd4",
            "id": 4208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4193,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4192,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "13830:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "13830:9:20"
              }
            ],
            "name": "disperseFeesManually",
            "nameLocation": "13798:20:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13818:2:20"
            },
            "returnParameters": {
              "id": 4194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13840:0:20"
            },
            "scope": 4441,
            "src": "13789:169:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4255,
              "nodeType": "Block",
              "src": "14530:410:20",
              "statements": [
                {
                  "condition": {
                    "id": 4220,
                    "name": "useAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4213,
                    "src": "14544:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4241,
                    "nodeType": "Block",
                    "src": "14646:176:20",
                    "statements": [
                      {
                        "assignments": [
                          4228
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4228,
                            "mutability": "mutable",
                            "name": "contractCardinalTokenBalance",
                            "nameLocation": "14668:28:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 4241,
                            "src": "14660:36:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4227,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14660:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4235,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4232,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14717:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                    "typeString": "contract CardinalToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CardinalToken_$4441",
                                    "typeString": "contract CardinalToken"
                                  }
                                ],
                                "id": 4231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14709:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4230,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14709:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14709:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4229,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10466,
                            "src": "14699:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 4234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14699:24:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14660:63:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4237,
                              "name": "contractCardinalTokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4228,
                              "src": "14764:28:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4238,
                              "name": "minimumAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4215,
                              "src": "14794:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4236,
                            "name": "swapCardinalTokensForMatic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4125,
                            "src": "14737:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 4239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14737:74:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4240,
                        "nodeType": "ExpressionStatement",
                        "src": "14737:74:20"
                      }
                    ]
                  },
                  "id": 4242,
                  "nodeType": "IfStatement",
                  "src": "14540:282:20",
                  "trueBody": {
                    "id": 4226,
                    "nodeType": "Block",
                    "src": "14555:77:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4222,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4211,
                              "src": "14596:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4223,
                              "name": "minimumAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4215,
                              "src": "14604:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4221,
                            "name": "swapCardinalTokensForMatic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4125,
                            "src": "14569:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 4224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14569:52:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4225,
                        "nodeType": "ExpressionStatement",
                        "src": "14569:52:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4244,
                      "mutability": "mutable",
                      "name": "contractMaticBalance",
                      "nameLocation": "14840:20:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4255,
                      "src": "14832:28:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14832:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4250,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 4247,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "14871:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                            "typeString": "contract CardinalToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CardinalToken_$4441",
                            "typeString": "contract CardinalToken"
                          }
                        ],
                        "id": 4246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14863:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14863:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14863:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "14863:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14832:52:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4252,
                        "name": "contractMaticBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4244,
                        "src": "14912:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4251,
                      "name": "sendFeesToWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4189,
                      "src": "14894:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14894:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4254,
                  "nodeType": "ExpressionStatement",
                  "src": "14894:39:20"
                }
              ]
            },
            "documentation": {
              "id": 4209,
              "nodeType": "StructuredDocumentation",
              "src": "13964:440:20",
              "text": " @dev Swaps all Cardinal Tokens in the contract for Matic and then disperses those funds to the transaction fee wallets.\n @param amount the amount of Cardinal Tokens in the contract to swap for Matic\n @param useAmount boolean to determine if the amount sent in is swapped for Matic or if the entire contract balance is swapped\n @param minimumAmountOut the minimum Matic output for the Cardinal Token swap"
            },
            "functionSelector": "744da8b7",
            "id": 4256,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4218,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4217,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "14520:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "14520:9:20"
              }
            ],
            "name": "swapCardinalTokensForMaticManually",
            "nameLocation": "14418:34:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4211,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14461:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4256,
                  "src": "14453:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14453:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4213,
                  "mutability": "mutable",
                  "name": "useAmount",
                  "nameLocation": "14474:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4256,
                  "src": "14469:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4212,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14469:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4215,
                  "mutability": "mutable",
                  "name": "minimumAmountOut",
                  "nameLocation": "14493:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4256,
                  "src": "14485:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14485:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14452:58:20"
            },
            "returnParameters": {
              "id": 4219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14530:0:20"
            },
            "scope": 4441,
            "src": "14409:531:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4259,
              "nodeType": "Block",
              "src": "14973:2:20",
              "statements": []
            },
            "id": 4260,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14953:2:20"
            },
            "returnParameters": {
              "id": 4258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14973:0:20"
            },
            "scope": 4441,
            "src": "14946:29:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4272,
              "nodeType": "Block",
              "src": "15274:50:20",
              "statements": [
                {
                  "expression": {
                    "id": 4270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4268,
                      "name": "contractTokenDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3409,
                      "src": "15284:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4269,
                      "name": "newDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4263,
                      "src": "15307:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15284:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4271,
                  "nodeType": "ExpressionStatement",
                  "src": "15284:33:20"
                }
              ]
            },
            "documentation": {
              "id": 4261,
              "nodeType": "StructuredDocumentation",
              "src": "14981:216:20",
              "text": " @dev Sets the value that determines how many Cardinal Tokens need to be in the contract before it's swapped for Matic.\n @param newDivisor the new divisor value to determine the swap threshold"
            },
            "functionSelector": "560493b3",
            "id": 4273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4266,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4265,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "15264:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "15264:9:20"
              }
            ],
            "name": "setContractTokenDivisor",
            "nameLocation": "15211:23:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4263,
                  "mutability": "mutable",
                  "name": "newDivisor",
                  "nameLocation": "15243:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4273,
                  "src": "15235:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15235:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15234:20:20"
            },
            "returnParameters": {
              "id": 4267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15274:0:20"
            },
            "scope": 4441,
            "src": "15202:122:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4289,
              "nodeType": "Block",
              "src": "15679:46:20",
              "statements": [
                {
                  "expression": {
                    "id": 4287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4283,
                        "name": "blacklist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3370,
                        "src": "15689:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4285,
                      "indexExpression": {
                        "id": 4284,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4276,
                        "src": "15699:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15689:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4286,
                      "name": "blacklisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4278,
                      "src": "15707:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15689:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4288,
                  "nodeType": "ExpressionStatement",
                  "src": "15689:29:20"
                }
              ]
            },
            "documentation": {
              "id": 4274,
              "nodeType": "StructuredDocumentation",
              "src": "15330:268:20",
              "text": " @dev Updates the blacklist mapping for a given address\n @param user the address that is being added or removed from the blacklist\n @param blacklisted a boolean that determines if the given address is being added or removed from the blacklist"
            },
            "functionSelector": "fc2eb889",
            "id": 4290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4280,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "15669:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "15669:9:20"
              }
            ],
            "name": "updateBlackList",
            "nameLocation": "15612:15:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4276,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "15636:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4290,
                  "src": "15628:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15628:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4278,
                  "mutability": "mutable",
                  "name": "blacklisted",
                  "nameLocation": "15647:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4290,
                  "src": "15642:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15642:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15627:32:20"
            },
            "returnParameters": {
              "id": 4282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15679:0:20"
            },
            "scope": 4441,
            "src": "15603:122:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4313,
              "nodeType": "Block",
              "src": "16032:275:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4299,
                          "name": "newMemberGiveawayTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4293,
                          "src": "16050:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 4300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16085:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "16050:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206d656d626572206769766561776179207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e2035252e",
                        "id": 4302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16088:60:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb2c7a3ff7ef9c39840511404abc7590623ceb341df315bdc4d47a4c6202800c",
                          "typeString": "literal_string \"The member giveaway transaction fee can't be more than 5%.\""
                        },
                        "value": "The member giveaway transaction fee can't be more than 5%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb2c7a3ff7ef9c39840511404abc7590623ceb341df315bdc4d47a4c6202800c",
                          "typeString": "literal_string \"The member giveaway transaction fee can't be more than 5%.\""
                        }
                      ],
                      "id": 4298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16042:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16042:107:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4304,
                  "nodeType": "ExpressionStatement",
                  "src": "16042:107:20"
                },
                {
                  "expression": {
                    "id": 4307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4305,
                      "name": "memberGiveawayFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3395,
                      "src": "16159:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4306,
                      "name": "newMemberGiveawayTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4293,
                      "src": "16186:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16159:58:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4308,
                  "nodeType": "ExpressionStatement",
                  "src": "16159:58:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4310,
                        "name": "newMemberGiveawayTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4293,
                        "src": "16268:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4309,
                      "name": "memberGiveawayTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3413,
                      "src": "16232:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16232:68:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4312,
                  "nodeType": "EmitStatement",
                  "src": "16227:73:20"
                }
              ]
            },
            "documentation": {
              "id": 4291,
              "nodeType": "StructuredDocumentation",
              "src": "15731:192:20",
              "text": " @dev Function to update the member giveaway transaction fee - can't be more than 5 percent\n @param newMemberGiveawayTransactionFee the new member giveaway transaction fee"
            },
            "functionSelector": "de77bfd9",
            "id": 4314,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4296,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4295,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "16022:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "16022:9:20"
              }
            ],
            "name": "updateMemberGiveawayTransactionFee",
            "nameLocation": "15937:34:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4293,
                  "mutability": "mutable",
                  "name": "newMemberGiveawayTransactionFee",
                  "nameLocation": "15980:31:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4314,
                  "src": "15972:39:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15972:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15971:41:20"
            },
            "returnParameters": {
              "id": 4297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16032:0:20"
            },
            "scope": 4441,
            "src": "15928:379:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4337,
              "nodeType": "Block",
              "src": "16587:244:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4323,
                          "name": "newMarketingTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4317,
                          "src": "16605:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 4324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16635:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "16605:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206d61726b6574696e67207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e2035252e",
                        "id": 4326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16638:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4482bba5fae1605d0ce6abebad666372287aded8b9b27bb6721e75ec1284c5e6",
                          "typeString": "literal_string \"The marketing transaction fee can't be more than 5%.\""
                        },
                        "value": "The marketing transaction fee can't be more than 5%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4482bba5fae1605d0ce6abebad666372287aded8b9b27bb6721e75ec1284c5e6",
                          "typeString": "literal_string \"The marketing transaction fee can't be more than 5%.\""
                        }
                      ],
                      "id": 4322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16597:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16597:96:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4328,
                  "nodeType": "ExpressionStatement",
                  "src": "16597:96:20"
                },
                {
                  "expression": {
                    "id": 4331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4329,
                      "name": "marketingFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3398,
                      "src": "16703:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4330,
                      "name": "newMarketingTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4317,
                      "src": "16725:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16703:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4332,
                  "nodeType": "ExpressionStatement",
                  "src": "16703:48:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4334,
                        "name": "newMarketingTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4317,
                        "src": "16797:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4333,
                      "name": "marketingTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3417,
                      "src": "16766:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16766:58:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4336,
                  "nodeType": "EmitStatement",
                  "src": "16761:63:20"
                }
              ]
            },
            "documentation": {
              "id": 4315,
              "nodeType": "StructuredDocumentation",
              "src": "16313:175:20",
              "text": " @dev Function to update the marketing transaction fee - can't be more than 5 percent\n @param newMarketingTransactionFee the new marketing transaction fee"
            },
            "functionSelector": "5b81c1a4",
            "id": 4338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4320,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4319,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "16577:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "16577:9:20"
              }
            ],
            "name": "updateMarketingTransactionFee",
            "nameLocation": "16502:29:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4317,
                  "mutability": "mutable",
                  "name": "newMarketingTransactionFee",
                  "nameLocation": "16540:26:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4338,
                  "src": "16532:34:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16532:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16531:36:20"
            },
            "returnParameters": {
              "id": 4321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16587:0:20"
            },
            "scope": 4441,
            "src": "16493:338:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4361,
              "nodeType": "Block",
              "src": "17111:244:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4347,
                          "name": "newDeveloperTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4341,
                          "src": "17129:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 4348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17159:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "17129:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520646576656c6f706572207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e2035252e",
                        "id": 4350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17162:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3203f85bd58d1f5b35aa72cbaa6e1972da45cef74f6c798c22fc35ae27773249",
                          "typeString": "literal_string \"The developer transaction fee can't be more than 5%.\""
                        },
                        "value": "The developer transaction fee can't be more than 5%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3203f85bd58d1f5b35aa72cbaa6e1972da45cef74f6c798c22fc35ae27773249",
                          "typeString": "literal_string \"The developer transaction fee can't be more than 5%.\""
                        }
                      ],
                      "id": 4346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17121:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17121:96:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4352,
                  "nodeType": "ExpressionStatement",
                  "src": "17121:96:20"
                },
                {
                  "expression": {
                    "id": 4355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4353,
                      "name": "developerFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3401,
                      "src": "17227:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4354,
                      "name": "newDeveloperTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4341,
                      "src": "17249:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17227:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4356,
                  "nodeType": "ExpressionStatement",
                  "src": "17227:48:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4358,
                        "name": "newDeveloperTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4341,
                        "src": "17321:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4357,
                      "name": "developerTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "17290:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17290:58:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4360,
                  "nodeType": "EmitStatement",
                  "src": "17285:63:20"
                }
              ]
            },
            "documentation": {
              "id": 4339,
              "nodeType": "StructuredDocumentation",
              "src": "16837:175:20",
              "text": " @dev Function to update the developer transaction fee - can't be more than 5 percent\n @param newDeveloperTransactionFee the new developer transaction fee"
            },
            "functionSelector": "ecc63390",
            "id": 4362,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4343,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "17101:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "17101:9:20"
              }
            ],
            "name": "updateDeveloperTransactionFee",
            "nameLocation": "17026:29:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4341,
                  "mutability": "mutable",
                  "name": "newDeveloperTransactionFee",
                  "nameLocation": "17064:26:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4362,
                  "src": "17056:34:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17056:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17055:36:20"
            },
            "returnParameters": {
              "id": 4345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17111:0:20"
            },
            "scope": 4441,
            "src": "17017:338:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4378,
              "nodeType": "Block",
              "src": "17710:56:20",
              "statements": [
                {
                  "expression": {
                    "id": 4376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4372,
                        "name": "pairAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "17720:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4374,
                      "indexExpression": {
                        "id": 4373,
                        "name": "pairAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4365,
                        "src": "17734:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17720:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4375,
                      "name": "isPairAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4367,
                      "src": "17746:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17720:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4377,
                  "nodeType": "ExpressionStatement",
                  "src": "17720:39:20"
                }
              ]
            },
            "documentation": {
              "id": 4363,
              "nodeType": "StructuredDocumentation",
              "src": "17361:255:20",
              "text": " @dev Only owner function to add/remove an address as a pair address.\n @param pairAddr the pair address to either add or remove as a pair\n @param isPairAddress boolean to determine if the address is now a pair or no longer a pair"
            },
            "functionSelector": "fa399d94",
            "id": 4379,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4370,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4369,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "17700:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "17700:9:20"
              }
            ],
            "name": "addOrRemovePairAddress",
            "nameLocation": "17630:22:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4365,
                  "mutability": "mutable",
                  "name": "pairAddr",
                  "nameLocation": "17661:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4379,
                  "src": "17653:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17653:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4367,
                  "mutability": "mutable",
                  "name": "isPairAddress",
                  "nameLocation": "17676:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4379,
                  "src": "17671:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4366,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17671:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17652:38:20"
            },
            "returnParameters": {
              "id": 4371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17710:0:20"
            },
            "scope": 4441,
            "src": "17621:145:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4395,
              "nodeType": "Block",
              "src": "18094:41:20",
              "statements": [
                {
                  "expression": {
                    "id": 4393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4389,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3374,
                        "src": "18104:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4391,
                      "indexExpression": {
                        "id": 4390,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4382,
                        "src": "18112:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18104:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4392,
                      "name": "isMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4384,
                      "src": "18120:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18104:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4394,
                  "nodeType": "ExpressionStatement",
                  "src": "18104:24:20"
                }
              ]
            },
            "documentation": {
              "id": 4380,
              "nodeType": "StructuredDocumentation",
              "src": "17772:247:20",
              "text": " @dev Function to add or remove a Cardinal Token minter\n @param user the address that will be added or removed as a minter\n @param isMinter boolean representing if the address provided will be added or removed as a minter"
            },
            "functionSelector": "43620e71",
            "id": 4396,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4386,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8998,
                  "src": "18084:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "18084:9:20"
              }
            ],
            "name": "updateMinter",
            "nameLocation": "18033:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4382,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "18054:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4396,
                  "src": "18046:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18046:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4384,
                  "mutability": "mutable",
                  "name": "isMinter",
                  "nameLocation": "18065:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4396,
                  "src": "18060:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4383,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18060:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18045:29:20"
            },
            "returnParameters": {
              "id": 4388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18094:0:20"
            },
            "scope": 4441,
            "src": "18024:111:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4417,
              "nodeType": "Block",
              "src": "18417:127:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 4405,
                          "name": "minters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3374,
                          "src": "18435:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 4408,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4406,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11575,
                            "src": "18443:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18443:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18435:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420617574686f72697a656420746f206d696e742043617264696e616c20546f6b656e732e",
                        "id": 4409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18458:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0768071ec9c473c54a6345d41f775c73ad74a24ce1df7b74e06510a35f1a120f",
                          "typeString": "literal_string \"You are not authorized to mint Cardinal Tokens.\""
                        },
                        "value": "You are not authorized to mint Cardinal Tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0768071ec9c473c54a6345d41f775c73ad74a24ce1df7b74e06510a35f1a120f",
                          "typeString": "literal_string \"You are not authorized to mint Cardinal Tokens.\""
                        }
                      ],
                      "id": 4404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18427:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18427:81:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4411,
                  "nodeType": "ExpressionStatement",
                  "src": "18427:81:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4413,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4399,
                        "src": "18524:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4414,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4401,
                        "src": "18530:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4412,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10772,
                      "src": "18518:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18518:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4416,
                  "nodeType": "ExpressionStatement",
                  "src": "18518:19:20"
                }
              ]
            },
            "documentation": {
              "id": 4397,
              "nodeType": "StructuredDocumentation",
              "src": "18141:218:20",
              "text": " @dev Minter only function to mint new Cardinal Tokens for bridging ONLY\n @param user the address that the tokens will be minted to\n @param amount the amount of tokens to be minted to the user"
            },
            "functionSelector": "40c10f19",
            "id": 4418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "18373:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4399,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "18386:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4418,
                  "src": "18378:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18378:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4401,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18400:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4418,
                  "src": "18392:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18392:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18377:30:20"
            },
            "returnParameters": {
              "id": 4403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18417:0:20"
            },
            "scope": 4441,
            "src": "18364:180:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4439,
              "nodeType": "Block",
              "src": "18861:127:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 4427,
                          "name": "minters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3374,
                          "src": "18879:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 4430,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4428,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11575,
                            "src": "18887:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18887:12:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18879:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420617574686f72697a656420746f206275726e2043617264696e616c20546f6b656e732e",
                        "id": 4431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18902:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78847af00f5e2925d31046cc0a1b7ce5bd5329c90691a6fcc934945969e8d1a0",
                          "typeString": "literal_string \"You are not authorized to burn Cardinal Tokens.\""
                        },
                        "value": "You are not authorized to burn Cardinal Tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78847af00f5e2925d31046cc0a1b7ce5bd5329c90691a6fcc934945969e8d1a0",
                          "typeString": "literal_string \"You are not authorized to burn Cardinal Tokens.\""
                        }
                      ],
                      "id": 4426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18871:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18871:81:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4433,
                  "nodeType": "ExpressionStatement",
                  "src": "18871:81:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4435,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4421,
                        "src": "18968:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4436,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4423,
                        "src": "18974:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4434,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10844,
                      "src": "18962:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18962:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4438,
                  "nodeType": "ExpressionStatement",
                  "src": "18962:19:20"
                }
              ]
            },
            "documentation": {
              "id": 4419,
              "nodeType": "StructuredDocumentation",
              "src": "18550:253:20",
              "text": " @dev Minter only function to burn Cardinal Tokens for bridging and deflation upon service purchases with the Cardinal Token ONLY\n @param user the address to burn the tokens from\n @param amount the amount of tokens to be burned"
            },
            "functionSelector": "9dc29fac",
            "id": 4440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "18817:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4421,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "18830:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4440,
                  "src": "18822:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18822:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4423,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18844:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4440,
                  "src": "18836:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18836:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18821:30:20"
            },
            "returnParameters": {
              "id": 4425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18861:0:20"
            },
            "scope": 4441,
            "src": "18808:180:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4442,
        "src": "309:18681:20",
        "usedErrors": []
      }
    ],
    "src": "34:18956:20"
  },
  "bytecode": "60806040526002601155600260125560016013556103e86016553480156200002657600080fd5b5060405162002f1b38038062002f1b8339810160408190526200004991620007c8565b604080518082018252600d81526c21b0b93234b730b62a37b5b2b760991b60208083019182528351808501909452600484526310d4939360e21b9084015281519192916200009a9160039162000709565b508051620000b090600490602084019062000709565b505050620000cd620000c7620004a260201b60201c565b620004a6565b600c80546001600160a01b03199081166001600160a01b038a8116919091178355600d80548316888316908117909155600a805484168b8416179055600b805484168a8416178155600e80548516898516178155600f805486168986161781556010805490961688861617909555600092835260066020526040808420805460ff19908116600190811790925596548616855281852080548816821790559154851684528084208054871683179055915484168352818320805486168217905585548416835291208054909316179091559054620001c791166064620001b58b602362000893565b620001c19190620008b5565b620004f8565b600b54620001e7906001600160a01b03166064620001b58b602362000893565b600e5462000205906001600160a01b0316620001c1600a8b620008b5565b600f5462000223906001600160a01b0316620001c160058b620008b5565b601054601480546001600160a01b0319166001600160a01b0390921691821790556200025130828b620005e1565b806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156200028b57600080fd5b505afa158015620002a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c69190620008d8565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200030f57600080fd5b505afa15801562000324573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034a9190620008d8565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b1580156200039357600080fd5b505af1158015620003a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ce9190620008d8565b601580546001600160a01b0319166001600160a01b0392831690811790915560145460405163095ea7b360e01b81529216600483015260001960248301529063095ea7b390604401602060405180830381600087803b1580156200043157600080fd5b505af115801562000446573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200046c9190620008ff565b50506015546001600160a01b03166000908152600960205260409020805460ff19166001179055506200097b9650505050505050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620005545760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b806002600082825462000568919062000923565b90915550506001600160a01b038216600090815260208190526040812080548392906200059790849062000923565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038316620006455760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016200054b565b6001600160a01b038216620006a85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016200054b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b82805462000717906200093e565b90600052602060002090601f0160209004810192826200073b576000855562000786565b82601f106200075657805160ff191683800117855562000786565b8280016001018555821562000786579182015b828111156200078657825182559160200191906001019062000769565b506200079492915062000798565b5090565b5b8082111562000794576000815560010162000799565b6001600160a01b0381168114620007c557600080fd5b50565b600080600080600080600080610100898b031215620007e657600080fd5b885197506020890151620007fa81620007af565b60408a01519097506200080d81620007af565b60608a01519096506200082081620007af565b60808a01519095506200083381620007af565b60a08a01519094506200084681620007af565b60c08a01519093506200085981620007af565b60e08a01519092506200086c81620007af565b809150509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620008b057620008b06200087d565b500290565b600082620008d357634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620008eb57600080fd5b8151620008f881620007af565b9392505050565b6000602082840312156200091257600080fd5b81518015158114620008f857600080fd5b600082198211156200093957620009396200087d565b500190565b600181811c908216806200095357607f821691505b602082108114156200097557634e487b7160e01b600052602260045260246000fd5b50919050565b612590806200098b6000396000f3fe6080604052600436106102765760003560e01c80637c13efd41161014f578063da6fa55c116100c1578063f2fde38b1161007a578063f2fde38b14610773578063f46eccc414610793578063f9f92be4146107c3578063fa399d94146107f3578063fc2eb88914610813578063fd092bc51461083357600080fd5b8063da6fa55c14610687578063dbe66ca01461069d578063dd62ed3e146106cd578063de77bfd914610713578063eb08aa3b14610733578063ecc633901461075357600080fd5b80639dc29fac116101135780639dc29fac146105c7578063a457c2d7146105e7578063a9059cbb14610607578063bbeaa1f814610627578063c816841b14610647578063d158272d1461066757600080fd5b80637c13efd41461052f5780638b16cf98146105445780638da5cb5b146105745780638eb83f251461059257806395d89b41146105b257600080fd5b80634f481683116101e857806361eb048a116101ac57806361eb048a146104875780636c9230db146104a757806370a08231146104ba578063715018a6146104da578063744da8b7146104ef57806378c1d2451461050f57600080fd5b80634f481683146103fb5780634fcd128514610411578063560493b3146104275780635b3c1da1146104475780635b81c1a41461046757600080fd5b8063313ce5671161023a578063313ce5671461035457806332a2c5d0146103705780633950935114610383578063404e8a82146103a357806340c10f19146103b957806343620e71146103db57600080fd5b806306fdde0314610282578063095ea7b3146102ad57806318160ddd146102dd57806320ca3c7f146102fc57806323b872dd1461033457600080fd5b3661027d57005b600080fd5b34801561028e57600080fd5b50610297610853565b6040516102a4919061205d565b60405180910390f35b3480156102b957600080fd5b506102cd6102c83660046120c7565b6108e5565b60405190151581526020016102a4565b3480156102e957600080fd5b506002545b6040519081526020016102a4565b34801561030857600080fd5b5060105461031c906001600160a01b031681565b6040516001600160a01b0390911681526020016102a4565b34801561034057600080fd5b506102cd61034f3660046120f3565b6108ff565b34801561036057600080fd5b50604051601281526020016102a4565b34801561037c57600080fd5b503061031c565b34801561038f57600080fd5b506102cd61039e3660046120c7565b610c4c565b3480156103af57600080fd5b506102ee60165481565b3480156103c557600080fd5b506103d96103d43660046120c7565b610c8b565b005b3480156103e757600080fd5b506103d96103f6366004612149565b610d10565b34801561040757600080fd5b506102ee60115481565b34801561041d57600080fd5b506102ee60135481565b34801561043357600080fd5b506103d961044236600461217e565b610d65565b34801561045357600080fd5b50600a5461031c906001600160a01b031681565b34801561047357600080fd5b506103d961048236600461217e565b610d94565b34801561049357600080fd5b50600f5461031c906001600160a01b031681565b3480156104b357600080fd5b50426102ee565b3480156104c657600080fd5b506102ee6104d5366004612197565b610e5e565b3480156104e657600080fd5b506103d9610e79565b3480156104fb57600080fd5b506103d961050a3660046121b4565b610eaf565b34801561051b57600080fd5b506103d961052a366004612197565b610f17565b34801561053b57600080fd5b506103d9610f65565b34801561055057600080fd5b506102cd61055f366004612197565b60096020526000908152604090205460ff1681565b34801561058057600080fd5b506005546001600160a01b031661031c565b34801561059e57600080fd5b50600b5461031c906001600160a01b031681565b3480156105be57600080fd5b50610297610f9c565b3480156105d357600080fd5b506103d96105e23660046120c7565b610fab565b3480156105f357600080fd5b506102cd6106023660046120c7565b61102c565b34801561061357600080fd5b506102cd6106223660046120c7565b6110c9565b34801561063357600080fd5b506103d9610642366004612197565b6113b5565b34801561065357600080fd5b5060155461031c906001600160a01b031681565b34801561067357600080fd5b50600e5461031c906001600160a01b031681565b34801561069357600080fd5b506102ee60125481565b3480156106a957600080fd5b506102cd6106b8366004612197565b60066020526000908152604090205460ff1681565b3480156106d957600080fd5b506102ee6106e83660046121e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561071f57600080fd5b506103d961072e36600461217e565b611400565b34801561073f57600080fd5b50600c5461031c906001600160a01b031681565b34801561075f57600080fd5b506103d961076e36600461217e565b6114d4565b34801561077f57600080fd5b506103d961078e366004612197565b61159f565b34801561079f57600080fd5b506102cd6107ae366004612197565b60086020526000908152604090205460ff1681565b3480156107cf57600080fd5b506102cd6107de366004612197565b60076020526000908152604090205460ff1681565b3480156107ff57600080fd5b506103d961080e366004612149565b611637565b34801561081f57600080fd5b506103d961082e366004612149565b61168c565b34801561083f57600080fd5b50600d5461031c906001600160a01b031681565b60606003805461086290612222565b80601f016020809104026020016040519081016040528092919081815260200182805461088e90612222565b80156108db5780601f106108b0576101008083540402835291602001916108db565b820191906000526020600020905b8154815290600101906020018083116108be57829003601f168201915b5050505050905090565b6000336108f38185856116e1565b60019150505b92915050565b3360009081526007602052604081205460ff16156109385760405162461bcd60e51b815260040161092f9061225d565b60405180910390fd5b6001600160a01b03841660009081526007602052604090205460ff1615610a605760405162461bcd60e51b81526020600482015260b860248201527f546865206164647265737320796f7527726520747279696e6720746f2073706560448201527f6e64207468652043617264696e616c20546f6b656e732066726f6d206861732060648201527f6265656e20626c61636b6c69737465642066726f6d2074726164696e6720746860848201527f652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207460a48201527f68697320697320616e206572726f722c20706c6561736520636f6e746163742060c48201527f7468652043617264696e616c20486f757365207465616d2e000000000000000060e48201526101040161092f565b6001600160a01b03831660009081526007602052604090205460ff1615610a995760405162461bcd60e51b815260040161092f90612310565b6001600160a01b03841660009081526006602052604090205460ff1680610ad857506001600160a01b03831660009081526006602052604090205460ff165b80610af257503360009081526006602052604090205460ff165b15610b1557610b02843384611806565b610b0d848484611892565b506001610c45565b6000606460115484610b279190612411565b610b319190612430565b90506000606460125485610b459190612411565b610b4f9190612430565b90506000606460135486610b639190612411565b610b6d9190612430565b90506000610b7b8284612452565b9050610b88883388611806565b600d54610ba09089906001600160a01b031686611892565b610bab883083611892565b600084610bb8838961246a565b610bc2919061246a565b9050610bcf898983611892565b6000610bda30610e5e565b3360009081526009602052604090205490915060ff16610c3a57601654601554610c0c906001600160a01b0316610e5e565b610c169190612430565b811115610c2857610c28816000611a60565b478015610c3857610c3847611bf6565b505b600196505050505050505b9392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906108f39082908690610c86908790612452565b6116e1565b3360009081526008602052604090205460ff16610d025760405162461bcd60e51b815260206004820152602f60248201527f596f7520617265206e6f7420617574686f72697a656420746f206d696e74204360448201526e30b93234b730b6102a37b5b2b7399760891b606482015260840161092f565b610d0c8282611de6565b5050565b6005546001600160a01b03163314610d3a5760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6005546001600160a01b03163314610d8f5760405162461bcd60e51b815260040161092f90612481565b601655565b6005546001600160a01b03163314610dbe5760405162461bcd60e51b815260040161092f90612481565b6005811115610e2c5760405162461bcd60e51b815260206004820152603460248201527f546865206d61726b6574696e67207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b606482015260840161092f565b601281905560405181907eec95f51190fc49500bf726b0c72cb5c1b132f7bfe7685a33bda07defe3a8a890600090a250565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b03163314610ea35760405162461bcd60e51b815260040161092f90612481565b610ead6000611ec5565b565b6005546001600160a01b03163314610ed95760405162461bcd60e51b815260040161092f90612481565b8115610eee57610ee98382611a60565b610f07565b6000610ef930610e5e565b9050610f058183611a60565b505b47610f1181611bf6565b50505050565b6005546001600160a01b03163314610f415760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6005546001600160a01b03163314610f8f5760405162461bcd60e51b815260040161092f90612481565b47610f9981611bf6565b50565b60606004805461086290612222565b3360009081526008602052604090205460ff166110225760405162461bcd60e51b815260206004820152602f60248201527f596f7520617265206e6f7420617574686f72697a656420746f206275726e204360448201526e30b93234b730b6102a37b5b2b7399760891b606482015260840161092f565b610d0c8282611f17565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156110b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161092f565b6110be82868684036116e1565b506001949350505050565b3360009081526007602052604081205460ff16156110f95760405162461bcd60e51b815260040161092f9061225d565b6001600160a01b03831660009081526007602052604090205460ff16156111325760405162461bcd60e51b815260040161092f90612310565b3360009081526009602052604090205460ff16801561116157503360009081526006602052604090205460ff16155b801561118657506001600160a01b03831660009081526006602052604090205460ff16155b1561124057601461119660025490565b6111a09190612430565b826111aa85610e5e565b6111b49190612452565b106112405760405162461bcd60e51b815260206004820152605060248201527f596f752063616e27742068617665206d6f7265207468616e203525206f66207460448201527f686520746f74616c2043617264696e616c20546f6b656e20737570706c79206160648201526f333a32b91030902222ac1039bbb0b81760811b608482015260a40161092f565b3360009081526006602052604090205460ff168061127657506001600160a01b03831660009081526006602052604090205460ff165b1561128e57611286338484611892565b5060016108f9565b60006064601154846112a09190612411565b6112aa9190612430565b905060006064601254856112be9190612411565b6112c89190612430565b905060006064601354866112dc9190612411565b6112e69190612430565b905060006112f48284612452565b905061130c33600d546001600160a01b031686611892565b611317333083611892565b600084611324838961246a565b61132e919061246a565b905061133b338983611892565b600061134630610e5e565b3360009081526009602052604090205490915060ff166113a657601654601554611378906001600160a01b0316610e5e565b6113829190612430565b81111561139457611394816000611a60565b4780156113a4576113a447611bf6565b505b50600198975050505050505050565b6005546001600160a01b031633146113df5760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b0316331461142a5760405162461bcd60e51b815260040161092f90612481565b60058111156114a15760405162461bcd60e51b815260206004820152603a60248201527f546865206d656d626572206769766561776179207472616e73616374696f6e2060448201527f6665652063616e2774206265206d6f7265207468616e2035252e000000000000606482015260840161092f565b601181905560405181907f39e1f3e4cc8feb7dbc01c16e37aa1546c352489807c660593c62538f536ac05190600090a250565b6005546001600160a01b031633146114fe5760405162461bcd60e51b815260040161092f90612481565b600581111561156c5760405162461bcd60e51b815260206004820152603460248201527f54686520646576656c6f706572207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b606482015260840161092f565b601381905560405181907f4bee3c216a701857abd67fed754efdd065a8599be5476e2c4b118fb1896b9ffa90600090a250565b6005546001600160a01b031633146115c95760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03811661162e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161092f565b610f9981611ec5565b6005546001600160a01b031633146116615760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6005546001600160a01b031633146116b65760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6001600160a01b0383166117435760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161092f565b6001600160a01b0382166117a45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161092f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610f1157818110156118855760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161092f565b610f1184848484036116e1565b6001600160a01b0383166118f65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161092f565b6001600160a01b0382166119585760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161092f565b6001600160a01b038316600090815260208190526040902054818110156119d05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161092f565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611a07908490612452565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a5391815260200190565b60405180910390a3610f11565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110611a9557611a956124b6565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611ae957600080fd5b505afa158015611afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2191906124cc565b81600181518110611b3457611b346124b6565b6001600160a01b039283166020918202929092010152601454611b5a91309116856116e1565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac94790611b9290869086908690309042906004016124e9565b600060405180830381600087803b158015611bac57600080fd5b505af1158015611bc0573d6000803e3d6000fd5b50506040514792508591507f55cde9df0aa5720272c955ecd1ef12a4c4d3326a4b8c1c4d0557a25be8c25e1090600090a3505050565b6000601354601254611c089190612452565b905060008160125484611c1b9190612411565b611c259190612430565b905060008260135485611c389190612411565b611c429190612430565b600e546040519192506000916001600160a01b039091169084908381818185875af1925050503d8060008114611c94576040519150601f19603f3d011682016040523d82523d6000602084013e611c99565b606091505b5050905080611cfc5760405162461bcd60e51b815260206004820152602960248201527f4661696c656420746f2073656e64204d6174696320746f206d61726b6574696e60448201526867206164647265737360b81b606482015260840161092f565b600f546040516000916001600160a01b03169084908381818185875af1925050503d8060008114611d49576040519150601f19603f3d011682016040523d82523d6000602084013e611d4e565b606091505b5050905080611db15760405162461bcd60e51b815260206004820152602960248201527f4661696c656420746f2073656e64204d6174696320746f20646576656c6f706560448201526872206164647265737360b81b606482015260840161092f565b604051839085907f2574a60c18822fdca3d6638b38d78b1edb836b2f6322df3d8d4eeb9e1439360390600090a3505050505050565b6001600160a01b038216611e3c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161092f565b8060026000828254611e4e9190612452565b90915550506001600160a01b03821660009081526020819052604081208054839290611e7b908490612452565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216611f775760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161092f565b6001600160a01b03821660009081526020819052604090205481811015611feb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161092f565b6001600160a01b038316600090815260208190526040812083830390556002805484929061201a90849061246a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016117f9565b600060208083528351808285015260005b8181101561208a5785810183015185820160400152820161206e565b8181111561209c576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610f9957600080fd5b600080604083850312156120da57600080fd5b82356120e5816120b2565b946020939093013593505050565b60008060006060848603121561210857600080fd5b8335612113816120b2565b92506020840135612123816120b2565b929592945050506040919091013590565b8035801515811461214457600080fd5b919050565b6000806040838503121561215c57600080fd5b8235612167816120b2565b915061217560208401612134565b90509250929050565b60006020828403121561219057600080fd5b5035919050565b6000602082840312156121a957600080fd5b8135610c45816120b2565b6000806000606084860312156121c957600080fd5b833592506121d960208501612134565b9150604084013590509250925092565b600080604083850312156121fc57600080fd5b8235612207816120b2565b91506020830135612217816120b2565b809150509250929050565b600181811c9082168061223657607f821691505b6020821081141561225757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526081908201527f596f752068617665206265656e20626c61636b6c69737465642066726f6d207460408201527f726164696e67207468652043617264696e616c20546f6b656e2e20496620796f60608201527f75207468696e6b207468697320697320616e206572726f722c20706c6561736560808201527f20636f6e74616374207468652043617264696e616c20486f757365207465616d60a0820152601760f91b60c082015260e00190565b602080825260b2908201527f546865206164647265737320796f752061726520747279696e6720746f20736560408201527f6e642043617264696e616c20546f6b656e7320746f20686173206265656e206260608201527f6c61636b6c69737465642066726f6d2074726164696e6720746865204361726460808201527f696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697360a08201527f20616e206572726f722c20706c6561736520636f6e746163742074686520436160c082015271393234b730b6102437bab9b2903a32b0b69760711b60e08201526101000190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561242b5761242b6123fb565b500290565b60008261244d57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612465576124656123fb565b500190565b60008282101561247c5761247c6123fb565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124de57600080fd5b8151610c45816120b2565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156125395784516001600160a01b031683529383019391830191600101612514565b50506001600160a01b0396909616606085015250505060800152939250505056fea2646970667358221220745c018ba15f17d13e512d133d9caf6e70ecb4ac85e42ee44e87176a2e88d4ef64736f6c63430008080033",
  "bytecodeSha1": "14abbec950b75a6ffb6d6fc9bfcf4f3e6d239484",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.8+commit.dddeac2f"
  },
  "contractName": "CardinalToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "137": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {},
      "2": {
        "ERC20._approve": {
          "127": [
            10254,
            10273,
            true
          ],
          "128": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._burn": {
          "135": [
            9207,
            9228,
            true
          ],
          "136": [
            9398,
            9422,
            true
          ]
        },
        "ERC20._mint": {
          "134": [
            8498,
            8519,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "129": [
            10966,
            11003,
            false
          ],
          "130": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "131": [
            7614,
            7632,
            true
          ],
          "132": [
            7692,
            7708,
            true
          ],
          "133": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "126": [
            6815,
            6850,
            true
          ]
        }
      },
      "20": {
        "CardinalToken.burn": {
          "110": [
            18879,
            18900,
            true
          ]
        },
        "CardinalToken.mint": {
          "107": [
            18435,
            18456,
            true
          ]
        },
        "CardinalToken.sendFeesToWallets": {
          "124": [
            13326,
            13342,
            true
          ],
          "125": [
            13496,
            13512,
            true
          ]
        },
        "CardinalToken.swapCardinalTokensForMaticManually": {
          "109": [
            14544,
            14553,
            false
          ]
        },
        "CardinalToken.transfer": {
          "111": [
            6413,
            6437,
            true
          ],
          "112": [
            6640,
            6661,
            true
          ],
          "113": [
            6977,
            7004,
            false
          ],
          "114": [
            7009,
            7039,
            false
          ],
          "115": [
            7044,
            7071,
            false
          ],
          "116": [
            7095,
            7149,
            true
          ],
          "117": [
            7350,
            7380,
            true
          ],
          "118": [
            7384,
            7411,
            false
          ],
          "119": [
            8509,
            8536,
            false
          ],
          "120": [
            8556,
            8632,
            false
          ],
          "121": [
            8826,
            8850,
            false
          ]
        },
        "CardinalToken.transferFrom": {
          "98": [
            9458,
            9482,
            true
          ],
          "99": [
            9716,
            9732,
            true
          ],
          "100": [
            9990,
            10004,
            true
          ],
          "101": [
            10304,
            10326,
            true
          ],
          "102": [
            10330,
            10350,
            true
          ],
          "103": [
            10354,
            10384,
            false
          ],
          "104": [
            11546,
            11573,
            false
          ],
          "105": [
            11593,
            11669,
            false
          ],
          "106": [
            11863,
            11887,
            false
          ]
        },
        "CardinalToken.updateDeveloperTransactionFee": {
          "123": [
            17129,
            17160,
            true
          ]
        },
        "CardinalToken.updateMarketingTransactionFee": {
          "108": [
            16605,
            16636,
            true
          ]
        },
        "CardinalToken.updateMemberGiveawayTransactionFee": {
          "122": [
            16050,
            16086,
            true
          ]
        }
      },
      "3": {},
      "39": {},
      "4": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "91": [
            2378,
            2395
          ],
          "92": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "4": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "32": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "62": [
            1998,
            2071
          ],
          "63": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "66": [
            10246,
            10314
          ],
          "67": [
            10324,
            10392
          ],
          "68": [
            10403,
            10439
          ],
          "69": [
            10449,
            10486
          ]
        },
        "ERC20._burn": {
          "93": [
            9199,
            9266
          ],
          "94": [
            9390,
            9461
          ],
          "95": [
            9495,
            9539
          ],
          "96": [
            9559,
            9581
          ],
          "97": [
            9592,
            9634
          ]
        },
        "ERC20._mint": {
          "87": [
            8490,
            8555
          ],
          "88": [
            8626,
            8648
          ],
          "89": [
            8658,
            8686
          ],
          "90": [
            8696,
            8738
          ]
        },
        "ERC20._spendAllowance": {
          "70": [
            11019,
            11087
          ],
          "71": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "72": [
            7606,
            7674
          ],
          "73": [
            7684,
            7748
          ],
          "74": [
            7855,
            7927
          ],
          "75": [
            7961,
            7999
          ],
          "76": [
            8019,
            8042
          ],
          "77": [
            8053,
            8084
          ],
          "78": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "5": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "8": [
            4570,
            4602
          ],
          "9": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "31": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "1": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "41": [
            6807,
            6892
          ],
          "42": [
            6926,
            6986
          ],
          "43": [
            7007,
            7018
          ]
        },
        "ERC20.increaseAllowance": {
          "23": [
            6015,
            6081
          ]
        },
        "ERC20.name": {
          "6": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "38": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        }
      },
      "20": {
        "CardinalToken.addOrRemovePairAddress": {
          "64": [
            17720,
            17759
          ]
        },
        "CardinalToken.burn": {
          "39": [
            18871,
            18952
          ],
          "40": [
            18962,
            18981
          ]
        },
        "CardinalToken.disperseFeesManually": {
          "37": [
            13912,
            13951
          ]
        },
        "CardinalToken.excludeUserFromFees": {
          "36": [
            5449,
            5478
          ]
        },
        "CardinalToken.getContractAddress": {
          "2": [
            5215,
            5235
          ]
        },
        "CardinalToken.getCurrentTimestamp": {
          "3": [
            5704,
            5726
          ]
        },
        "CardinalToken.includeUsersInFees": {
          "55": [
            5958,
            5988
          ]
        },
        "CardinalToken.mint": {
          "24": [
            18427,
            18508
          ],
          "25": [
            18518,
            18537
          ]
        },
        "CardinalToken.sendFeesToWallets": {
          "84": [
            13318,
            13388
          ],
          "85": [
            13488,
            13558
          ],
          "86": [
            13569,
            13630
          ]
        },
        "CardinalToken.setContractTokenDivisor": {
          "27": [
            15284,
            15317
          ]
        },
        "CardinalToken.swapCardinalTokensForMatic": {
          "79": [
            12378,
            12401
          ],
          "80": [
            12411,
            12441
          ],
          "81": [
            12451,
            12506
          ],
          "82": [
            12516,
            12714
          ],
          "83": [
            12725,
            12791
          ]
        },
        "CardinalToken.swapCardinalTokensForMaticManually": {
          "33": [
            14569,
            14621
          ],
          "34": [
            14737,
            14811
          ],
          "35": [
            14894,
            14933
          ]
        },
        "CardinalToken.transfer": {
          "44": [
            6405,
            6571
          ],
          "45": [
            6632,
            6844
          ],
          "46": [
            7087,
            7234
          ],
          "47": [
            7427,
            7469
          ],
          "48": [
            7483,
            7494
          ],
          "49": [
            8090,
            8161
          ],
          "50": [
            8171,
            8222
          ],
          "51": [
            8369,
            8419
          ],
          "52": [
            8652,
            8711
          ],
          "53": [
            8870,
            8910
          ],
          "54": [
            8945,
            8956
          ]
        },
        "CardinalToken.transferFrom": {
          "10": [
            9450,
            9616
          ],
          "11": [
            9708,
            9921
          ],
          "12": [
            9982,
            10187
          ],
          "13": [
            10400,
            10443
          ],
          "14": [
            10457,
            10484
          ],
          "15": [
            10498,
            10509
          ],
          "16": [
            11105,
            11148
          ],
          "17": [
            11158,
            11221
          ],
          "18": [
            11231,
            11274
          ],
          "19": [
            11421,
            11456
          ],
          "20": [
            11689,
            11748
          ],
          "21": [
            11907,
            11947
          ],
          "22": [
            11982,
            11993
          ]
        },
        "CardinalToken.updateBlackList": {
          "65": [
            15689,
            15718
          ]
        },
        "CardinalToken.updateDeveloperTransactionFee": {
          "59": [
            17121,
            17217
          ],
          "60": [
            17227,
            17275
          ],
          "61": [
            17285,
            17348
          ]
        },
        "CardinalToken.updateMarketingTransactionFee": {
          "28": [
            16597,
            16693
          ],
          "29": [
            16703,
            16751
          ],
          "30": [
            16761,
            16824
          ]
        },
        "CardinalToken.updateMemberGiveawayTransactionFee": {
          "56": [
            16042,
            16149
          ],
          "57": [
            16159,
            16217
          ],
          "58": [
            16227,
            16300
          ]
        },
        "CardinalToken.updateMinter": {
          "26": [
            18104,
            18128
          ]
        }
      },
      "3": {},
      "39": {},
      "4": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "IUniswapV2Factory",
    "IUniswapV2Router02",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106102765760003560e01c80637c13efd41161014f578063da6fa55c116100c1578063f2fde38b1161007a578063f2fde38b14610773578063f46eccc414610793578063f9f92be4146107c3578063fa399d94146107f3578063fc2eb88914610813578063fd092bc51461083357600080fd5b8063da6fa55c14610687578063dbe66ca01461069d578063dd62ed3e146106cd578063de77bfd914610713578063eb08aa3b14610733578063ecc633901461075357600080fd5b80639dc29fac116101135780639dc29fac146105c7578063a457c2d7146105e7578063a9059cbb14610607578063bbeaa1f814610627578063c816841b14610647578063d158272d1461066757600080fd5b80637c13efd41461052f5780638b16cf98146105445780638da5cb5b146105745780638eb83f251461059257806395d89b41146105b257600080fd5b80634f481683116101e857806361eb048a116101ac57806361eb048a146104875780636c9230db146104a757806370a08231146104ba578063715018a6146104da578063744da8b7146104ef57806378c1d2451461050f57600080fd5b80634f481683146103fb5780634fcd128514610411578063560493b3146104275780635b3c1da1146104475780635b81c1a41461046757600080fd5b8063313ce5671161023a578063313ce5671461035457806332a2c5d0146103705780633950935114610383578063404e8a82146103a357806340c10f19146103b957806343620e71146103db57600080fd5b806306fdde0314610282578063095ea7b3146102ad57806318160ddd146102dd57806320ca3c7f146102fc57806323b872dd1461033457600080fd5b3661027d57005b600080fd5b34801561028e57600080fd5b50610297610853565b6040516102a4919061205d565b60405180910390f35b3480156102b957600080fd5b506102cd6102c83660046120c7565b6108e5565b60405190151581526020016102a4565b3480156102e957600080fd5b506002545b6040519081526020016102a4565b34801561030857600080fd5b5060105461031c906001600160a01b031681565b6040516001600160a01b0390911681526020016102a4565b34801561034057600080fd5b506102cd61034f3660046120f3565b6108ff565b34801561036057600080fd5b50604051601281526020016102a4565b34801561037c57600080fd5b503061031c565b34801561038f57600080fd5b506102cd61039e3660046120c7565b610c4c565b3480156103af57600080fd5b506102ee60165481565b3480156103c557600080fd5b506103d96103d43660046120c7565b610c8b565b005b3480156103e757600080fd5b506103d96103f6366004612149565b610d10565b34801561040757600080fd5b506102ee60115481565b34801561041d57600080fd5b506102ee60135481565b34801561043357600080fd5b506103d961044236600461217e565b610d65565b34801561045357600080fd5b50600a5461031c906001600160a01b031681565b34801561047357600080fd5b506103d961048236600461217e565b610d94565b34801561049357600080fd5b50600f5461031c906001600160a01b031681565b3480156104b357600080fd5b50426102ee565b3480156104c657600080fd5b506102ee6104d5366004612197565b610e5e565b3480156104e657600080fd5b506103d9610e79565b3480156104fb57600080fd5b506103d961050a3660046121b4565b610eaf565b34801561051b57600080fd5b506103d961052a366004612197565b610f17565b34801561053b57600080fd5b506103d9610f65565b34801561055057600080fd5b506102cd61055f366004612197565b60096020526000908152604090205460ff1681565b34801561058057600080fd5b506005546001600160a01b031661031c565b34801561059e57600080fd5b50600b5461031c906001600160a01b031681565b3480156105be57600080fd5b50610297610f9c565b3480156105d357600080fd5b506103d96105e23660046120c7565b610fab565b3480156105f357600080fd5b506102cd6106023660046120c7565b61102c565b34801561061357600080fd5b506102cd6106223660046120c7565b6110c9565b34801561063357600080fd5b506103d9610642366004612197565b6113b5565b34801561065357600080fd5b5060155461031c906001600160a01b031681565b34801561067357600080fd5b50600e5461031c906001600160a01b031681565b34801561069357600080fd5b506102ee60125481565b3480156106a957600080fd5b506102cd6106b8366004612197565b60066020526000908152604090205460ff1681565b3480156106d957600080fd5b506102ee6106e83660046121e9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561071f57600080fd5b506103d961072e36600461217e565b611400565b34801561073f57600080fd5b50600c5461031c906001600160a01b031681565b34801561075f57600080fd5b506103d961076e36600461217e565b6114d4565b34801561077f57600080fd5b506103d961078e366004612197565b61159f565b34801561079f57600080fd5b506102cd6107ae366004612197565b60086020526000908152604090205460ff1681565b3480156107cf57600080fd5b506102cd6107de366004612197565b60076020526000908152604090205460ff1681565b3480156107ff57600080fd5b506103d961080e366004612149565b611637565b34801561081f57600080fd5b506103d961082e366004612149565b61168c565b34801561083f57600080fd5b50600d5461031c906001600160a01b031681565b60606003805461086290612222565b80601f016020809104026020016040519081016040528092919081815260200182805461088e90612222565b80156108db5780601f106108b0576101008083540402835291602001916108db565b820191906000526020600020905b8154815290600101906020018083116108be57829003601f168201915b5050505050905090565b6000336108f38185856116e1565b60019150505b92915050565b3360009081526007602052604081205460ff16156109385760405162461bcd60e51b815260040161092f9061225d565b60405180910390fd5b6001600160a01b03841660009081526007602052604090205460ff1615610a605760405162461bcd60e51b81526020600482015260b860248201527f546865206164647265737320796f7527726520747279696e6720746f2073706560448201527f6e64207468652043617264696e616c20546f6b656e732066726f6d206861732060648201527f6265656e20626c61636b6c69737465642066726f6d2074726164696e6720746860848201527f652043617264696e616c20546f6b656e2e20496620796f75207468696e6b207460a48201527f68697320697320616e206572726f722c20706c6561736520636f6e746163742060c48201527f7468652043617264696e616c20486f757365207465616d2e000000000000000060e48201526101040161092f565b6001600160a01b03831660009081526007602052604090205460ff1615610a995760405162461bcd60e51b815260040161092f90612310565b6001600160a01b03841660009081526006602052604090205460ff1680610ad857506001600160a01b03831660009081526006602052604090205460ff165b80610af257503360009081526006602052604090205460ff165b15610b1557610b02843384611806565b610b0d848484611892565b506001610c45565b6000606460115484610b279190612411565b610b319190612430565b90506000606460125485610b459190612411565b610b4f9190612430565b90506000606460135486610b639190612411565b610b6d9190612430565b90506000610b7b8284612452565b9050610b88883388611806565b600d54610ba09089906001600160a01b031686611892565b610bab883083611892565b600084610bb8838961246a565b610bc2919061246a565b9050610bcf898983611892565b6000610bda30610e5e565b3360009081526009602052604090205490915060ff16610c3a57601654601554610c0c906001600160a01b0316610e5e565b610c169190612430565b811115610c2857610c28816000611a60565b478015610c3857610c3847611bf6565b505b600196505050505050505b9392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906108f39082908690610c86908790612452565b6116e1565b3360009081526008602052604090205460ff16610d025760405162461bcd60e51b815260206004820152602f60248201527f596f7520617265206e6f7420617574686f72697a656420746f206d696e74204360448201526e30b93234b730b6102a37b5b2b7399760891b606482015260840161092f565b610d0c8282611de6565b5050565b6005546001600160a01b03163314610d3a5760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6005546001600160a01b03163314610d8f5760405162461bcd60e51b815260040161092f90612481565b601655565b6005546001600160a01b03163314610dbe5760405162461bcd60e51b815260040161092f90612481565b6005811115610e2c5760405162461bcd60e51b815260206004820152603460248201527f546865206d61726b6574696e67207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b606482015260840161092f565b601281905560405181907eec95f51190fc49500bf726b0c72cb5c1b132f7bfe7685a33bda07defe3a8a890600090a250565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b03163314610ea35760405162461bcd60e51b815260040161092f90612481565b610ead6000611ec5565b565b6005546001600160a01b03163314610ed95760405162461bcd60e51b815260040161092f90612481565b8115610eee57610ee98382611a60565b610f07565b6000610ef930610e5e565b9050610f058183611a60565b505b47610f1181611bf6565b50505050565b6005546001600160a01b03163314610f415760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6005546001600160a01b03163314610f8f5760405162461bcd60e51b815260040161092f90612481565b47610f9981611bf6565b50565b60606004805461086290612222565b3360009081526008602052604090205460ff166110225760405162461bcd60e51b815260206004820152602f60248201527f596f7520617265206e6f7420617574686f72697a656420746f206275726e204360448201526e30b93234b730b6102a37b5b2b7399760891b606482015260840161092f565b610d0c8282611f17565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156110b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161092f565b6110be82868684036116e1565b506001949350505050565b3360009081526007602052604081205460ff16156110f95760405162461bcd60e51b815260040161092f9061225d565b6001600160a01b03831660009081526007602052604090205460ff16156111325760405162461bcd60e51b815260040161092f90612310565b3360009081526009602052604090205460ff16801561116157503360009081526006602052604090205460ff16155b801561118657506001600160a01b03831660009081526006602052604090205460ff16155b1561124057601461119660025490565b6111a09190612430565b826111aa85610e5e565b6111b49190612452565b106112405760405162461bcd60e51b815260206004820152605060248201527f596f752063616e27742068617665206d6f7265207468616e203525206f66207460448201527f686520746f74616c2043617264696e616c20546f6b656e20737570706c79206160648201526f333a32b91030902222ac1039bbb0b81760811b608482015260a40161092f565b3360009081526006602052604090205460ff168061127657506001600160a01b03831660009081526006602052604090205460ff165b1561128e57611286338484611892565b5060016108f9565b60006064601154846112a09190612411565b6112aa9190612430565b905060006064601254856112be9190612411565b6112c89190612430565b905060006064601354866112dc9190612411565b6112e69190612430565b905060006112f48284612452565b905061130c33600d546001600160a01b031686611892565b611317333083611892565b600084611324838961246a565b61132e919061246a565b905061133b338983611892565b600061134630610e5e565b3360009081526009602052604090205490915060ff166113a657601654601554611378906001600160a01b0316610e5e565b6113829190612430565b81111561139457611394816000611a60565b4780156113a4576113a447611bf6565b505b50600198975050505050505050565b6005546001600160a01b031633146113df5760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b0316331461142a5760405162461bcd60e51b815260040161092f90612481565b60058111156114a15760405162461bcd60e51b815260206004820152603a60248201527f546865206d656d626572206769766561776179207472616e73616374696f6e2060448201527f6665652063616e2774206265206d6f7265207468616e2035252e000000000000606482015260840161092f565b601181905560405181907f39e1f3e4cc8feb7dbc01c16e37aa1546c352489807c660593c62538f536ac05190600090a250565b6005546001600160a01b031633146114fe5760405162461bcd60e51b815260040161092f90612481565b600581111561156c5760405162461bcd60e51b815260206004820152603460248201527f54686520646576656c6f706572207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b606482015260840161092f565b601381905560405181907f4bee3c216a701857abd67fed754efdd065a8599be5476e2c4b118fb1896b9ffa90600090a250565b6005546001600160a01b031633146115c95760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03811661162e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161092f565b610f9981611ec5565b6005546001600160a01b031633146116615760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6005546001600160a01b031633146116b65760405162461bcd60e51b815260040161092f90612481565b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6001600160a01b0383166117435760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161092f565b6001600160a01b0382166117a45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161092f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610f1157818110156118855760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161092f565b610f1184848484036116e1565b6001600160a01b0383166118f65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161092f565b6001600160a01b0382166119585760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161092f565b6001600160a01b038316600090815260208190526040902054818110156119d05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161092f565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611a07908490612452565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611a5391815260200190565b60405180910390a3610f11565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110611a9557611a956124b6565b6001600160a01b03928316602091820292909201810191909152601454604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611ae957600080fd5b505afa158015611afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2191906124cc565b81600181518110611b3457611b346124b6565b6001600160a01b039283166020918202929092010152601454611b5a91309116856116e1565b60145460405163791ac94760e01b81526001600160a01b039091169063791ac94790611b9290869086908690309042906004016124e9565b600060405180830381600087803b158015611bac57600080fd5b505af1158015611bc0573d6000803e3d6000fd5b50506040514792508591507f55cde9df0aa5720272c955ecd1ef12a4c4d3326a4b8c1c4d0557a25be8c25e1090600090a3505050565b6000601354601254611c089190612452565b905060008160125484611c1b9190612411565b611c259190612430565b905060008260135485611c389190612411565b611c429190612430565b600e546040519192506000916001600160a01b039091169084908381818185875af1925050503d8060008114611c94576040519150601f19603f3d011682016040523d82523d6000602084013e611c99565b606091505b5050905080611cfc5760405162461bcd60e51b815260206004820152602960248201527f4661696c656420746f2073656e64204d6174696320746f206d61726b6574696e60448201526867206164647265737360b81b606482015260840161092f565b600f546040516000916001600160a01b03169084908381818185875af1925050503d8060008114611d49576040519150601f19603f3d011682016040523d82523d6000602084013e611d4e565b606091505b5050905080611db15760405162461bcd60e51b815260206004820152602960248201527f4661696c656420746f2073656e64204d6174696320746f20646576656c6f706560448201526872206164647265737360b81b606482015260840161092f565b604051839085907f2574a60c18822fdca3d6638b38d78b1edb836b2f6322df3d8d4eeb9e1439360390600090a3505050505050565b6001600160a01b038216611e3c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161092f565b8060026000828254611e4e9190612452565b90915550506001600160a01b03821660009081526020819052604081208054839290611e7b908490612452565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216611f775760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161092f565b6001600160a01b03821660009081526020819052604090205481811015611feb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161092f565b6001600160a01b038316600090815260208190526040812083830390556002805484929061201a90849061246a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016117f9565b600060208083528351808285015260005b8181101561208a5785810183015185820160400152820161206e565b8181111561209c576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610f9957600080fd5b600080604083850312156120da57600080fd5b82356120e5816120b2565b946020939093013593505050565b60008060006060848603121561210857600080fd5b8335612113816120b2565b92506020840135612123816120b2565b929592945050506040919091013590565b8035801515811461214457600080fd5b919050565b6000806040838503121561215c57600080fd5b8235612167816120b2565b915061217560208401612134565b90509250929050565b60006020828403121561219057600080fd5b5035919050565b6000602082840312156121a957600080fd5b8135610c45816120b2565b6000806000606084860312156121c957600080fd5b833592506121d960208501612134565b9150604084013590509250925092565b600080604083850312156121fc57600080fd5b8235612207816120b2565b91506020830135612217816120b2565b809150509250929050565b600181811c9082168061223657607f821691505b6020821081141561225757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526081908201527f596f752068617665206265656e20626c61636b6c69737465642066726f6d207460408201527f726164696e67207468652043617264696e616c20546f6b656e2e20496620796f60608201527f75207468696e6b207468697320697320616e206572726f722c20706c6561736560808201527f20636f6e74616374207468652043617264696e616c20486f757365207465616d60a0820152601760f91b60c082015260e00190565b602080825260b2908201527f546865206164647265737320796f752061726520747279696e6720746f20736560408201527f6e642043617264696e616c20546f6b656e7320746f20686173206265656e206260608201527f6c61636b6c69737465642066726f6d2074726164696e6720746865204361726460808201527f696e616c20546f6b656e2e20496620796f75207468696e6b207468697320697360a08201527f20616e206572726f722c20706c6561736520636f6e746163742074686520436160c082015271393234b730b6102437bab9b2903a32b0b69760711b60e08201526101000190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561242b5761242b6123fb565b500290565b60008261244d57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612465576124656123fb565b500190565b60008282101561247c5761247c6123fb565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124de57600080fd5b8151610c45816120b2565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156125395784516001600160a01b031683529383019391830191600101612514565b50506001600160a01b0396909616606085015250505060800152939250505056fea2646970667358221220745c018ba15f17d13e512d133d9caf6e70ecb4ac85e42ee44e87176a2e88d4ef64736f6c63430008080033",
  "deployedSourceMap": "309:18681:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:2;;;;;:::i;:::-;;:::i;:::-;;;1237:14:40;;1230:22;1212:41;;1200:2;1185:18;4433:197:2;1072:187:40;3244:106:2;;;;;;;;;;-1:-1:-1;3331:12:2;;3244:106;;;1410:25:40;;;1398:2;1383:18;3244:106:2;1264:177:40;1789:35:20;;;;;;;;;;-1:-1:-1;1789:35:20;;;;-1:-1:-1;;;;;1789:35:20;;;;;;-1:-1:-1;;;;;1610:32:40;;;1592:51;;1580:2;1565:18;1789:35:20;1446:203:40;9297:2703:20;;;;;;;;;;-1:-1:-1;9297:2703:20;;;;;:::i;:::-;;:::i;3093:91:2:-;;;;;;;;;;-1:-1:-1;3093:91:2;;3175:2;2257:36:40;;2245:2;2230:18;3093:91:2;2115:184:40;5144:98:20;;;;;;;;;;-1:-1:-1;5230:4:20;5144:98;;5873:236:2;;;;;;;;;;-1:-1:-1;5873:236:2;;;;;:::i;:::-;;:::i;2416:42:20:-;;;;;;;;;;;;;;;;18364:180;;;;;;;;;;-1:-1:-1;18364:180:20;;;;;:::i;:::-;;:::i;:::-;;18024:111;;;;;;;;;;-1:-1:-1;18024:111:20;;;;;:::i;:::-;;:::i;1888:43::-;;;;;;;;;;;;;;;;2090:38;;;;;;;;;;;;;;;;15202:122;;;;;;;;;;-1:-1:-1;15202:122:20;;;;;:::i;:::-;;:::i;1016:32::-;;;;;;;;;;-1:-1:-1;1016:32:20;;;;-1:-1:-1;;;;;1016:32:20;;;16493:338;;;;;;;;;;-1:-1:-1;16493:338:20;;;;;:::i;:::-;;:::i;1667:45::-;;;;;;;;;;-1:-1:-1;1667:45:20;;;;-1:-1:-1;;;;;1667:45:20;;;5631:102;;;;;;;;;;-1:-1:-1;5711:15:20;5631:102;;3408:125:2;;;;;;;;;;-1:-1:-1;3408:125:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;14409:531:20:-;;;;;;;;;;-1:-1:-1;14409:531:20;;;;;:::i;:::-;;:::i;5377:108::-;;;;;;;;;;-1:-1:-1;5377:108:20;;;;;:::i;:::-;;:::i;13789:169::-;;;;;;;;;;;;;:::i;903:46::-;;;;;;;;;;-1:-1:-1;903:46:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;1036:85:0;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;1236:37:20;;;;;;;;;;-1:-1:-1;1236:37:20;;;;-1:-1:-1;;;;;1236:37:20;;;2367:102:2;;;;;;;;;;;;;:::i;18808:180:20:-;;;;;;;;;;-1:-1:-1;18808:180:20;;;;;:::i;:::-;;:::i;6596:429:2:-;;;;;;;;;;-1:-1:-1;6596:429:2;;;;;:::i;:::-;;:::i;6263:2700:20:-;;;;;;;;;;-1:-1:-1;6263:2700:20;;;;;:::i;:::-;;:::i;5887:108::-;;;;;;;;;;-1:-1:-1;5887:108:20;;;;;:::i;:::-;;:::i;2274:26::-;;;;;;;;;;-1:-1:-1;2274:26:20;;;;-1:-1:-1;;;;;2274:26:20;;;1556:45;;;;;;;;;;-1:-1:-1;1556:45:20;;;;-1:-1:-1;;;;;1556:45:20;;;1989:38;;;;;;;;;;;;;;;;493:49;;;;;;;;;;-1:-1:-1;493:49:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;3976:149:2;;;;;;;;;;-1:-1:-1;3976:149:2;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;15928:379:20;;;;;;;;;;-1:-1:-1;15928:379:20;;;;;:::i;:::-;;:::i;1335:29::-;;;;;;;;;;-1:-1:-1;1335:29:20;;;;-1:-1:-1;;;;;1335:29:20;;;17017:338;;;;;;;;;;-1:-1:-1;17017:338:20;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;792:40:20:-;;;;;;;;;;-1:-1:-1;792:40:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;660:42;;;;;;;;;;-1:-1:-1;660:42:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;17621:145;;;;;;;;;;-1:-1:-1;17621:145:20;;;;;:::i;:::-;;:::i;15603:122::-;;;;;;;;;;-1:-1:-1;15603:122:20;;;;;:::i;:::-;;:::i;1439:50::-;;;;;;;;;;-1:-1:-1;1439:50:20;;;;-1:-1:-1;;;;;1439:50:20;;;2156:98:2;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:11;4570:32:2;719:10:11;4586:7:2;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;9297:2703:20:-;719:10:11;9386:4:20;9459:23;;;:9;:23;;;;;;;;9458:24;9450:166;;;;-1:-1:-1;;;9450:166:20;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9717:15:20;;;;;;:9;:15;;;;;;;;9716:16;9708:213;;;;-1:-1:-1;;;9708:213:20;;5370:2:40;9708:213:20;;;5352:21:40;5409:3;5389:18;;;5382:31;5449:34;5429:18;;;5422:62;5520:34;5500:18;;;5493:62;5592:34;5571:19;;;5564:63;5664:34;5643:19;;;5636:63;5736:34;5715:19;;;5708:63;5808:26;5787:19;;;5780:55;5852:19;;9708:213:20;5168:709:40;9708:213:20;-1:-1:-1;;;;;9991:13:20;;;;;;:9;:13;;;;;;;;9990:14;9982:205;;;;-1:-1:-1;;;9982:205:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;10304:22:20;;;;;;:16;:22;;;;;;;;;:46;;-1:-1:-1;;;;;;10330:20:20;;;;;;:16;:20;;;;;;;;10304:46;:80;;;-1:-1:-1;719:10:11;10354:30:20;;;;:16;:30;;;;;;;;10304:80;10300:220;;;10400:43;10416:4;719:10:11;10436:6:20;10400:15;:43::i;:::-;10457:27;10467:4;10473:2;10477:6;10457:9;:27::i;:::-;-1:-1:-1;10505:4:20;10498:11;;10300:220;10574:25;10640:3;10612:24;;10603:6;:33;;;;:::i;:::-;10602:41;;;;:::i;:::-;10574:69;;10696:20;10752:3;10729:19;;10720:6;:28;;;;:::i;:::-;10719:36;;;;:::i;:::-;10696:59;;10808:20;10864:3;10841:19;;10832:6;:28;;;;:::i;:::-;10831:36;;;;:::i;:::-;10808:59;-1:-1:-1;10962:19:20;10984:27;10808:59;10984:12;:27;:::i;:::-;10962:49;-1:-1:-1;11105:43:20;11121:4;719:10:11;11141:6:20;11105:15;:43::i;:::-;11174:27;;11158:63;;11168:4;;-1:-1:-1;;;;;11174:27:20;11203:17;11158:9;:63::i;:::-;11231:43;11241:4;11255;11262:11;11231:9;:43::i;:::-;11346:22;11394:17;11371:20;11380:11;11371:6;:20;:::i;:::-;:40;;;;:::i;:::-;11346:65;;11421:35;11431:4;11437:2;11441:14;11421:9;:35::i;:::-;11467:36;11506:24;11524:4;11506:9;:24::i;:::-;719:10:11;11546:27:20;;;;:13;:27;;;;;;11467:63;;-1:-1:-1;11546:27:20;;11541:431;;11649:20;;11634:11;;11624:22;;-1:-1:-1;;;;;11634:11:20;11624:9;:22::i;:::-;:45;;;;:::i;:::-;11593:28;:76;11589:174;;;11689:59;11716:28;11746:1;11689:26;:59::i;:::-;11824:21;11863:24;;11859:103;;11907:40;11925:21;11907:17;:40::i;:::-;11575:397;11541:431;11989:4;11982:11;;;;;;;;9297:2703;;;;;;:::o;5873:236:2:-;719:10:11;5961:4:2;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:2;;;;;;;;;;5961:4;;719:10:11;6015:66:2;;719:10:11;;6040:27:2;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;18364:180:20:-;719:10:11;18435:21:20;;;;:7;:21;;;;;;;;18427:81;;;;-1:-1:-1;;;18427:81:20;;7582:2:40;18427:81:20;;;7564:21:40;7621:2;7601:18;;;7594:30;7660:34;7640:18;;;7633:62;-1:-1:-1;;;7711:18:40;;;7704:45;7766:19;;18427:81:20;7380:411:40;18427:81:20;18518:19;18524:4;18530:6;18518:5;:19::i;:::-;18364:180;;:::o;18024:111::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;18104:13:20;;;::::1;;::::0;;;:7:::1;:13;::::0;;;;:24;;-1:-1:-1;;18104:24:20::1;::::0;::::1;;::::0;;;::::1;::::0;;18024:111::o;15202:122::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15284:20:20::1;:33:::0;15202:122::o;16493:338::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;16635:1:20::1;16605:26;:31;;16597:96;;;::::0;-1:-1:-1;;;16597:96:20;;8359:2:40;16597:96:20::1;::::0;::::1;8341:21:40::0;8398:2;8378:18;;;8371:30;8437:34;8417:18;;;8410:62;-1:-1:-1;;;8488:18:40;;;8481:50;8548:19;;16597:96:20::1;8157:416:40::0;16597:96:20::1;16703:19;:48:::0;;;16766:58:::1;::::0;16725:26;;16766:58:::1;::::0;;;::::1;16493:338:::0;:::o;3408:125:2:-;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;;;;;;;;;;3408:125::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;14409:531:20:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14544:9:20::1;14540:282;;;14569:52;14596:6;14604:16;14569:26;:52::i;:::-;14540:282;;;14660:36;14699:24;14717:4;14699:9;:24::i;:::-;14660:63;;14737:74;14764:28;14794:16;14737:26;:74::i;:::-;14646:176;14540:282;14863:21;14894:39;14863:21:::0;14894:17:::1;:39::i;:::-;14530:410;14409:531:::0;;;:::o;5377:108::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5449:22:20::1;;::::0;;;:16:::1;:22;::::0;;;;:29;;-1:-1:-1;;5449:29:20::1;5474:4;5449:29;::::0;;5377:108::o;13789:169::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;13881:21:20::1;13912:39;13881:21:::0;13912:17:::1;:39::i;:::-;13840:118;13789:169::o:0;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;18808:180:20:-;719:10:11;18879:21:20;;;;:7;:21;;;;;;;;18871:81;;;;-1:-1:-1;;;18871:81:20;;8780:2:40;18871:81:20;;;8762:21:40;8819:2;8799:18;;;8792:30;8858:34;8838:18;;;8831:62;-1:-1:-1;;;8909:18:40;;;8902:45;8964:19;;18871:81:20;8578:411:40;18871:81:20;18962:19;18968:4;18974:6;18962:5;:19::i;6596:429:2:-;719:10:11;6689:4:2;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:2;;;;;;;;;;6689:4;;719:10:11;6815:35:2;;;;6807:85;;;;-1:-1:-1;;;6807:85:2;;9196:2:40;6807:85:2;;;9178:21:40;9235:2;9215:18;;;9208:30;9274:34;9254:18;;;9247:62;-1:-1:-1;;;9325:18:40;;;9318:35;9370:19;;6807:85:2;8994:401:40;6807:85:2;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;:::-;-1:-1:-1;7014:4:2;;6596:429;-1:-1:-1;;;;6596:429:2:o;6263:2700:20:-;719:10:11;6341:4:20;6414:23;;;:9;:23;;;;;;;;6413:24;6405:166;;;;-1:-1:-1;;;6405:166:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;6641:20:20;;;;;;:9;:20;;;;;;;;6640:21;6632:212;;;;-1:-1:-1;;;6632:212:20;;;;;;;:::i;:::-;719:10:11;6977:27:20;;;;:13;:27;;;;;;;;:62;;;;-1:-1:-1;719:10:11;7009:30:20;;;;:16;:30;;;;;;;;7008:31;6977:62;:94;;;;-1:-1:-1;;;;;;7044:27:20;;;;;;:16;:27;;;;;;;;7043:28;6977:94;6973:272;;;7146:2;7130:13;3331:12:2;;;3244:106;7130:13:20;:18;;;;:::i;:::-;7119:6;7096:20;7106:9;7096;:20::i;:::-;:29;;;;:::i;:::-;7095:54;7087:147;;;;-1:-1:-1;;;7087:147:20;;9602:2:40;7087:147:20;;;9584:21:40;9641:2;9621:18;;;9614:30;9680:34;9660:18;;;9653:62;9751:34;9731:18;;;9724:62;-1:-1:-1;;;9802:19:40;;;9795:47;9859:19;;7087:147:20;9400:484:40;7087:147:20;719:10:11;7350:30:20;;;;:16;:30;;;;;;;;;:61;;-1:-1:-1;;;;;;7384:27:20;;;;;;:16;:27;;;;;;;;7350:61;7346:159;;;7427:42;719:10:11;7451:9:20;7462:6;7427:9;:42::i;:::-;-1:-1:-1;7490:4:20;7483:11;;7346:159;7559:25;7625:3;7597:24;;7588:6;:33;;;;:::i;:::-;7587:41;;;;:::i;:::-;7559:69;;7681:20;7737:3;7714:19;;7705:6;:28;;;;:::i;:::-;7704:36;;;;:::i;:::-;7681:59;;7793:20;7849:3;7826:19;;7817:6;:28;;;;:::i;:::-;7816:36;;;;:::i;:::-;7793:59;-1:-1:-1;7947:19:20;7969:27;7793:59;7969:12;:27;:::i;:::-;7947:49;-1:-1:-1;8090:71:20;719:10:11;8114:27:20;;-1:-1:-1;;;;;8114:27:20;8143:17;8090:9;:71::i;:::-;8171:51;719:10:11;8203:4:20;8210:11;8171:9;:51::i;:::-;8294:22;8342:17;8319:20;8328:11;8319:6;:20;:::i;:::-;:40;;;;:::i;:::-;8294:65;-1:-1:-1;8369:50:20;719:10:11;8393:9:20;8404:14;8369:9;:50::i;:::-;8430:36;8469:24;8487:4;8469:9;:24::i;:::-;719:10:11;8509:27:20;;;;:13;:27;;;;;;8430:63;;-1:-1:-1;8509:27:20;;8504:431;;8612:20;;8597:11;;8587:22;;-1:-1:-1;;;;;8597:11:20;8587:9;:22::i;:::-;:45;;;;:::i;:::-;8556:28;:76;8552:174;;;8652:59;8679:28;8709:1;8652:26;:59::i;:::-;8787:21;8826:24;;8822:103;;8870:40;8888:21;8870:17;:40::i;:::-;8538:397;8504:431;-1:-1:-1;8952:4:20;;6263:2700;-1:-1:-1;;;;;;;;6263:2700:20:o;5887:108::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5958:22:20::1;5983:5;5958:22:::0;;;:16:::1;:22;::::0;;;;:30;;-1:-1:-1;;5958:30:20::1;::::0;;5887:108::o;15928:379::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;16085:1:20::1;16050:31;:36;;16042:107;;;::::0;-1:-1:-1;;;16042:107:20;;10091:2:40;16042:107:20::1;::::0;::::1;10073:21:40::0;10130:2;10110:18;;;10103:30;10169:34;10149:18;;;10142:62;10240:28;10220:18;;;10213:56;10286:19;;16042:107:20::1;9889:422:40::0;16042:107:20::1;16159:24;:58:::0;;;16232:68:::1;::::0;16186:31;;16232:68:::1;::::0;;;::::1;15928:379:::0;:::o;17017:338::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;17159:1:20::1;17129:26;:31;;17121:96;;;::::0;-1:-1:-1;;;17121:96:20;;10518:2:40;17121:96:20::1;::::0;::::1;10500:21:40::0;10557:2;10537:18;;;10530:30;10596:34;10576:18;;;10569:62;-1:-1:-1;;;10647:18:40;;;10640:50;10707:19;;17121:96:20::1;10316:416:40::0;17121:96:20::1;17227:19;:48:::0;;;17290:58:::1;::::0;17249:26;;17290:58:::1;::::0;;;::::1;17017:338:::0;:::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;10939:2:40;1998:73:0::1;::::0;::::1;10921:21:40::0;10978:2;10958:18;;;10951:30;11017:34;10997:18;;;10990:62;-1:-1:-1;;;11068:18:40;;;11061:36;11114:19;;1998:73:0::1;10737:402:40::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;17621:145:20:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;17720:23:20;;;::::1;;::::0;;;:13:::1;:23;::::0;;;;:39;;-1:-1:-1;;17720:39:20::1;::::0;::::1;;::::0;;;::::1;::::0;;17621:145::o;15603:122::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;15689:15:20;;;::::1;;::::0;;;:9:::1;:15;::::0;;;;:29;;-1:-1:-1;;15689:29:20::1;::::0;::::1;;::::0;;;::::1;::::0;;15603:122::o;10123:370:2:-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;11346:2:40;10246:68:2;;;11328:21:40;11385:2;11365:18;;;11358:30;11424:34;11404:18;;;11397:62;-1:-1:-1;;;11475:18:40;;;11468:34;11519:19;;10246:68:2;11144:400:40;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;11751:2:40;10324:68:2;;;11733:21:40;11790:2;11770:18;;;11763:30;11829:34;11809:18;;;11802:62;-1:-1:-1;;;11880:18:40;;;11873:32;11922:19;;10324:68:2;11549:398:40;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1410:25:40;;;10454:32:2;;1383:18:40;10454:32:2;;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:2;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:2;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:2;;12154:2:40;11019:68:2;;;12136:21:40;12193:2;12173:18;;;12166:30;12232:31;12212:18;;;12205:59;12281:18;;11019:68:2;11952:353:40;11019:68:2;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;7488:651::-;-1:-1:-1;;;;;7614:18:2;;7606:68;;;;-1:-1:-1;;;7606:68:2;;12512:2:40;7606:68:2;;;12494:21:40;12551:2;12531:18;;;12524:30;12590:34;12570:18;;;12563:62;-1:-1:-1;;;12641:18:40;;;12634:35;12686:19;;7606:68:2;12310:401:40;7606:68:2;-1:-1:-1;;;;;7692:16:2;;7684:64;;;;-1:-1:-1;;;7684:64:2;;12918:2:40;7684:64:2;;;12900:21:40;12957:2;12937:18;;;12930:30;12996:34;12976:18;;;12969:62;-1:-1:-1;;;13047:18:40;;;13040:33;13090:19;;7684:64:2;12716:399:40;7684:64:2;-1:-1:-1;;;;;7830:15:2;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:2;;13322:2:40;7855:72:2;;;13304:21:40;13361:2;13341:18;;;13334:30;13400:34;13380:18;;;13373:62;-1:-1:-1;;;13451:18:40;;;13444:36;13497:19;;7855:72:2;13120:402:40;7855:72:2;-1:-1:-1;;;;;7961:15:2;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:2;8067:4;-1:-1:-1;;;;;8058:26:2;;8077:6;8058:26;;;;1410:25:40;;1398:2;1383:18;;1264:177;8058:26:2;;;;;;;;8095:37;9124:576;12232:566:20;12352:16;;;12366:1;12352:16;;;;;;;;12328:21;;12352:16;;;;;;;;;;-1:-1:-1;12352:16:20;12328:40;;12396:4;12378;12383:1;12378:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12378:23:20;;;:7;;;;;;;;;;:23;;;;12421:13;;:20;;;-1:-1:-1;;;12421:20:20;;;;:13;;;;;:18;;:20;;;;;12378:7;;12421:20;;;;;:13;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12411:4;12416:1;12411:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12411:30:20;;;:7;;;;;;;;;:30;12483:13;;12451:55;;12468:4;;12483:13;12499:6;12451:8;:55::i;:::-;12516:13;;:198;;-1:-1:-1;;;12516:198:20;;-1:-1:-1;;;;;12516:13:20;;;;:64;;:198;;12594:6;;12614:16;;12644:4;;12670;;12689:15;;12516:198;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12730:61:20;;12769:21;;-1:-1:-1;12761:6:20;;-1:-1:-1;12730:61:20;;;;;12318:480;12232:566;;:::o;12948:689::-;13009:16;13050:19;;13028;;:41;;;;:::i;:::-;13009:60;;13079:20;13135:8;13112:19;;13103:6;:28;;;;:::i;:::-;13102:41;;;;:::i;:::-;13079:64;;13153:20;13209:8;13186:19;;13177:6;:28;;;;:::i;:::-;13176:41;;;;:::i;:::-;13256:22;;:52;;13153:64;;-1:-1:-1;13229:21:20;;-1:-1:-1;;;;;13256:22:20;;;;13291:12;;13229:21;13256:52;13229:21;13256:52;13291:12;13256:22;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13228:80;;;13326:16;13318:70;;;;-1:-1:-1;;;13318:70:20;;15436:2:40;13318:70:20;;;15418:21:40;15475:2;15455:18;;;15448:30;15514:34;15494:18;;;15487:62;-1:-1:-1;;;15565:18:40;;;15558:39;15614:19;;13318:70:20;15234:405:40;13318:70:20;13426:22;;:52;;13399:21;;-1:-1:-1;;;;;13426:22:20;;13461:12;;13399:21;13426:52;13399:21;13426:52;13461:12;13426:22;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13398:80;;;13496:16;13488:70;;;;-1:-1:-1;;;13488:70:20;;15846:2:40;13488:70:20;;;15828:21:40;15885:2;15865:18;;;15858:30;15924:34;15904:18;;;15897:62;-1:-1:-1;;;15975:18:40;;;15968:39;16024:19;;13488:70:20;15644:405:40;13488:70:20;13574:56;;13617:12;;13603;;13574:56;;;;;12999:638;;;;;12948:689;:::o;8415:389:2:-;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;16256:2:40;8490:65:2;;;16238:21:40;16295:2;16275:18;;;16268:30;16334:33;16314:18;;;16307:61;16385:18;;8490:65:2;16054:355:40;8490:65:2;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;1410:25:40;;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;1398:2:40;1383:18;8701:37:2;;;;;;;18364:180:20;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;9124:576:2:-;-1:-1:-1;;;;;9207:21:2;;9199:67;;;;-1:-1:-1;;;9199:67:2;;16616:2:40;9199:67:2;;;16598:21:40;16655:2;16635:18;;;16628:30;16694:34;16674:18;;;16667:62;-1:-1:-1;;;16745:18:40;;;16738:31;16786:19;;9199:67:2;16414:397:40;9199:67:2;-1:-1:-1;;;;;9362:18:2;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:2;;17018:2:40;9390:71:2;;;17000:21:40;17057:2;17037:18;;;17030:30;17096:34;17076:18;;;17069:62;-1:-1:-1;;;17147:18:40;;;17140:32;17189:19;;9390:71:2;16816:398:40;9390:71:2;-1:-1:-1;;;;;9495:18:2;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:2;;1410:25:40;;;9623:1:2;;-1:-1:-1;;;;;9597:37:2;;;;;1398:2:40;1383:18;9597:37:2;1264:177:40;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:40;574:15;-1:-1:-1;;570:29:40;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:40:o;616:131::-;-1:-1:-1;;;;;691:31:40;;681:42;;671:70;;737:1;734;727:12;752:315;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:40:o;1654:456::-;1731:6;1739;1747;1800:2;1788:9;1779:7;1775:23;1771:32;1768:52;;;1816:1;1813;1806:12;1768:52;1855:9;1842:23;1874:31;1899:5;1874:31;:::i;:::-;1924:5;-1:-1:-1;1981:2:40;1966:18;;1953:32;1994:33;1953:32;1994:33;:::i;:::-;1654:456;;2046:7;;-1:-1:-1;;;2100:2:40;2085:18;;;;2072:32;;1654:456::o;2304:160::-;2369:20;;2425:13;;2418:21;2408:32;;2398:60;;2454:1;2451;2444:12;2398:60;2304:160;;;:::o;2469:315::-;2534:6;2542;2595:2;2583:9;2574:7;2570:23;2566:32;2563:52;;;2611:1;2608;2601:12;2563:52;2650:9;2637:23;2669:31;2694:5;2669:31;:::i;:::-;2719:5;-1:-1:-1;2743:35:40;2774:2;2759:18;;2743:35;:::i;:::-;2733:45;;2469:315;;;;;:::o;2789:180::-;2848:6;2901:2;2889:9;2880:7;2876:23;2872:32;2869:52;;;2917:1;2914;2907:12;2869:52;-1:-1:-1;2940:23:40;;2789:180;-1:-1:-1;2789:180:40:o;3198:247::-;3257:6;3310:2;3298:9;3289:7;3285:23;3281:32;3278:52;;;3326:1;3323;3316:12;3278:52;3365:9;3352:23;3384:31;3409:5;3384:31;:::i;3450:316::-;3524:6;3532;3540;3593:2;3581:9;3572:7;3568:23;3564:32;3561:52;;;3609:1;3606;3599:12;3561:52;3645:9;3632:23;3622:33;;3674:35;3705:2;3694:9;3690:18;3674:35;:::i;:::-;3664:45;;3756:2;3745:9;3741:18;3728:32;3718:42;;3450:316;;;;;:::o;3771:388::-;3839:6;3847;3900:2;3888:9;3879:7;3875:23;3871:32;3868:52;;;3916:1;3913;3906:12;3868:52;3955:9;3942:23;3974:31;3999:5;3974:31;:::i;:::-;4024:5;-1:-1:-1;4081:2:40;4066:18;;4053:32;4094:33;4053:32;4094:33;:::i;:::-;4146:7;4136:17;;;3771:388;;;;;:::o;4164:380::-;4243:1;4239:12;;;;4286;;;4307:61;;4361:4;4353:6;4349:17;4339:27;;4307:61;4414:2;4406:6;4403:14;4383:18;4380:38;4377:161;;;4460:10;4455:3;4451:20;4448:1;4441:31;4495:4;4492:1;4485:15;4523:4;4520:1;4513:15;4377:161;;4164:380;;;:::o;4549:614::-;4751:2;4733:21;;;4790:3;4770:18;;;4763:31;4830:34;4825:2;4810:18;;4803:62;4901:34;4896:2;4881:18;;4874:62;4973:34;4967:3;4952:19;;4945:63;5045:34;5039:3;5024:19;;5017:63;-1:-1:-1;;;5111:3:40;5096:19;;5089:32;5153:3;5138:19;;4549:614::o;5882:703::-;6084:2;6066:21;;;6123:3;6103:18;;;6096:31;6163:34;6158:2;6143:18;;6136:62;6234:34;6229:2;6214:18;;6207:62;6306:34;6300:3;6285:19;;6278:63;6378:34;6372:3;6357:19;;6350:63;6450:34;6444:3;6429:19;;6422:63;-1:-1:-1;;;6516:3:40;6501:19;;6494:49;6575:3;6560:19;;5882:703::o;6590:127::-;6651:10;6646:3;6642:20;6639:1;6632:31;6682:4;6679:1;6672:15;6706:4;6703:1;6696:15;6722:168;6762:7;6828:1;6824;6820:6;6816:14;6813:1;6810:21;6805:1;6798:9;6791:17;6787:45;6784:71;;;6835:18;;:::i;:::-;-1:-1:-1;6875:9:40;;6722:168::o;6895:217::-;6935:1;6961;6951:132;;7005:10;7000:3;6996:20;6993:1;6986:31;7040:4;7037:1;7030:15;7068:4;7065:1;7058:15;6951:132;-1:-1:-1;7097:9:40;;6895:217::o;7117:128::-;7157:3;7188:1;7184:6;7181:1;7178:13;7175:39;;;7194:18;;:::i;:::-;-1:-1:-1;7230:9:40;;7117:128::o;7250:125::-;7290:4;7318:1;7315;7312:8;7309:34;;;7323:18;;:::i;:::-;-1:-1:-1;7360:9:40;;7250:125::o;7796:356::-;7998:2;7980:21;;;8017:18;;;8010:30;8076:34;8071:2;8056:18;;8049:62;8143:2;8128:18;;7796:356::o;13659:127::-;13720:10;13715:3;13711:20;13708:1;13701:31;13751:4;13748:1;13741:15;13775:4;13772:1;13765:15;13791:251;13861:6;13914:2;13902:9;13893:7;13889:23;13885:32;13882:52;;;13930:1;13927;13920:12;13882:52;13962:9;13956:16;13981:31;14006:5;13981:31;:::i;14047:972::-;14301:4;14349:3;14338:9;14334:19;14380:6;14369:9;14362:25;14406:2;14444:6;14439:2;14428:9;14424:18;14417:34;14487:3;14482:2;14471:9;14467:18;14460:31;14511:6;14546;14540:13;14577:6;14569;14562:22;14615:3;14604:9;14600:19;14593:26;;14654:2;14646:6;14642:15;14628:29;;14675:1;14685:195;14699:6;14696:1;14693:13;14685:195;;;14764:13;;-1:-1:-1;;;;;14760:39:40;14748:52;;14855:15;;;;14820:12;;;;14796:1;14714:9;14685:195;;;-1:-1:-1;;;;;;;14936:32:40;;;;14931:2;14916:18;;14909:60;-1:-1:-1;;;15000:3:40;14985:19;14978:35;14897:3;14047:972;-1:-1:-1;;;14047:972:40:o",
  "language": "Solidity",
  "natspec": {
    "details": "Token contract for the Cardinal House ecosystem currency",
    "kind": "dev",
    "methods": {
      "addOrRemovePairAddress(address,bool)": {
        "details": "Only owner function to add/remove an address as a pair address.",
        "params": {
          "isPairAddress": "boolean to determine if the address is now a pair or no longer a pair",
          "pairAddr": "the pair address to either add or remove as a pair"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "details": "Minter only function to burn Cardinal Tokens for bridging and deflation upon service purchases with the Cardinal Token ONLY",
        "params": {
          "amount": "the amount of tokens to be burned",
          "user": "the address to burn the tokens from"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "disperseFeesManually()": {
        "details": "Sends Matic to transaction fee wallets manually as opposed to happening automatically after a certain level of volume"
      },
      "excludeUserFromFees(address)": {
        "details": "Adds a user to be excluded from fees.",
        "params": {
          "user": "address of the user to be excluded from fees."
        }
      },
      "getContractAddress()": {
        "details": "Returns the contract address",
        "returns": {
          "_0": "contract address"
        }
      },
      "getCurrentTimestamp()": {
        "details": "Gets the current timestamp, used for testing + verification",
        "returns": {
          "_0": "the the timestamp of the current block"
        }
      },
      "includeUsersInFees(address)": {
        "details": "Removes a user from the fee exclusion.",
        "params": {
          "user": "address of the user than will now have to pay transaction fees."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Minter only function to mint new Cardinal Tokens for bridging ONLY",
        "params": {
          "amount": "the amount of tokens to be minted to the user",
          "user": "the address that the tokens will be minted to"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setContractTokenDivisor(uint256)": {
        "details": "Sets the value that determines how many Cardinal Tokens need to be in the contract before it's swapped for Matic.",
        "params": {
          "newDivisor": "the new divisor value to determine the swap threshold"
        }
      },
      "swapCardinalTokensForMaticManually(uint256,bool,uint256)": {
        "details": "Swaps all Cardinal Tokens in the contract for Matic and then disperses those funds to the transaction fee wallets.",
        "params": {
          "amount": "the amount of Cardinal Tokens in the contract to swap for Matic",
          "minimumAmountOut": "the minimum Matic output for the Cardinal Token swap",
          "useAmount": "boolean to determine if the amount sent in is swapped for Matic or if the entire contract balance is swapped"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Overrides the BEP20 transfer function to include transaction fees.",
        "params": {
          "amount": "the amount to be transfered",
          "recipient": "the recipient of the transfer"
        },
        "returns": {
          "_0": "bool representing if the transfer was successful"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Overrides the BEP20 transferFrom function to include transaction fees.",
        "params": {
          "amount": "the amount to be transfered",
          "from": "the address from where the tokens are coming from",
          "to": "the recipient of the transfer"
        },
        "returns": {
          "_0": "bool representing if the transfer was successful"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBlackList(address,bool)": {
        "details": "Updates the blacklist mapping for a given address",
        "params": {
          "blacklisted": "a boolean that determines if the given address is being added or removed from the blacklist",
          "user": "the address that is being added or removed from the blacklist"
        }
      },
      "updateDeveloperTransactionFee(uint256)": {
        "details": "Function to update the developer transaction fee - can't be more than 5 percent",
        "params": {
          "newDeveloperTransactionFee": "the new developer transaction fee"
        }
      },
      "updateMarketingTransactionFee(uint256)": {
        "details": "Function to update the marketing transaction fee - can't be more than 5 percent",
        "params": {
          "newMarketingTransactionFee": "the new marketing transaction fee"
        }
      },
      "updateMemberGiveawayTransactionFee(uint256)": {
        "details": "Function to update the member giveaway transaction fee - can't be more than 5 percent",
        "params": {
          "newMemberGiveawayTransactionFee": "the new member giveaway transaction fee"
        }
      },
      "updateMinter(address,bool)": {
        "details": "Function to add or remove a Cardinal Token minter",
        "params": {
          "isMinter": "boolean representing if the address provided will be added or removed as a minter",
          "user": "the address that will be added or removed as a minter"
        }
      }
    },
    "title": "Cardinal House Token",
    "version": 1
  },
  "offset": [
    309,
    18990
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x276 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C13EFD4 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xDA6FA55C GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0xFA399D94 EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xFC2EB889 EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0xFD092BC5 EQ PUSH2 0x833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDA6FA55C EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0xDBE66CA0 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xDE77BFD9 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xEB08AA3B EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xECC63390 EQ PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xBBEAA1F8 EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0xD158272D EQ PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C13EFD4 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x8B16CF98 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x8EB83F25 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F481683 GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x61EB048A GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x61EB048A EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x6C9230DB EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x744DA8B7 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x78C1D245 EQ PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F481683 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x4FCD1285 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x560493B3 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x5B3C1DA1 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x5B81C1A4 EQ PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x32A2C5D0 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x404E8A82 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x43620E71 EQ PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x20CA3C7F EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x27D JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x20F3 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH2 0x31C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST PUSH2 0xD94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP TIMESTAMP PUSH2 0x2EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x4D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0xE5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0xE79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0xF17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0xF65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x31C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0xF9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x5E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x602 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0x102C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x622 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0x10C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x642 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x13B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x6B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x6E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x72E CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x1400 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x76E CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x14D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x78E CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x159F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x7AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x7DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x80E CALLDATASIZE PUSH1 0x4 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x1637 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH2 0x82E CALLDATASIZE PUSH1 0x4 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x168C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x31C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x862 SWAP1 PUSH2 0x2222 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88E SWAP1 PUSH2 0x2222 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x8F3 DUP2 DUP6 DUP6 PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206164647265737320796F7527726520747279696E6720746F20737065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E64207468652043617264696E616C20546F6B656E732066726F6D2068617320 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6265656E20626C61636B6C69737465642066726F6D2074726164696E67207468 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x652043617264696E616C20546F6B656E2E20496620796F75207468696E6B2074 PUSH1 0xA4 DUP3 ADD MSTORE PUSH32 0x68697320697320616E206572726F722C20706C6561736520636F6E7461637420 PUSH1 0xC4 DUP3 ADD MSTORE PUSH32 0x7468652043617264696E616C20486F757365207465616D2E0000000000000000 PUSH1 0xE4 DUP3 ADD MSTORE PUSH2 0x104 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xAD8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xAF2 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB15 JUMPI PUSH2 0xB02 DUP5 CALLER DUP5 PUSH2 0x1806 JUMP JUMPDEST PUSH2 0xB0D DUP5 DUP5 DUP5 PUSH2 0x1892 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP5 PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x12 SLOAD DUP6 PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x13 SLOAD DUP7 PUSH2 0xB63 SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB7B DUP3 DUP5 PUSH2 0x2452 JUMP JUMPDEST SWAP1 POP PUSH2 0xB88 DUP9 CALLER DUP9 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xBA0 SWAP1 DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x1892 JUMP JUMPDEST PUSH2 0xBAB DUP9 ADDRESS DUP4 PUSH2 0x1892 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0xBB8 DUP4 DUP10 PUSH2 0x246A JUMP JUMPDEST PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0x246A JUMP JUMPDEST SWAP1 POP PUSH2 0xBCF DUP10 DUP10 DUP4 PUSH2 0x1892 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDA ADDRESS PUSH2 0xE5E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0xC3A JUMPI PUSH1 0x16 SLOAD PUSH1 0x15 SLOAD PUSH2 0xC0C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE5E JUMP JUMPDEST PUSH2 0xC16 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC28 DUP2 PUSH1 0x0 PUSH2 0x1A60 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0xC38 JUMPI PUSH2 0xC38 SELFBALANCE PUSH2 0x1BF6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x8F3 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xC86 SWAP1 DUP8 SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH2 0x16E1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420617574686F72697A656420746F206D696E742043 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x30B93234B730B6102A37B5B2B73997 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH2 0xD0C DUP3 DUP3 PUSH2 0x1DE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D61726B6574696E67207472616E73616374696F6E20666565206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3713BA1031329036B7B932903A3430B7101A9297 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH31 0xEC95F51190FC49500BF726B0C72CB5C1B132F7BFE7685A33BDA07DEFE3A8A8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0xEAD PUSH1 0x0 PUSH2 0x1EC5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xED9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEEE JUMPI PUSH2 0xEE9 DUP4 DUP3 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF9 ADDRESS PUSH2 0xE5E JUMP JUMPDEST SWAP1 POP PUSH2 0xF05 DUP2 DUP4 PUSH2 0x1A60 JUMP JUMPDEST POP JUMPDEST SELFBALANCE PUSH2 0xF11 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST SELFBALANCE PUSH2 0xF99 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x862 SWAP1 PUSH2 0x2222 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420617574686F72697A656420746F206275726E2043 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x30B93234B730B6102A37B5B2B73997 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH2 0xD0C DUP3 DUP3 PUSH2 0x1F17 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH2 0x10BE DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x16E1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2310 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1161 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1186 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1240 JUMPI PUSH1 0x14 PUSH2 0x1196 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST DUP3 PUSH2 0x11AA DUP6 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST LT PUSH2 0x1240 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E27742068617665206D6F7265207468616E203525206F662074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x686520746F74616C2043617264696E616C20546F6B656E20737570706C792061 PUSH1 0x64 DUP3 ADD MSTORE PUSH16 0x333A32B91030902222AC1039BBB0B817 PUSH1 0x81 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x92F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1276 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x128E JUMPI PUSH2 0x1286 CALLER DUP5 DUP5 PUSH2 0x1892 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP5 PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x12AA SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x12 SLOAD DUP6 PUSH2 0x12BE SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x13 SLOAD DUP7 PUSH2 0x12DC SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x12E6 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12F4 DUP3 DUP5 PUSH2 0x2452 JUMP JUMPDEST SWAP1 POP PUSH2 0x130C CALLER PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH2 0x1892 JUMP JUMPDEST PUSH2 0x1317 CALLER ADDRESS DUP4 PUSH2 0x1892 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x1324 DUP4 DUP10 PUSH2 0x246A JUMP JUMPDEST PUSH2 0x132E SWAP2 SWAP1 PUSH2 0x246A JUMP JUMPDEST SWAP1 POP PUSH2 0x133B CALLER DUP10 DUP4 PUSH2 0x1892 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1346 ADDRESS PUSH2 0xE5E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x13A6 JUMPI PUSH1 0x16 SLOAD PUSH1 0x15 SLOAD PUSH2 0x1378 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x1382 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1394 JUMPI PUSH2 0x1394 DUP2 PUSH1 0x0 PUSH2 0x1A60 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x13A4 JUMPI PUSH2 0x13A4 SELFBALANCE PUSH2 0x1BF6 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x142A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D656D626572206769766561776179207472616E73616374696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6665652063616E2774206265206D6F7265207468616E2035252E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x39E1F3E4CC8FEB7DBC01C16E37AA1546C352489807C660593C62538F536AC051 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x156C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520646576656C6F706572207472616E73616374696F6E20666565206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3713BA1031329036B7B932903A3430B7101A9297 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x4BEE3C216A701857ABD67FED754EFDD065A8599BE5476E2C4B118FB1896B9FFA SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x162E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH2 0xF99 DUP2 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF11 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x92F JUMP JUMPDEST PUSH2 0xF11 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1A07 SWAP1 DUP5 SWAP1 PUSH2 0x2452 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A53 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A95 JUMPI PUSH2 0x1A95 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x14 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x14 SLOAD PUSH2 0x1B5A SWAP2 ADDRESS SWAP2 AND DUP6 PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1B92 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD SELFBALANCE SWAP3 POP DUP6 SWAP2 POP PUSH32 0x55CDE9DF0AA5720272C955ECD1EF12A4C4D3326A4B8C1C4D0557A25BE8C25E10 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD PUSH2 0x1C08 SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x12 SLOAD DUP5 PUSH2 0x1C1B SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x1C25 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x13 SLOAD DUP6 PUSH2 0x1C38 SWAP2 SWAP1 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x1C42 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1CFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64204D6174696320746F206D61726B6574696E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x672061646472657373 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D49 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1DB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64204D6174696320746F20646576656C6F7065 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x722061646472657373 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0x2574A60C18822FDCA3D6638B38D78B1EDB836B2F6322DF3D8D4EEB9E14393603 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x92F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E4E SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1E7B SWAP1 DUP5 SWAP1 PUSH2 0x2452 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1FEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x92F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x201A SWAP1 DUP5 SWAP1 PUSH2 0x246A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x208A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x206E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x209C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20E5 DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2113 DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2123 DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2167 DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2175 PUSH1 0x20 DUP5 ADD PUSH2 0x2134 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC45 DUP2 PUSH2 0x20B2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x21D9 PUSH1 0x20 DUP6 ADD PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2207 DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2217 DUP2 PUSH2 0x20B2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2236 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2257 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x81 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206265656E20626C61636B6C69737465642066726F6D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x726164696E67207468652043617264696E616C20546F6B656E2E20496620796F PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x75207468696E6B207468697320697320616E206572726F722C20706C65617365 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x20636F6E74616374207468652043617264696E616C20486F757365207465616D PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB2 SWAP1 DUP3 ADD MSTORE PUSH32 0x546865206164647265737320796F752061726520747279696E6720746F207365 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E642043617264696E616C20546F6B656E7320746F20686173206265656E2062 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6C61636B6C69737465642066726F6D2074726164696E67207468652043617264 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x696E616C20546F6B656E2E20496620796F75207468696E6B2074686973206973 PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x20616E206572726F722C20706C6561736520636F6E7461637420746865204361 PUSH1 0xC0 DUP3 ADD MSTORE PUSH18 0x393234B730B6102437BAB9B2903A32B0B697 PUSH1 0x71 SHL PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x242B JUMPI PUSH2 0x242B PUSH2 0x23FB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x244D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2465 JUMPI PUSH2 0x2465 PUSH2 0x23FB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x247C JUMPI PUSH2 0x247C PUSH2 0x23FB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC45 DUP2 PUSH2 0x20B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2539 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2514 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x5C018BA15F17D13E512D133D9CAF6E70ECB4AC85E4 0x2E 0xE4 0x4E DUP8 OR PUSH11 0x2E88D4EF64736F6C634300 ADDMOD ADDMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "LT",
      "path": "20"
    },
    "9": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x276"
    },
    "12": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "SHR",
      "path": "20"
    },
    "19": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "20": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7C13EFD4"
    },
    "25": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "GT",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14F"
    },
    "29": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "30": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "31": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDA6FA55C"
    },
    "36": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "GT",
      "path": "20"
    },
    "37": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "41": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "42": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "47": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "GT",
      "path": "20"
    },
    "48": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "52": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "53": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "59": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x773"
    },
    "62": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "63": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "64": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF46ECCC4"
    },
    "69": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "70": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x793"
    },
    "73": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "74": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "75": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF9F92BE4"
    },
    "80": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "81": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C3"
    },
    "84": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "85": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "86": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFA399D94"
    },
    "91": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "92": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7F3"
    },
    "95": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "96": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "97": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFC2EB889"
    },
    "102": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "103": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x813"
    },
    "106": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "107": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "108": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFD092BC5"
    },
    "113": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "114": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x833"
    },
    "117": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "118": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "121": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "122": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "123": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDA6FA55C"
    },
    "129": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "130": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x687"
    },
    "133": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "134": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "135": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDBE66CA0"
    },
    "140": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "141": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x69D"
    },
    "144": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "145": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "146": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDD62ED3E"
    },
    "151": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "152": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6CD"
    },
    "155": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "156": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "157": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDE77BFD9"
    },
    "162": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "163": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x713"
    },
    "166": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "167": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "168": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xEB08AA3B"
    },
    "173": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "174": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x733"
    },
    "177": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "178": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "179": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xECC63390"
    },
    "184": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "185": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x753"
    },
    "188": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "189": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "191": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "192": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "193": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "194": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "195": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9DC29FAC"
    },
    "200": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "GT",
      "path": "20"
    },
    "201": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x113"
    },
    "204": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "205": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "206": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9DC29FAC"
    },
    "211": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "212": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5C7"
    },
    "215": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "216": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "217": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA457C2D7"
    },
    "222": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "223": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5E7"
    },
    "226": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "227": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "228": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "233": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "234": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x607"
    },
    "237": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "238": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "239": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xBBEAA1F8"
    },
    "244": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "245": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x627"
    },
    "248": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "249": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "250": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC816841B"
    },
    "255": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "256": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x647"
    },
    "259": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "260": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "261": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD158272D"
    },
    "266": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "267": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x667"
    },
    "270": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "271": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "273": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "274": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "275": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "276": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "277": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7C13EFD4"
    },
    "282": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "283": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52F"
    },
    "286": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "287": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "288": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8B16CF98"
    },
    "293": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "294": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x544"
    },
    "297": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "298": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "299": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "304": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "305": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x574"
    },
    "308": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "309": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "310": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8EB83F25"
    },
    "315": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "316": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x592"
    },
    "319": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "320": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "321": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95D89B41"
    },
    "326": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "327": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5B2"
    },
    "330": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "331": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "333": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "334": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "335": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "336": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "337": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4F481683"
    },
    "342": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "GT",
      "path": "20"
    },
    "343": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E8"
    },
    "346": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "347": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "348": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x61EB048A"
    },
    "353": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "GT",
      "path": "20"
    },
    "354": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AC"
    },
    "357": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "358": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "359": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x61EB048A"
    },
    "364": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "365": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x487"
    },
    "368": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "369": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "370": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6C9230DB"
    },
    "375": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "376": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4A7"
    },
    "379": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "380": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "381": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "386": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "387": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4BA"
    },
    "390": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "391": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "392": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "397": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "398": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4DA"
    },
    "401": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "402": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "403": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x744DA8B7"
    },
    "408": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "409": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4EF"
    },
    "412": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "413": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "414": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x78C1D245"
    },
    "419": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "420": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x50F"
    },
    "423": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "424": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "426": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "427": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "428": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "429": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "430": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4F481683"
    },
    "435": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "436": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FB"
    },
    "439": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "440": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "441": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4FCD1285"
    },
    "446": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "447": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x411"
    },
    "450": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "451": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "452": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x560493B3"
    },
    "457": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "458": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x427"
    },
    "461": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "462": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "463": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5B3C1DA1"
    },
    "468": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "469": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x447"
    },
    "472": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "473": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "474": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5B81C1A4"
    },
    "479": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "480": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x467"
    },
    "483": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "484": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "486": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "487": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "488": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "489": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "490": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x313CE567"
    },
    "495": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "GT",
      "path": "20"
    },
    "496": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23A"
    },
    "499": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "500": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "501": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x313CE567"
    },
    "506": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "507": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x354"
    },
    "510": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "511": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "512": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x32A2C5D0"
    },
    "517": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "518": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x370"
    },
    "521": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "522": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "523": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x39509351"
    },
    "528": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "529": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x383"
    },
    "532": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "533": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "534": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x404E8A82"
    },
    "539": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "540": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A3"
    },
    "543": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "544": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "545": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x40C10F19"
    },
    "550": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "551": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B9"
    },
    "554": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "555": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "556": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x43620E71"
    },
    "561": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "562": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DB"
    },
    "565": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "566": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "568": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "569": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "570": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "571": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "572": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6FDDE03"
    },
    "577": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "578": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282"
    },
    "581": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "582": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "583": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "588": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "589": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AD"
    },
    "592": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "593": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "594": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18160DDD"
    },
    "599": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "600": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DD"
    },
    "603": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "604": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "605": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x20CA3C7F"
    },
    "610": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "611": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FC"
    },
    "614": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "615": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "616": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "621": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "EQ",
      "path": "20"
    },
    "622": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x334"
    },
    "625": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "626": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "628": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "629": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "630": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "631": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "632": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27D"
    },
    "635": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "636": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "STOP",
      "path": "20"
    },
    "637": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "638": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "640": {
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "DUP1",
      "path": "20"
    },
    "641": {
      "first_revert": true,
      "fn": null,
      "offset": [
        309,
        18990
      ],
      "op": "REVERT",
      "path": "20"
    },
    "642": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "643": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "644": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "645": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "646": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E"
    },
    "649": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "650": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "652": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "653": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "REVERT",
      "path": "2"
    },
    "654": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "655": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "POP",
      "path": "2"
    },
    "656": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x297"
    },
    "659": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x853"
    },
    "662": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "663": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "664": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "666": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "667": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A4"
    },
    "670": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "671": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "672": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x205D"
    },
    "675": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "676": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "677": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "679": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "680": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "681": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "682": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "2"
    },
    "683": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "684": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "2"
    },
    "685": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "686": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "687": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "688": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "689": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B9"
    },
    "692": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "693": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "695": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "696": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "REVERT",
      "path": "2"
    },
    "697": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "698": {
      "op": "POP"
    },
    "699": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD"
    },
    "702": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C8"
    },
    "705": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "706": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "708": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C7"
    },
    "711": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "712": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "713": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E5"
    },
    "716": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "717": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "718": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "720": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "721": {
      "op": "SWAP1"
    },
    "722": {
      "op": "ISZERO"
    },
    "723": {
      "op": "ISZERO"
    },
    "724": {
      "op": "DUP2"
    },
    "725": {
      "op": "MSTORE"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "728": {
      "op": "ADD"
    },
    "729": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A4"
    },
    "732": {
      "op": "JUMP"
    },
    "733": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "734": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "735": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "736": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "737": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E9"
    },
    "740": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "741": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "743": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "744": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "REVERT",
      "path": "2"
    },
    "745": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x2"
    },
    "749": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "750": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "751": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "753": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "754": {
      "op": "SWAP1"
    },
    "755": {
      "op": "DUP2"
    },
    "756": {
      "op": "MSTORE"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A4"
    },
    "763": {
      "op": "JUMP"
    },
    "764": {
      "offset": [
        1789,
        1824
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "765": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "766": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "DUP1",
      "path": "20"
    },
    "767": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "768": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x308"
    },
    "771": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "772": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "774": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "DUP1",
      "path": "20"
    },
    "775": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "REVERT",
      "path": "20"
    },
    "776": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "offset": [
        1789,
        1824
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "780": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "781": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "784": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "791": {
      "op": "SHL"
    },
    "792": {
      "op": "SUB"
    },
    "793": {
      "offset": [
        1789,
        1824
      ],
      "op": "AND",
      "path": "20"
    },
    "794": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "DUP2",
      "path": "20"
    },
    "795": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "JUMP",
      "path": "20"
    },
    "796": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "797": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "799": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1789,
        1824
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "806": {
      "op": "SHL"
    },
    "807": {
      "op": "SUB"
    },
    "808": {
      "op": "SWAP1"
    },
    "809": {
      "op": "SWAP2"
    },
    "810": {
      "op": "AND"
    },
    "811": {
      "op": "DUP2"
    },
    "812": {
      "op": "MSTORE"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "815": {
      "op": "ADD"
    },
    "816": {
      "offset": [
        1789,
        1824
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A4"
    },
    "819": {
      "op": "JUMP"
    },
    "820": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "821": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "822": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "DUP1",
      "path": "20"
    },
    "823": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "824": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x340"
    },
    "827": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "828": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "830": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "DUP1",
      "path": "20"
    },
    "831": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "REVERT",
      "path": "20"
    },
    "832": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD"
    },
    "837": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34F"
    },
    "840": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "841": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "843": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20F3"
    },
    "846": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMP",
      "path": "20"
    },
    "847": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "848": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8FF"
    },
    "851": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMP",
      "path": "20"
    },
    "852": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "854": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "855": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "856": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x360"
    },
    "859": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "860": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "862": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "863": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "REVERT",
      "path": "2"
    },
    "864": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "868": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "869": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "871": {
      "op": "DUP2"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "875": {
      "op": "ADD"
    },
    "876": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A4"
    },
    "879": {
      "op": "JUMP"
    },
    "880": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "881": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "882": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "DUP1",
      "path": "20"
    },
    "883": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "884": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37C"
    },
    "887": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "888": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "890": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "DUP1",
      "path": "20"
    },
    "891": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "REVERT",
      "path": "20"
    },
    "892": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "893": {
      "op": "POP"
    },
    "894": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5230,
        5234
      ],
      "op": "ADDRESS",
      "path": "20",
      "statement": 2
    },
    "895": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "898": {
      "fn": "CardinalToken.getContractAddress",
      "offset": [
        5144,
        5242
      ],
      "op": "JUMP",
      "path": "20"
    },
    "899": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "900": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "901": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "902": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "903": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F"
    },
    "906": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "907": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "909": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "910": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "REVERT",
      "path": "2"
    },
    "911": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD"
    },
    "916": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39E"
    },
    "919": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "920": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "922": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C7"
    },
    "925": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "926": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "927": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4C"
    },
    "930": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "931": {
      "offset": [
        2416,
        2458
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "932": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "933": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "DUP1",
      "path": "20"
    },
    "934": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "935": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AF"
    },
    "938": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "939": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "941": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "DUP1",
      "path": "20"
    },
    "942": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "REVERT",
      "path": "20"
    },
    "943": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "944": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "POP",
      "path": "20"
    },
    "945": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EE"
    },
    "948": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x16"
    },
    "950": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "951": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "DUP2",
      "path": "20"
    },
    "952": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2416,
        2458
      ],
      "op": "JUMP",
      "path": "20"
    },
    "953": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "954": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "955": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "DUP1",
      "path": "20"
    },
    "956": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "957": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C5"
    },
    "960": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "961": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "963": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "DUP1",
      "path": "20"
    },
    "964": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "REVERT",
      "path": "20"
    },
    "965": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "966": {
      "op": "POP"
    },
    "967": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "970": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D4"
    },
    "973": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "974": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "976": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20C7"
    },
    "979": {
      "fn": "CardinalToken.mint",
      "jump": "i",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMP",
      "path": "20"
    },
    "980": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "981": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC8B"
    },
    "984": {
      "fn": "CardinalToken.mint",
      "jump": "i",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMP",
      "path": "20"
    },
    "985": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "986": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "STOP",
      "path": "20"
    },
    "987": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "988": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "989": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "DUP1",
      "path": "20"
    },
    "990": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "991": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E7"
    },
    "994": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "995": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "997": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "DUP1",
      "path": "20"
    },
    "998": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "REVERT",
      "path": "20"
    },
    "999": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1004": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F6"
    },
    "1007": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1008": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1010": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2149"
    },
    "1013": {
      "fn": "CardinalToken.updateMinter",
      "jump": "i",
      "offset": [
        18024,
        18135
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1014": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1015": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD10"
    },
    "1018": {
      "fn": "CardinalToken.updateMinter",
      "jump": "i",
      "offset": [
        18024,
        18135
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1019": {
      "offset": [
        1888,
        1931
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1020": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1021": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1022": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1023": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x407"
    },
    "1026": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1027": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1029": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1030": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1031": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1032": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "POP",
      "path": "20"
    },
    "1033": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EE"
    },
    "1036": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "1038": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1039": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1040": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        1888,
        1931
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1041": {
      "offset": [
        2090,
        2128
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1042": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1043": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1044": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1045": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41D"
    },
    "1048": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1049": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1051": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1052": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1053": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1054": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "POP",
      "path": "20"
    },
    "1055": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EE"
    },
    "1058": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "1060": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1061": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1062": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        2090,
        2128
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1063": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1064": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1065": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1066": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1067": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x433"
    },
    "1070": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1071": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1073": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1074": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1075": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1076": {
      "op": "POP"
    },
    "1077": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1080": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x442"
    },
    "1083": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1084": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1086": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217E"
    },
    "1089": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "jump": "i",
      "offset": [
        15202,
        15324
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1090": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1091": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD65"
    },
    "1094": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "jump": "i",
      "offset": [
        15202,
        15324
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1095": {
      "offset": [
        1016,
        1048
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1096": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1097": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1098": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1099": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x453"
    },
    "1102": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1103": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1105": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1106": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1107": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "offset": [
        1016,
        1048
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1111": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1112": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "1115": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "op": "SUB"
    },
    "1124": {
      "offset": [
        1016,
        1048
      ],
      "op": "AND",
      "path": "20"
    },
    "1125": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1126": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        1016,
        1048
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1127": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1128": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1129": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1130": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1131": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x473"
    },
    "1134": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1135": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1137": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1138": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1139": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1140": {
      "op": "POP"
    },
    "1141": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1144": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x482"
    },
    "1147": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1148": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1150": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217E"
    },
    "1153": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "jump": "i",
      "offset": [
        16493,
        16831
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1154": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1155": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD94"
    },
    "1158": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "jump": "i",
      "offset": [
        16493,
        16831
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1159": {
      "offset": [
        1667,
        1712
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1160": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1161": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1162": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1163": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x493"
    },
    "1166": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1167": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1169": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1170": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1171": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "offset": [
        1667,
        1712
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "1175": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1176": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "1179": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1186": {
      "op": "SHL"
    },
    "1187": {
      "op": "SUB"
    },
    "1188": {
      "offset": [
        1667,
        1712
      ],
      "op": "AND",
      "path": "20"
    },
    "1189": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1190": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        1667,
        1712
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1191": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1192": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1193": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1194": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1195": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4B3"
    },
    "1198": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1199": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1201": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1202": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1203": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5711,
        5726
      ],
      "op": "TIMESTAMP",
      "path": "20",
      "statement": 3
    },
    "1206": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EE"
    },
    "1209": {
      "fn": "CardinalToken.getCurrentTimestamp",
      "offset": [
        5631,
        5733
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1210": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1211": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1212": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1213": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1214": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C6"
    },
    "1217": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1218": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1220": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1221": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1222": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "1227": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D5"
    },
    "1230": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1231": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1233": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2197"
    },
    "1236": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1237": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1238": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE5E"
    },
    "1241": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1242": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1243": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1246": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E6"
    },
    "1249": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1250": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1252": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1253": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1254": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1255": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1256": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "1259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE79"
    },
    "1262": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1263": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1264": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1265": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1266": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1267": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4FB"
    },
    "1270": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1271": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1273": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1274": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1275": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1276": {
      "op": "POP"
    },
    "1277": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1280": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x50A"
    },
    "1283": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1284": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1286": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21B4"
    },
    "1289": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        14409,
        14940
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1290": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1291": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEAF"
    },
    "1294": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        14409,
        14940
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1295": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1296": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1297": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1298": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1299": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "1302": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1303": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1305": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1306": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1307": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1308": {
      "op": "POP"
    },
    "1309": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1312": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52A"
    },
    "1315": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1316": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1318": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2197"
    },
    "1321": {
      "fn": "CardinalToken.excludeUserFromFees",
      "jump": "i",
      "offset": [
        5377,
        5485
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1322": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1323": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF17"
    },
    "1326": {
      "fn": "CardinalToken.excludeUserFromFees",
      "jump": "i",
      "offset": [
        5377,
        5485
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1327": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1328": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1329": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1330": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1331": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x53B"
    },
    "1334": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1335": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1337": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1338": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1339": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1340": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "POP",
      "path": "20"
    },
    "1341": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1344": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF65"
    },
    "1347": {
      "fn": "CardinalToken.disperseFeesManually",
      "jump": "i",
      "offset": [
        13789,
        13958
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1348": {
      "offset": [
        903,
        949
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1349": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1350": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1351": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1352": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x550"
    },
    "1355": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1356": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1358": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1359": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1360": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "offset": [
        903,
        949
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD"
    },
    "1365": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x55F"
    },
    "1368": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1369": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1371": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2197"
    },
    "1374": {
      "fn": "CardinalToken.disperseFeesManually",
      "jump": "i",
      "offset": [
        903,
        949
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1375": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1376": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "1378": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1380": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1381": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1383": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1384": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1385": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1386": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1388": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1389": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1390": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1391": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1393": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "AND",
      "path": "20"
    },
    "1394": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1395": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        903,
        949
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1396": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1397": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1398": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1399": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1400": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x580"
    },
    "1403": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1404": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1406": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1407": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1408": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1409": {
      "op": "POP"
    },
    "1410": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x5"
    },
    "1412": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1422": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "1425": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1426": {
      "offset": [
        1236,
        1273
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1427": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1428": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1429": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1430": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x59E"
    },
    "1433": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1434": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1436": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1437": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1438": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1439": {
      "op": "POP"
    },
    "1440": {
      "offset": [
        1236,
        1273
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1442": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1443": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "1446": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "op": "SUB"
    },
    "1455": {
      "offset": [
        1236,
        1273
      ],
      "op": "AND",
      "path": "20"
    },
    "1456": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1457": {
      "fn": "Ownable.owner",
      "offset": [
        1236,
        1273
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1458": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1459": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1460": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1461": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1462": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BE"
    },
    "1465": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1466": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1468": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1469": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1470": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1471": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "POP",
      "path": "2"
    },
    "1472": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x297"
    },
    "1475": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9C"
    },
    "1478": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1479": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1480": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1481": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1482": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1483": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5D3"
    },
    "1486": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1487": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1489": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1490": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1491": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1496": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5E2"
    },
    "1499": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1500": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1502": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20C7"
    },
    "1505": {
      "fn": "CardinalToken.burn",
      "jump": "i",
      "offset": [
        18808,
        18988
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1506": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1507": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFAB"
    },
    "1510": {
      "fn": "CardinalToken.burn",
      "jump": "i",
      "offset": [
        18808,
        18988
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1511": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1512": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1513": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1514": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1515": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F3"
    },
    "1518": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1519": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1521": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1522": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1523": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD"
    },
    "1528": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x602"
    },
    "1531": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1532": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1534": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C7"
    },
    "1537": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1538": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1539": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102C"
    },
    "1542": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1543": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1544": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1545": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1546": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1547": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x613"
    },
    "1550": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1551": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1553": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1554": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1555": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD"
    },
    "1560": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x622"
    },
    "1563": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1564": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1566": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20C7"
    },
    "1569": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        6263,
        8963
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1570": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1571": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10C9"
    },
    "1574": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        6263,
        8963
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1575": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1576": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1577": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1578": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1579": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x633"
    },
    "1582": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1583": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1585": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1586": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1587": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1592": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x642"
    },
    "1595": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1596": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1598": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2197"
    },
    "1601": {
      "fn": "CardinalToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        5887,
        5995
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1602": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1603": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13B5"
    },
    "1606": {
      "fn": "CardinalToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        5887,
        5995
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1607": {
      "offset": [
        2274,
        2300
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1608": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1609": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1610": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1611": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x653"
    },
    "1614": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1615": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1617": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1618": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1619": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "offset": [
        2274,
        2300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "1623": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1624": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "1627": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "offset": [
        2274,
        2300
      ],
      "op": "AND",
      "path": "20"
    },
    "1637": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1638": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        2274,
        2300
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1639": {
      "offset": [
        1556,
        1601
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1640": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1641": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1642": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1643": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x673"
    },
    "1646": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1647": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1649": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1650": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1651": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "offset": [
        1556,
        1601
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE"
    },
    "1655": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1656": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "1659": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "op": "SUB"
    },
    "1668": {
      "offset": [
        1556,
        1601
      ],
      "op": "AND",
      "path": "20"
    },
    "1669": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1670": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1556,
        1601
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1671": {
      "offset": [
        1989,
        2027
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1672": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1673": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1674": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1675": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x693"
    },
    "1678": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1679": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1681": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1682": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1683": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1684": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "POP",
      "path": "20"
    },
    "1685": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EE"
    },
    "1688": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "1690": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1691": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1692": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        1989,
        2027
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1693": {
      "offset": [
        493,
        542
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1694": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1695": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1696": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1697": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6A9"
    },
    "1700": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1701": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1703": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1704": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1705": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1706": {
      "op": "POP"
    },
    "1707": {
      "offset": [
        493,
        542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD"
    },
    "1710": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6B8"
    },
    "1713": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1714": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1716": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2197"
    },
    "1719": {
      "fn": "CardinalToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        493,
        542
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1720": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1721": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1723": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1725": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1726": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1728": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1729": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1730": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1731": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1733": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1734": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1735": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1736": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1738": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "AND",
      "path": "20"
    },
    "1739": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1740": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        493,
        542
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1741": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1742": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1743": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1744": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1745": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D9"
    },
    "1748": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1749": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1751": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1752": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1753": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "1758": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E8"
    },
    "1761": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1762": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1764": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21E9"
    },
    "1767": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1768": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1775": {
      "op": "SHL"
    },
    "1776": {
      "op": "SUB"
    },
    "1777": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "1778": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1779": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "2"
    },
    "1780": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1782": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1783": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1784": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1785": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1787": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1789": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1790": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1791": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1792": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1794": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1795": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1796": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1797": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1798": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1799": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1800": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "2"
    },
    "1801": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1802": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1803": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1804": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1805": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1806": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1807": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1808": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1809": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1810": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1811": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1812": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1813": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1814": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1815": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x71F"
    },
    "1818": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1819": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1821": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1822": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1823": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1828": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x72E"
    },
    "1831": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1832": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1834": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217E"
    },
    "1837": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "jump": "i",
      "offset": [
        15928,
        16307
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1838": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1839": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1400"
    },
    "1842": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "jump": "i",
      "offset": [
        15928,
        16307
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1843": {
      "offset": [
        1335,
        1364
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1844": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1845": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1846": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1847": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x73F"
    },
    "1850": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1851": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1853": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1854": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1855": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "offset": [
        1335,
        1364
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "1859": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1860": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "1863": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1870": {
      "op": "SHL"
    },
    "1871": {
      "op": "SUB"
    },
    "1872": {
      "offset": [
        1335,
        1364
      ],
      "op": "AND",
      "path": "20"
    },
    "1873": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1874": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        1335,
        1364
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1875": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1876": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1877": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1878": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1879": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x75F"
    },
    "1882": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1883": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1885": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1886": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1887": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "1892": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x76E"
    },
    "1895": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1896": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1898": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x217E"
    },
    "1901": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "jump": "i",
      "offset": [
        17017,
        17355
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1902": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1903": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14D4"
    },
    "1906": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "jump": "i",
      "offset": [
        17017,
        17355
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1908": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77F"
    },
    "1914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "1924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78E"
    },
    "1927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2197"
    },
    "1933": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159F"
    },
    "1938": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1939": {
      "offset": [
        792,
        832
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1941": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1943": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x79F"
    },
    "1946": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1947": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "offset": [
        792,
        832
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD"
    },
    "1956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7AE"
    },
    "1959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2197"
    },
    "1965": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        792,
        832
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1966": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1971": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1972": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1974": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1977": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1979": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1980": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1981": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1982": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "AND",
      "path": "20"
    },
    "1985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        792,
        832
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1987": {
      "offset": [
        660,
        702
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7CF"
    },
    "1994": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2000": {
      "op": "POP"
    },
    "2001": {
      "offset": [
        660,
        702
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD"
    },
    "2004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7DE"
    },
    "2007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2008": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2010": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2197"
    },
    "2013": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        660,
        702
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2014": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2015": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2017": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2019": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2020": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2024": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2027": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "AND",
      "path": "20"
    },
    "2033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        660,
        702
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2035": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2036": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2037": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2038": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2039": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7FF"
    },
    "2042": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2043": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2045": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2046": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2047": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "2052": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x80E"
    },
    "2055": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2056": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2058": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2149"
    },
    "2061": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "jump": "i",
      "offset": [
        17621,
        17766
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2062": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2063": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1637"
    },
    "2066": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "jump": "i",
      "offset": [
        17621,
        17766
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2067": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2068": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2069": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2070": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2071": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x81F"
    },
    "2074": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2075": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2077": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2078": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2079": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D9"
    },
    "2084": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x82E"
    },
    "2087": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2088": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2090": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2149"
    },
    "2093": {
      "fn": "CardinalToken.updateBlackList",
      "jump": "i",
      "offset": [
        15603,
        15725
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2094": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2095": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x168C"
    },
    "2098": {
      "fn": "CardinalToken.updateBlackList",
      "jump": "i",
      "offset": [
        15603,
        15725
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2099": {
      "offset": [
        1439,
        1489
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2100": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2101": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2102": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2103": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x83F"
    },
    "2106": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2107": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2109": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2110": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2111": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2112": {
      "op": "POP"
    },
    "2113": {
      "offset": [
        1439,
        1489
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "2115": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2116": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31C"
    },
    "2119": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "op": "SUB"
    },
    "2128": {
      "offset": [
        1439,
        1489
      ],
      "op": "AND",
      "path": "20"
    },
    "2129": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2130": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        1439,
        1489
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2131": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2132": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2134": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x3"
    },
    "2136": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2137": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2138": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x862"
    },
    "2141": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2142": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2222"
    },
    "2145": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2146": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2147": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2148": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2150": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2151": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2153": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2154": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2155": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "2"
    },
    "2156": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "2"
    },
    "2157": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2159": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2160": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2162": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2163": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2164": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2165": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2166": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2168": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2169": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2170": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2171": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2172": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2173": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2174": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2175": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2176": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2178": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2179": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2180": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2181": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2182": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88E"
    },
    "2185": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2186": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2222"
    },
    "2189": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2190": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2191": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2192": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2193": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DB"
    },
    "2196": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2197": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2198": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2200": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "2"
    },
    "2201": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B0"
    },
    "2204": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2205": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2208": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2209": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2210": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2211": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "2"
    },
    "2212": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "2"
    },
    "2213": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2214": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2215": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2216": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2218": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2219": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2220": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DB"
    },
    "2223": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2224": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2225": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2226": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2227": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2228": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2229": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2231": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2232": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2234": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2236": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2237": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2238": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2239": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2240": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2241": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2242": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2243": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2244": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2246": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2247": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2248": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2250": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2251": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2252": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2253": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "2"
    },
    "2254": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BE"
    },
    "2257": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2258": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2259": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2260": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "2"
    },
    "2261": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2263": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "2"
    },
    "2264": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2265": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2266": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2267": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2268": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2269": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2270": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2271": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2272": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2273": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2274": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2275": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2276": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2277": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2278": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2280": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 7
    },
    "2281": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x8F3"
    },
    "2284": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2285": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2286": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2287": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16E1"
    },
    "2290": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2291": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2292": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "2294": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2295": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "2"
    },
    "2296": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "2"
    },
    "2297": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2298": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2299": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2300": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "2"
    },
    "2301": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "2"
    },
    "2302": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2303": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2304": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2305": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9386,
        9390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2307": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 10
    },
    "2308": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2309": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2310": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9468
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2312": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2314": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2315": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2317": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2318": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2319": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2320": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2322": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9459,
        9482
      ],
      "op": "AND",
      "path": "20"
    },
    "2323": {
      "branch": 98,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9458,
        9482
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2324": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x938"
    },
    "2327": {
      "branch": 98,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2328": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2330": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2337": {
      "op": "SHL"
    },
    "2338": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2339": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2340": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2342": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "ADD",
      "path": "20"
    },
    "2343": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "2346": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2347": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x225D"
    },
    "2350": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        9450,
        9616
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2351": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2352": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2354": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2355": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2356": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2357": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "SUB",
      "path": "20"
    },
    "2358": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2359": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "20"
    },
    "2360": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9450,
        9616
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "op": "SUB"
    },
    "2369": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "DUP5",
      "path": "20",
      "statement": 11
    },
    "2370": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "AND",
      "path": "20"
    },
    "2371": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2373": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2374": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2375": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2376": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9726
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2378": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2380": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2381": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2383": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2384": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2385": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2386": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2388": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9717,
        9732
      ],
      "op": "AND",
      "path": "20"
    },
    "2389": {
      "branch": 99,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9716,
        9732
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2390": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA60"
    },
    "2393": {
      "branch": 99,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2394": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2396": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2403": {
      "op": "SHL"
    },
    "2404": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2405": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2408": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2410": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2411": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "ADD",
      "path": "20"
    },
    "2412": {
      "op": "MSTORE"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2417": {
      "op": "DUP3"
    },
    "2418": {
      "op": "ADD"
    },
    "2419": {
      "op": "MSTORE"
    },
    "2420": {
      "op": "PUSH32",
      "value": "0x546865206164647265737320796F7527726520747279696E6720746F20737065"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2455": {
      "op": "DUP3"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "op": "MSTORE"
    },
    "2458": {
      "op": "PUSH32",
      "value": "0x6E64207468652043617264696E616C20546F6B656E732066726F6D2068617320"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2493": {
      "op": "DUP3"
    },
    "2494": {
      "op": "ADD"
    },
    "2495": {
      "op": "MSTORE"
    },
    "2496": {
      "op": "PUSH32",
      "value": "0x6265656E20626C61636B6C69737465642066726F6D2074726164696E67207468"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH32",
      "value": "0x652043617264696E616C20546F6B656E2E20496620796F75207468696E6B2074"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2569": {
      "op": "DUP3"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "op": "MSTORE"
    },
    "2572": {
      "op": "PUSH32",
      "value": "0x68697320697320616E206572726F722C20706C6561736520636F6E7461637420"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "2607": {
      "op": "DUP3"
    },
    "2608": {
      "op": "ADD"
    },
    "2609": {
      "op": "MSTORE"
    },
    "2610": {
      "op": "PUSH32",
      "value": "0x7468652043617264696E616C20486F757365207465616D2E0000000000000000"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2645": {
      "op": "DUP3"
    },
    "2646": {
      "op": "ADD"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "2655": {
      "op": "JUMP"
    },
    "2656": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9708,
        9921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2663": {
      "op": "SHL"
    },
    "2664": {
      "op": "SUB"
    },
    "2665": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 12
    },
    "2666": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "AND",
      "path": "20"
    },
    "2667": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2669": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2670": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2671": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2672": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10000
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2674": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2676": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2677": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2679": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2680": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2681": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2682": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2684": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9991,
        10004
      ],
      "op": "AND",
      "path": "20"
    },
    "2685": {
      "branch": 100,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9990,
        10004
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2686": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA99"
    },
    "2689": {
      "branch": 100,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2690": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2692": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2699": {
      "op": "SHL"
    },
    "2700": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2701": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2702": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2704": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "ADD",
      "path": "20"
    },
    "2705": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "2708": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2709": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2310"
    },
    "2712": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        9982,
        10187
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2713": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9982,
        10187
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2720": {
      "op": "SHL"
    },
    "2721": {
      "op": "SUB"
    },
    "2722": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2723": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "AND",
      "path": "20"
    },
    "2724": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2726": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2727": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2728": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2729": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10320
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2731": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2733": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2734": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2736": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2737": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2738": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2739": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2741": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "AND",
      "path": "20"
    },
    "2742": {
      "branch": 101,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10326
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2743": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10350
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAD8"
    },
    "2746": {
      "branch": 101,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10350
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "op": "SUB"
    },
    "2756": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2757": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "AND",
      "path": "20"
    },
    "2758": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2760": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2761": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2762": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2763": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10346
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2765": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2767": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2768": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2770": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2771": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2772": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2773": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2775": {
      "branch": 102,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10330,
        10350
      ],
      "op": "AND",
      "path": "20"
    },
    "2776": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10350
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2777": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10384
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2778": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10384
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAF2"
    },
    "2781": {
      "branch": 102,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10384
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2782": {
      "op": "POP"
    },
    "2783": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2784": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2786": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2787": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2788": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2789": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10370
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2791": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2793": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2794": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2796": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2797": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2798": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2799": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2801": {
      "branch": 103,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10354,
        10384
      ],
      "op": "AND",
      "path": "20"
    },
    "2802": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10304,
        10384
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2803": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10300,
        10520
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2804": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10300,
        10520
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB15"
    },
    "2807": {
      "branch": 103,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10300,
        10520
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2808": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10400,
        10443
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 13,
      "value": "0xB02"
    },
    "2811": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10416,
        10420
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2812": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2813": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10436,
        10442
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2814": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10400,
        10415
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1806"
    },
    "2817": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10400,
        10443
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2818": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10400,
        10443
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2819": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10457,
        10484
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 14,
      "value": "0xB0D"
    },
    "2822": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10467,
        10471
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2823": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10473,
        10475
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2824": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10477,
        10483
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2825": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10457,
        10466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1892"
    },
    "2828": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10457,
        10484
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2829": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10457,
        10484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2830": {
      "op": "POP"
    },
    "2831": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10505,
        10509
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 15,
      "value": "0x1"
    },
    "2833": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10498,
        10509
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC45"
    },
    "2836": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10498,
        10509
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2837": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10300,
        10520
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2838": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10574,
        10599
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2840": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10640,
        10643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2842": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10612,
        10636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "2844": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10612,
        10636
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2845": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10603,
        10609
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2846": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10603,
        10636
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB27"
    },
    "2849": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10603,
        10636
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2850": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10603,
        10636
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2851": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10603,
        10636
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2411"
    },
    "2854": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10603,
        10636
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2855": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10603,
        10636
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2856": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10602,
        10643
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB31"
    },
    "2859": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10602,
        10643
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2860": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10602,
        10643
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2861": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10602,
        10643
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "2864": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10602,
        10643
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2865": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10602,
        10643
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2866": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10574,
        10643
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2867": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10574,
        10643
      ],
      "op": "POP",
      "path": "20"
    },
    "2868": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10696,
        10716
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2870": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10752,
        10755
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2872": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10729,
        10748
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "2874": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10729,
        10748
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2875": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10720,
        10726
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2876": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10720,
        10748
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB45"
    },
    "2879": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10720,
        10748
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2880": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10720,
        10748
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2881": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10720,
        10748
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2411"
    },
    "2884": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10720,
        10748
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2885": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10720,
        10748
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2886": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10719,
        10755
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB4F"
    },
    "2889": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10719,
        10755
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2890": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10719,
        10755
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2891": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10719,
        10755
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "2894": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10719,
        10755
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2895": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10719,
        10755
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2896": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10696,
        10755
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2897": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10696,
        10755
      ],
      "op": "POP",
      "path": "20"
    },
    "2898": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10808,
        10828
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2900": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10864,
        10867
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2902": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10841,
        10860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "2904": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10841,
        10860
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2905": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10832,
        10838
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2906": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10832,
        10860
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB63"
    },
    "2909": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10832,
        10860
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2910": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10832,
        10860
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2911": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10832,
        10860
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2411"
    },
    "2914": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10832,
        10860
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2915": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10832,
        10860
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2916": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10831,
        10867
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB6D"
    },
    "2919": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10831,
        10867
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2920": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10831,
        10867
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2921": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10831,
        10867
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "2924": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10831,
        10867
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2925": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10831,
        10867
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2926": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10808,
        10867
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2927": {
      "op": "POP"
    },
    "2928": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10962,
        10981
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2930": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10984,
        11011
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB7B"
    },
    "2933": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10808,
        10867
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2934": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10984,
        10996
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2935": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10984,
        11011
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "2938": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        10984,
        11011
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2939": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10984,
        11011
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2940": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        10962,
        11011
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2941": {
      "op": "POP"
    },
    "2942": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 16,
      "value": "0xB88"
    },
    "2945": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11121,
        11125
      ],
      "op": "DUP9",
      "path": "20"
    },
    "2946": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2947": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11141,
        11147
      ],
      "op": "DUP9",
      "path": "20"
    },
    "2948": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11105,
        11120
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1806"
    },
    "2951": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11105,
        11148
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2952": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11105,
        11148
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2953": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11174,
        11201
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 17,
      "value": "0xD"
    },
    "2955": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11174,
        11201
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2956": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11158,
        11221
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBA0"
    },
    "2959": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11158,
        11221
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2960": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11168,
        11172
      ],
      "op": "DUP10",
      "path": "20"
    },
    "2961": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11168,
        11172
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2968": {
      "op": "SHL"
    },
    "2969": {
      "op": "SUB"
    },
    "2970": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11174,
        11201
      ],
      "op": "AND",
      "path": "20"
    },
    "2971": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11203,
        11220
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2972": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11158,
        11167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1892"
    },
    "2975": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11158,
        11221
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2976": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11158,
        11221
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2977": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11231,
        11274
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 18,
      "value": "0xBAB"
    },
    "2980": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11241,
        11245
      ],
      "op": "DUP9",
      "path": "20"
    },
    "2981": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11255,
        11259
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "2982": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11262,
        11273
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2983": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11231,
        11240
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1892"
    },
    "2986": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11231,
        11274
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2987": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11231,
        11274
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2988": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11346,
        11368
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2990": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11394,
        11411
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2991": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11391
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBB8"
    },
    "2994": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11380,
        11391
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2995": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11377
      ],
      "op": "DUP10",
      "path": "20"
    },
    "2996": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11391
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x246A"
    },
    "2999": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11371,
        11391
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3000": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11391
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3001": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11411
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBC2"
    },
    "3004": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11411
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3005": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11411
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3006": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11411
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x246A"
    },
    "3009": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11371,
        11411
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3010": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11371,
        11411
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3011": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11346,
        11411
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3012": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11346,
        11411
      ],
      "op": "POP",
      "path": "20"
    },
    "3013": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11421,
        11456
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 19,
      "value": "0xBCF"
    },
    "3016": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11431,
        11435
      ],
      "op": "DUP10",
      "path": "20"
    },
    "3017": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11437,
        11439
      ],
      "op": "DUP10",
      "path": "20"
    },
    "3018": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11441,
        11455
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3019": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11421,
        11430
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1892"
    },
    "3022": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11421,
        11456
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3023": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11421,
        11456
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3024": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11467,
        11503
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3026": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11506,
        11530
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBDA"
    },
    "3029": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11524,
        11528
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3030": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11506,
        11515
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE5E"
    },
    "3033": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11506,
        11530
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3034": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11506,
        11530
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3035": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3036": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3038": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3039": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3040": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3041": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "3043": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3045": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3046": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3048": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3049": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3050": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3051": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11467,
        11530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3052": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11467,
        11530
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3053": {
      "op": "POP"
    },
    "3054": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "3056": {
      "branch": 104,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11546,
        11573
      ],
      "op": "AND",
      "path": "20"
    },
    "3057": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11541,
        11972
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC3A"
    },
    "3060": {
      "branch": 104,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11541,
        11972
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3061": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11649,
        11669
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x16"
    },
    "3063": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11649,
        11669
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3064": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11634,
        11645
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "3066": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11634,
        11645
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3067": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11646
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC0C"
    },
    "3070": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11646
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "op": "SUB"
    },
    "3079": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11634,
        11645
      ],
      "op": "AND",
      "path": "20"
    },
    "3080": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11633
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE5E"
    },
    "3083": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11624,
        11646
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3084": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11646
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3085": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11669
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC16"
    },
    "3088": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11669
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3089": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11669
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3090": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11669
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "3093": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11624,
        11669
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3094": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11624,
        11669
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3095": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11593,
        11621
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3096": {
      "branch": 105,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11593,
        11669
      ],
      "op": "GT",
      "path": "20"
    },
    "3097": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11589,
        11763
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3098": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11589,
        11763
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC28"
    },
    "3101": {
      "branch": 105,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11589,
        11763
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3102": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11689,
        11748
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 20,
      "value": "0xC28"
    },
    "3105": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11716,
        11744
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3106": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11746,
        11747
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3108": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11689,
        11715
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A60"
    },
    "3111": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11689,
        11748
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3112": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11689,
        11748
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3113": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11824,
        11845
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "3114": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11863,
        11887
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3115": {
      "branch": 106,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11863,
        11887
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3116": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11859,
        11962
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC38"
    },
    "3119": {
      "branch": 106,
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11859,
        11962
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3120": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11907,
        11947
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 21,
      "value": "0xC38"
    },
    "3123": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11925,
        11946
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "3124": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11907,
        11924
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BF6"
    },
    "3127": {
      "fn": "CardinalToken.transferFrom",
      "jump": "i",
      "offset": [
        11907,
        11947
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3128": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11907,
        11947
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3129": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11575,
        11972
      ],
      "op": "POP",
      "path": "20"
    },
    "3130": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11541,
        11972
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3131": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11989,
        11993
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 22,
      "value": "0x1"
    },
    "3133": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11982,
        11993
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "3134": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11982,
        11993
      ],
      "op": "POP",
      "path": "20"
    },
    "3135": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11982,
        11993
      ],
      "op": "POP",
      "path": "20"
    },
    "3136": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11982,
        11993
      ],
      "op": "POP",
      "path": "20"
    },
    "3137": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11982,
        11993
      ],
      "op": "POP",
      "path": "20"
    },
    "3138": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11982,
        11993
      ],
      "op": "POP",
      "path": "20"
    },
    "3139": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11982,
        11993
      ],
      "op": "POP",
      "path": "20"
    },
    "3140": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        11982,
        11993
      ],
      "op": "POP",
      "path": "20"
    },
    "3141": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3142": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3143": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3144": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "POP",
      "path": "20"
    },
    "3145": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "POP",
      "path": "20"
    },
    "3146": {
      "fn": "CardinalToken.transferFrom",
      "offset": [
        9297,
        12000
      ],
      "op": "POP",
      "path": "20"
    },
    "3147": {
      "fn": "CardinalToken.transferFrom",
      "jump": "o",
      "offset": [
        9297,
        12000
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3148": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3149": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3150": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3152": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 23
    },
    "3153": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3154": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3155": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3157": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3159": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3160": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3161": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3162": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3164": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3165": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3166": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3173": {
      "op": "SHL"
    },
    "3174": {
      "op": "SUB"
    },
    "3175": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3176": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "2"
    },
    "3177": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3178": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3179": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3180": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3181": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3182": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3183": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3184": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3185": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3186": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3187": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3188": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F3"
    },
    "3191": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3192": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3193": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3194": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3195": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3196": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC86"
    },
    "3199": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3200": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3201": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3202": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2452"
    },
    "3205": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3206": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3207": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16E1"
    },
    "3210": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3211": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3212": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3213": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 24,
      "value": "0x0"
    },
    "3215": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3216": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3217": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3218": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18442
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "3220": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3222": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3223": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3225": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3226": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3227": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3228": {
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "3230": {
      "branch": 107,
      "fn": "CardinalToken.mint",
      "offset": [
        18435,
        18456
      ],
      "op": "AND",
      "path": "20"
    },
    "3231": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD02"
    },
    "3234": {
      "branch": 107,
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3235": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3237": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3244": {
      "op": "SHL"
    },
    "3245": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3246": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3249": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3251": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3252": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "ADD",
      "path": "20"
    },
    "3253": {
      "op": "MSTORE"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3258": {
      "op": "DUP3"
    },
    "3259": {
      "op": "ADD"
    },
    "3260": {
      "op": "MSTORE"
    },
    "3261": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F7420617574686F72697A656420746F206D696E742043"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3296": {
      "op": "DUP3"
    },
    "3297": {
      "op": "ADD"
    },
    "3298": {
      "op": "MSTORE"
    },
    "3299": {
      "op": "PUSH15",
      "value": "0x30B93234B730B6102A37B5B2B73997"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3317": {
      "op": "SHL"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3320": {
      "op": "DUP3"
    },
    "3321": {
      "op": "ADD"
    },
    "3322": {
      "op": "MSTORE"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "3329": {
      "op": "JUMP"
    },
    "3330": {
      "fn": "CardinalToken.mint",
      "offset": [
        18427,
        18508
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3331": {
      "fn": "CardinalToken.mint",
      "offset": [
        18518,
        18537
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 25,
      "value": "0xD0C"
    },
    "3334": {
      "fn": "CardinalToken.mint",
      "offset": [
        18524,
        18528
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3335": {
      "fn": "CardinalToken.mint",
      "offset": [
        18530,
        18536
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3336": {
      "fn": "CardinalToken.mint",
      "offset": [
        18518,
        18523
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DE6"
    },
    "3339": {
      "fn": "CardinalToken.mint",
      "jump": "i",
      "offset": [
        18518,
        18537
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3340": {
      "fn": "CardinalToken.mint",
      "offset": [
        18518,
        18537
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3341": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "POP",
      "path": "20"
    },
    "3342": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "POP",
      "path": "20"
    },
    "3343": {
      "fn": "CardinalToken.mint",
      "jump": "o",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3344": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18024,
        18135
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3345": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3347": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3354": {
      "op": "SHL"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3357": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3358": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3359": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3A"
    },
    "3362": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3372": {
      "op": "SHL"
    },
    "3373": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "3381": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "3385": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 26
    },
    "3396": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3397": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3398": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "AND",
      "path": "20"
    },
    "3399": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3401": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3402": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3403": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3404": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18111
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "3406": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3408": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3409": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3411": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3412": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18117
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3413": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3414": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3417": {
      "op": "NOT"
    },
    "3418": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "AND",
      "path": "20"
    },
    "3419": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3420": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3421": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3422": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3423": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3424": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3425": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "OR",
      "path": "20"
    },
    "3426": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3427": {
      "fn": "CardinalToken.updateMinter",
      "offset": [
        18104,
        18128
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3428": {
      "fn": "CardinalToken.updateMinter",
      "jump": "o",
      "offset": [
        18024,
        18135
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3429": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15202,
        15324
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3430": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3432": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3439": {
      "op": "SHL"
    },
    "3440": {
      "op": "SUB"
    },
    "3441": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3442": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3443": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3444": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8F"
    },
    "3447": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3448": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3450": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3457": {
      "op": "SHL"
    },
    "3458": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3459": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3460": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3462": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3463": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "3466": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3467": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "3470": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3472": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15284,
        15304
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 27,
      "value": "0x16"
    },
    "3474": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "offset": [
        15284,
        15317
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3475": {
      "fn": "CardinalToken.setContractTokenDivisor",
      "jump": "o",
      "offset": [
        15202,
        15324
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3476": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3477": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3479": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3486": {
      "op": "SHL"
    },
    "3487": {
      "op": "SUB"
    },
    "3488": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3489": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3490": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3491": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBE"
    },
    "3494": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3495": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3497": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3504": {
      "op": "SHL"
    },
    "3505": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3506": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3507": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3509": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3510": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "3513": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3514": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "3517": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3519": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16635,
        16636
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 28,
      "value": "0x5"
    },
    "3521": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16605,
        16631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3522": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16605,
        16636
      ],
      "op": "GT",
      "path": "20"
    },
    "3523": {
      "branch": 108,
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16605,
        16636
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3524": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE2C"
    },
    "3527": {
      "branch": 108,
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3528": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3530": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3539": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3542": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3544": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3545": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "ADD",
      "path": "20"
    },
    "3546": {
      "op": "MSTORE"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3551": {
      "op": "DUP3"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "MSTORE"
    },
    "3554": {
      "op": "PUSH32",
      "value": "0x546865206D61726B6574696E67207472616E73616374696F6E20666565206361"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3589": {
      "op": "DUP3"
    },
    "3590": {
      "op": "ADD"
    },
    "3591": {
      "op": "MSTORE"
    },
    "3592": {
      "op": "PUSH20",
      "value": "0x3713BA1031329036B7B932903A3430B7101A9297"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3615": {
      "op": "SHL"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3618": {
      "op": "DUP3"
    },
    "3619": {
      "op": "ADD"
    },
    "3620": {
      "op": "MSTORE"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3623": {
      "op": "ADD"
    },
    "3624": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "3627": {
      "op": "JUMP"
    },
    "3628": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16597,
        16693
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3629": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16703,
        16722
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 29,
      "value": "0x12"
    },
    "3631": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16703,
        16751
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3632": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16703,
        16751
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3633": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16703,
        16751
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3634": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16766,
        16824
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 30,
      "value": "0x40"
    },
    "3636": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16766,
        16824
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3637": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16725,
        16751
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3638": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16725,
        16751
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3639": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16766,
        16824
      ],
      "op": "PUSH31",
      "path": "20",
      "value": "0xEC95F51190FC49500BF726B0C72CB5C1B132F7BFE7685A33BDA07DEFE3A8A8"
    },
    "3671": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16766,
        16824
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3672": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16766,
        16824
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3674": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16766,
        16824
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3675": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16766,
        16824
      ],
      "op": "LOG2",
      "path": "20"
    },
    "3676": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "offset": [
        16493,
        16831
      ],
      "op": "POP",
      "path": "20"
    },
    "3677": {
      "fn": "CardinalToken.updateMarketingTransactionFee",
      "jump": "o",
      "offset": [
        16493,
        16831
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3678": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3685": {
      "op": "SHL"
    },
    "3686": {
      "op": "SUB"
    },
    "3687": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "2",
      "statement": 31
    },
    "3688": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3690": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3691": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3692": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3693": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3695": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3696": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3697": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3698": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3700": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3701": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3702": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3703": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3704": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3705": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3706": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3708": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3715": {
      "op": "SHL"
    },
    "3716": {
      "op": "SUB"
    },
    "3717": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3718": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3719": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3720": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA3"
    },
    "3723": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3724": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3726": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3727": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3733": {
      "op": "SHL"
    },
    "3734": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3735": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3738": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3739": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "3742": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3743": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "3746": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3747": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xEAD"
    },
    "3751": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC5"
    },
    "3756": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3757": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3758": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3759": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3760": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3762": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3769": {
      "op": "SHL"
    },
    "3770": {
      "op": "SUB"
    },
    "3771": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3772": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3773": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3774": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED9"
    },
    "3777": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3787": {
      "op": "SHL"
    },
    "3788": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3789": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3790": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3792": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3793": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "3796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3797": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "3800": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3801": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3802": {
      "branch": 109,
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14544,
        14553
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3803": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14540,
        14822
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3804": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14540,
        14822
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEEE"
    },
    "3807": {
      "branch": 109,
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14540,
        14822
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3808": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14569,
        14621
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 33,
      "value": "0xEE9"
    },
    "3811": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14596,
        14602
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3812": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14604,
        14620
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3813": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14569,
        14595
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A60"
    },
    "3816": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        14569,
        14621
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3817": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14569,
        14621
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3818": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14540,
        14822
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF07"
    },
    "3821": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14540,
        14822
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3822": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14540,
        14822
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3823": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14660,
        14696
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3825": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14699,
        14723
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEF9"
    },
    "3828": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14717,
        14721
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3829": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14699,
        14708
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE5E"
    },
    "3832": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        14699,
        14723
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3833": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14699,
        14723
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3834": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14660,
        14723
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3835": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14660,
        14723
      ],
      "op": "POP",
      "path": "20"
    },
    "3836": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14737,
        14811
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 34,
      "value": "0xF05"
    },
    "3839": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14764,
        14792
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3840": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14794,
        14810
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3841": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14737,
        14763
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A60"
    },
    "3844": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        14737,
        14811
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3845": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14737,
        14811
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3846": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14646,
        14822
      ],
      "op": "POP",
      "path": "20"
    },
    "3847": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14540,
        14822
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3848": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14863,
        14884
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "3849": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14894,
        14933
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 35,
      "value": "0xF11"
    },
    "3852": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14863,
        14884
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3853": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14894,
        14911
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BF6"
    },
    "3856": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "i",
      "offset": [
        14894,
        14933
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3857": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14894,
        14933
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3858": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14530,
        14940
      ],
      "op": "POP",
      "path": "20"
    },
    "3859": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "POP",
      "path": "20"
    },
    "3860": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "POP",
      "path": "20"
    },
    "3861": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "offset": [
        14409,
        14940
      ],
      "op": "POP",
      "path": "20"
    },
    "3862": {
      "fn": "CardinalToken.swapCardinalTokensForMaticManually",
      "jump": "o",
      "offset": [
        14409,
        14940
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3863": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5377,
        5485
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3864": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3866": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3873": {
      "op": "SHL"
    },
    "3874": {
      "op": "SUB"
    },
    "3875": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3876": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3877": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3878": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF41"
    },
    "3881": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3882": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3884": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3885": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3891": {
      "op": "SHL"
    },
    "3892": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3893": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3894": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "3900": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "3904": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3905": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3912": {
      "op": "SHL"
    },
    "3913": {
      "op": "SUB"
    },
    "3914": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "AND",
      "path": "20",
      "statement": 36
    },
    "3915": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3917": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3918": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3919": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3920": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5465
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "3922": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3924": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3925": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3927": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3928": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5471
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3929": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5478
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3930": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5478
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3933": {
      "op": "NOT"
    },
    "3934": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5478
      ],
      "op": "AND",
      "path": "20"
    },
    "3935": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5474,
        5478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3937": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5478
      ],
      "op": "OR",
      "path": "20"
    },
    "3938": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5478
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3939": {
      "fn": "CardinalToken.excludeUserFromFees",
      "offset": [
        5449,
        5478
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3940": {
      "fn": "CardinalToken.excludeUserFromFees",
      "jump": "o",
      "offset": [
        5377,
        5485
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3941": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13789,
        13958
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3942": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3944": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3951": {
      "op": "SHL"
    },
    "3952": {
      "op": "SUB"
    },
    "3953": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3954": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3955": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3956": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8F"
    },
    "3959": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3960": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3962": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3969": {
      "op": "SHL"
    },
    "3970": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3971": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3972": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3974": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3975": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "3978": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3979": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "3982": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3983": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3984": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13881,
        13902
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "3985": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13912,
        13951
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 37,
      "value": "0xF99"
    },
    "3988": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13881,
        13902
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3989": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13912,
        13929
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BF6"
    },
    "3992": {
      "fn": "CardinalToken.disperseFeesManually",
      "jump": "i",
      "offset": [
        13912,
        13951
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3993": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13912,
        13951
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3994": {
      "fn": "CardinalToken.disperseFeesManually",
      "offset": [
        13840,
        13958
      ],
      "op": "POP",
      "path": "20"
    },
    "3995": {
      "fn": "CardinalToken.disperseFeesManually",
      "jump": "o",
      "offset": [
        13789,
        13958
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3996": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3997": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3999": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x4"
    },
    "4001": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4002": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4003": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x862"
    },
    "4006": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4007": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2222"
    },
    "4010": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4011": {
      "fn": "CardinalToken.burn",
      "offset": [
        18808,
        18988
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4012": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4013": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 39,
      "value": "0x0"
    },
    "4015": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4016": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4017": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4018": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18886
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "4020": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4022": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4023": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4025": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4026": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4027": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4028": {
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4030": {
      "branch": 110,
      "fn": "CardinalToken.burn",
      "offset": [
        18879,
        18900
      ],
      "op": "AND",
      "path": "20"
    },
    "4031": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1022"
    },
    "4034": {
      "branch": 110,
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4035": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4037": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4044": {
      "op": "SHL"
    },
    "4045": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4046": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4049": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4051": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4052": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "ADD",
      "path": "20"
    },
    "4053": {
      "op": "MSTORE"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4058": {
      "op": "DUP3"
    },
    "4059": {
      "op": "ADD"
    },
    "4060": {
      "op": "MSTORE"
    },
    "4061": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F7420617574686F72697A656420746F206275726E2043"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4096": {
      "op": "DUP3"
    },
    "4097": {
      "op": "ADD"
    },
    "4098": {
      "op": "MSTORE"
    },
    "4099": {
      "op": "PUSH15",
      "value": "0x30B93234B730B6102A37B5B2B73997"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4117": {
      "op": "SHL"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4120": {
      "op": "DUP3"
    },
    "4121": {
      "op": "ADD"
    },
    "4122": {
      "op": "MSTORE"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4125": {
      "op": "ADD"
    },
    "4126": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "4129": {
      "op": "JUMP"
    },
    "4130": {
      "fn": "CardinalToken.burn",
      "offset": [
        18871,
        18952
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4131": {
      "fn": "CardinalToken.burn",
      "offset": [
        18962,
        18981
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 40,
      "value": "0xD0C"
    },
    "4134": {
      "fn": "CardinalToken.burn",
      "offset": [
        18968,
        18972
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4135": {
      "fn": "CardinalToken.burn",
      "offset": [
        18974,
        18980
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4136": {
      "fn": "CardinalToken.burn",
      "offset": [
        18962,
        18967
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F17"
    },
    "4139": {
      "fn": "CardinalToken.burn",
      "jump": "i",
      "offset": [
        18962,
        18981
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4140": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4141": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4142": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4144": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4145": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4146": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4147": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4149": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4151": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4152": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4153": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4154": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4156": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4157": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4158": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4165": {
      "op": "SHL"
    },
    "4166": {
      "op": "SUB"
    },
    "4167": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4168": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "2"
    },
    "4169": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4170": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4171": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4172": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4173": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4175": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4176": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4177": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4178": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4179": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4180": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 41
    },
    "4181": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4182": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "2"
    },
    "4183": {
      "branch": 126,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4184": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B1"
    },
    "4187": {
      "branch": 126,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4188": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4190": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4191": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4197": {
      "op": "SHL"
    },
    "4198": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4199": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4202": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4204": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4205": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "2"
    },
    "4206": {
      "op": "MSTORE"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4211": {
      "op": "DUP3"
    },
    "4212": {
      "op": "ADD"
    },
    "4213": {
      "op": "MSTORE"
    },
    "4214": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4249": {
      "op": "DUP3"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "op": "MSTORE"
    },
    "4252": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4260": {
      "op": "SHL"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4263": {
      "op": "DUP3"
    },
    "4264": {
      "op": "ADD"
    },
    "4265": {
      "op": "MSTORE"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4268": {
      "op": "ADD"
    },
    "4269": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "4272": {
      "op": "JUMP"
    },
    "4273": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4274": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 42,
      "value": "0x10BE"
    },
    "4277": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4278": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4279": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4280": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4281": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "2"
    },
    "4282": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16E1"
    },
    "4285": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4286": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4287": {
      "op": "POP"
    },
    "4288": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7014,
        7018
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 43,
      "value": "0x1"
    },
    "4290": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7014,
        7018
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4291": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4292": {
      "op": "POP"
    },
    "4293": {
      "op": "POP"
    },
    "4294": {
      "op": "POP"
    },
    "4295": {
      "op": "POP"
    },
    "4296": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4297": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4298": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4299": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6341,
        6345
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4301": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 44
    },
    "4302": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4303": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4304": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "4306": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4308": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4309": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4311": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4312": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4313": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4314": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4316": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6414,
        6437
      ],
      "op": "AND",
      "path": "20"
    },
    "4317": {
      "branch": 111,
      "fn": "CardinalToken.transfer",
      "offset": [
        6413,
        6437
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4318": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10F9"
    },
    "4321": {
      "branch": 111,
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4322": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4324": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4331": {
      "op": "SHL"
    },
    "4332": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4333": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4334": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4336": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "ADD",
      "path": "20"
    },
    "4337": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "4340": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4341": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x225D"
    },
    "4344": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        6405,
        6571
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4345": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6405,
        6571
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4352": {
      "op": "SHL"
    },
    "4353": {
      "op": "SUB"
    },
    "4354": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 45
    },
    "4355": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "AND",
      "path": "20"
    },
    "4356": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4358": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4359": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4360": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4361": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6650
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "4363": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4365": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4366": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4368": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4369": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4370": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4371": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4373": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6641,
        6661
      ],
      "op": "AND",
      "path": "20"
    },
    "4374": {
      "branch": 112,
      "fn": "CardinalToken.transfer",
      "offset": [
        6640,
        6661
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4375": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1132"
    },
    "4378": {
      "branch": 112,
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4379": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4381": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4382": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4388": {
      "op": "SHL"
    },
    "4389": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4390": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4391": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4393": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "ADD",
      "path": "20"
    },
    "4394": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "4397": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4398": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2310"
    },
    "4401": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        6632,
        6844
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4402": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6632,
        6844
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4403": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4404": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4406": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4407": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4408": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4409": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        6990
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "4411": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4413": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4414": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4416": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4417": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4418": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4419": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4421": {
      "branch": 113,
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7004
      ],
      "op": "AND",
      "path": "20"
    },
    "4422": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7039
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4423": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7039
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4424": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7039
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1161"
    },
    "4427": {
      "branch": 113,
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7039
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4428": {
      "op": "POP"
    },
    "4429": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4430": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4432": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4433": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4434": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4435": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7025
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4437": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4439": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4440": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4442": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4443": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4444": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4445": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4447": {
      "branch": 114,
      "fn": "CardinalToken.transfer",
      "offset": [
        7009,
        7039
      ],
      "op": "AND",
      "path": "20"
    },
    "4448": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7008,
        7039
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4449": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7039
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4450": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7071
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4451": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7071
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4452": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7071
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1186"
    },
    "4455": {
      "branch": 114,
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7071
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4456": {
      "op": "POP"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4463": {
      "op": "SHL"
    },
    "4464": {
      "op": "SUB"
    },
    "4465": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4466": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "AND",
      "path": "20"
    },
    "4467": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4469": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4470": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4471": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4472": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7060
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4474": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4476": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4477": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4479": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4480": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4481": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4482": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4484": {
      "branch": 115,
      "fn": "CardinalToken.transfer",
      "offset": [
        7044,
        7071
      ],
      "op": "AND",
      "path": "20"
    },
    "4485": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7043,
        7071
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4486": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6977,
        7071
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4487": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6973,
        7245
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4488": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6973,
        7245
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1240"
    },
    "4491": {
      "branch": 115,
      "fn": "CardinalToken.transfer",
      "offset": [
        6973,
        7245
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4492": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7146,
        7148
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 46,
      "value": "0x14"
    },
    "4494": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7130,
        7143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1196"
    },
    "4497": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4499": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4500": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4501": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4502": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7130,
        7143
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4503": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7130,
        7148
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11A0"
    },
    "4506": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7130,
        7148
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4507": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7130,
        7148
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4508": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7130,
        7148
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "4511": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7130,
        7148
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4512": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7130,
        7148
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4513": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7119,
        7125
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4514": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7096,
        7116
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11AA"
    },
    "4517": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7106,
        7115
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4518": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7096,
        7105
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE5E"
    },
    "4521": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7096,
        7116
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4522": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7096,
        7116
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4523": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7096,
        7125
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11B4"
    },
    "4526": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7096,
        7125
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4527": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7096,
        7125
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4528": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7096,
        7125
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "4531": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7096,
        7125
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4532": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7096,
        7125
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4533": {
      "branch": 116,
      "fn": "CardinalToken.transfer",
      "offset": [
        7095,
        7149
      ],
      "op": "LT",
      "path": "20"
    },
    "4534": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1240"
    },
    "4537": {
      "branch": 116,
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4538": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4540": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4541": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4547": {
      "op": "SHL"
    },
    "4548": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4549": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4552": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4554": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4555": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "ADD",
      "path": "20"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4561": {
      "op": "DUP3"
    },
    "4562": {
      "op": "ADD"
    },
    "4563": {
      "op": "MSTORE"
    },
    "4564": {
      "op": "PUSH32",
      "value": "0x596F752063616E27742068617665206D6F7265207468616E203525206F662074"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4599": {
      "op": "DUP3"
    },
    "4600": {
      "op": "ADD"
    },
    "4601": {
      "op": "MSTORE"
    },
    "4602": {
      "op": "PUSH32",
      "value": "0x686520746F74616C2043617264696E616C20546F6B656E20737570706C792061"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4637": {
      "op": "DUP3"
    },
    "4638": {
      "op": "ADD"
    },
    "4639": {
      "op": "MSTORE"
    },
    "4640": {
      "op": "PUSH16",
      "value": "0x333A32B91030902222AC1039BBB0B817"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "4659": {
      "op": "SHL"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4662": {
      "op": "DUP3"
    },
    "4663": {
      "op": "ADD"
    },
    "4664": {
      "op": "MSTORE"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4667": {
      "op": "ADD"
    },
    "4668": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "4671": {
      "op": "JUMP"
    },
    "4672": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7087,
        7234
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4673": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4674": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4676": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4677": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4678": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4679": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7366
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4681": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4683": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4684": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4686": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4687": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4688": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4689": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4691": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "AND",
      "path": "20"
    },
    "4692": {
      "branch": 117,
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7380
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4693": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7411
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1276"
    },
    "4696": {
      "branch": 117,
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7411
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4704": {
      "op": "SHL"
    },
    "4705": {
      "op": "SUB"
    },
    "4706": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4707": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "AND",
      "path": "20"
    },
    "4708": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4710": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4711": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4712": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4713": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4715": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4717": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4718": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4720": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4721": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4722": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4723": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4725": {
      "branch": 118,
      "fn": "CardinalToken.transfer",
      "offset": [
        7384,
        7411
      ],
      "op": "AND",
      "path": "20"
    },
    "4726": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7350,
        7411
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4727": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7346,
        7505
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4728": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7346,
        7505
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x128E"
    },
    "4731": {
      "branch": 118,
      "fn": "CardinalToken.transfer",
      "offset": [
        7346,
        7505
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4732": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7427,
        7469
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 47,
      "value": "0x1286"
    },
    "4735": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4736": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7451,
        7460
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4737": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7462,
        7468
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4738": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7427,
        7436
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1892"
    },
    "4741": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7427,
        7469
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4742": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7427,
        7469
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7490,
        7494
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 48,
      "value": "0x1"
    },
    "4746": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7483,
        7494
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8F9"
    },
    "4749": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7483,
        7494
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4750": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7346,
        7505
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4751": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7559,
        7584
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4753": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7625,
        7628
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4755": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7597,
        7621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "4757": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7597,
        7621
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4758": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7588,
        7594
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4759": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7588,
        7621
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12A0"
    },
    "4762": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7588,
        7621
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4763": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7588,
        7621
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4764": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7588,
        7621
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2411"
    },
    "4767": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7588,
        7621
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4768": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7588,
        7621
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4769": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7587,
        7628
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12AA"
    },
    "4772": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7587,
        7628
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4773": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7587,
        7628
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4774": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7587,
        7628
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "4777": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7587,
        7628
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4778": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7587,
        7628
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4779": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7559,
        7628
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4780": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7559,
        7628
      ],
      "op": "POP",
      "path": "20"
    },
    "4781": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7681,
        7701
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4783": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7737,
        7740
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4785": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7714,
        7733
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "4787": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7714,
        7733
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4788": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7705,
        7711
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4789": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7705,
        7733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12BE"
    },
    "4792": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7705,
        7733
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4793": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7705,
        7733
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4794": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7705,
        7733
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2411"
    },
    "4797": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7705,
        7733
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4798": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7705,
        7733
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4799": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7704,
        7740
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12C8"
    },
    "4802": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7704,
        7740
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4803": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7704,
        7740
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4804": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7704,
        7740
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "4807": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7704,
        7740
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4808": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7704,
        7740
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4809": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7681,
        7740
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4810": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7681,
        7740
      ],
      "op": "POP",
      "path": "20"
    },
    "4811": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7793,
        7813
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4813": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7849,
        7852
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4815": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7826,
        7845
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "4817": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7826,
        7845
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4818": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7817,
        7823
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4819": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7817,
        7845
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12DC"
    },
    "4822": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7817,
        7845
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4823": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7817,
        7845
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4824": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7817,
        7845
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2411"
    },
    "4827": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7817,
        7845
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4828": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7817,
        7845
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4829": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7816,
        7852
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12E6"
    },
    "4832": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7816,
        7852
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4833": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7816,
        7852
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4834": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7816,
        7852
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "4837": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7816,
        7852
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4838": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7816,
        7852
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4839": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7793,
        7852
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4840": {
      "op": "POP"
    },
    "4841": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7947,
        7966
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4843": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        7996
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12F4"
    },
    "4846": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7793,
        7852
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4847": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        7981
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4848": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        7996
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "4851": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        7969,
        7996
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4852": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7969,
        7996
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4853": {
      "fn": "CardinalToken.transfer",
      "offset": [
        7947,
        7996
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4854": {
      "op": "POP"
    },
    "4855": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8090,
        8161
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 49,
      "value": "0x130C"
    },
    "4858": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4859": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8114,
        8141
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "4861": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8114,
        8141
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4868": {
      "op": "SHL"
    },
    "4869": {
      "op": "SUB"
    },
    "4870": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8114,
        8141
      ],
      "op": "AND",
      "path": "20"
    },
    "4871": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8143,
        8160
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4872": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8090,
        8099
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1892"
    },
    "4875": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8090,
        8161
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4876": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8090,
        8161
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4877": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8171,
        8222
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 50,
      "value": "0x1317"
    },
    "4880": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4881": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8203,
        8207
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4882": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8210,
        8221
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4883": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8171,
        8180
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1892"
    },
    "4886": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8171,
        8222
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4887": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8171,
        8222
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4888": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8294,
        8316
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4890": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8342,
        8359
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4891": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8339
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1324"
    },
    "4894": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8328,
        8339
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4895": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8325
      ],
      "op": "DUP10",
      "path": "20"
    },
    "4896": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8339
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x246A"
    },
    "4899": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8319,
        8339
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4900": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8339
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4901": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8359
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x132E"
    },
    "4904": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8359
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4905": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8359
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4906": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8359
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x246A"
    },
    "4909": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8319,
        8359
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4910": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8319,
        8359
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4911": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8294,
        8359
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8369,
        8419
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 51,
      "value": "0x133B"
    },
    "4916": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4917": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8393,
        8402
      ],
      "op": "DUP10",
      "path": "20"
    },
    "4918": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8404,
        8418
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4919": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8369,
        8378
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1892"
    },
    "4922": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8369,
        8419
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4923": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8369,
        8419
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4924": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8430,
        8466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4926": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8469,
        8493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1346"
    },
    "4929": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8487,
        8491
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4930": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8469,
        8478
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE5E"
    },
    "4933": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8469,
        8493
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4934": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8469,
        8493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4935": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4936": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4938": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4939": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4940": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4941": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8522
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "4943": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4945": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4946": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4948": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4949": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4950": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4951": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8430,
        8493
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4952": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8430,
        8493
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4956": {
      "branch": 119,
      "fn": "CardinalToken.transfer",
      "offset": [
        8509,
        8536
      ],
      "op": "AND",
      "path": "20"
    },
    "4957": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8504,
        8935
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13A6"
    },
    "4960": {
      "branch": 119,
      "fn": "CardinalToken.transfer",
      "offset": [
        8504,
        8935
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4961": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8612,
        8632
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x16"
    },
    "4963": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8612,
        8632
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4964": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8597,
        8608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "4966": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8597,
        8608
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4967": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8609
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1378"
    },
    "4970": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8609
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4977": {
      "op": "SHL"
    },
    "4978": {
      "op": "SUB"
    },
    "4979": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8597,
        8608
      ],
      "op": "AND",
      "path": "20"
    },
    "4980": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8596
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE5E"
    },
    "4983": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8587,
        8609
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4984": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8609
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4985": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8632
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1382"
    },
    "4988": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8632
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4989": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8632
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4990": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8632
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "4993": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8587,
        8632
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4994": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8587,
        8632
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4995": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8556,
        8584
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4996": {
      "branch": 120,
      "fn": "CardinalToken.transfer",
      "offset": [
        8556,
        8632
      ],
      "op": "GT",
      "path": "20"
    },
    "4997": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8552,
        8726
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4998": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8552,
        8726
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1394"
    },
    "5001": {
      "branch": 120,
      "fn": "CardinalToken.transfer",
      "offset": [
        8552,
        8726
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5002": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8652,
        8711
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 52,
      "value": "0x1394"
    },
    "5005": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8679,
        8707
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5006": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8709,
        8710
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5008": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8652,
        8678
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A60"
    },
    "5011": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8652,
        8711
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5012": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8652,
        8711
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5013": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8787,
        8808
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "5014": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8826,
        8850
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5015": {
      "branch": 121,
      "fn": "CardinalToken.transfer",
      "offset": [
        8826,
        8850
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5016": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8822,
        8925
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13A4"
    },
    "5019": {
      "branch": 121,
      "fn": "CardinalToken.transfer",
      "offset": [
        8822,
        8925
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5020": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8870,
        8910
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 53,
      "value": "0x13A4"
    },
    "5023": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8888,
        8909
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "5024": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8870,
        8887
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BF6"
    },
    "5027": {
      "fn": "CardinalToken.transfer",
      "jump": "i",
      "offset": [
        8870,
        8910
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5028": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8870,
        8910
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5029": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8538,
        8935
      ],
      "op": "POP",
      "path": "20"
    },
    "5030": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8504,
        8935
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8952,
        8956
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 54,
      "value": "0x1"
    },
    "5034": {
      "fn": "CardinalToken.transfer",
      "offset": [
        8952,
        8956
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "5035": {
      "fn": "CardinalToken.transfer",
      "offset": [
        6263,
        8963
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "op": "POP"
    },
    "5039": {
      "op": "POP"
    },
    "5040": {
      "op": "POP"
    },
    "5041": {
      "op": "POP"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "op": "POP"
    },
    "5044": {
      "fn": "CardinalToken.transfer",
      "jump": "o",
      "offset": [
        6263,
        8963
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5045": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5887,
        5995
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5046": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5048": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5055": {
      "op": "SHL"
    },
    "5056": {
      "op": "SUB"
    },
    "5057": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5058": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5059": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5060": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DF"
    },
    "5063": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5064": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5066": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5073": {
      "op": "SHL"
    },
    "5074": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5075": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5076": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5078": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5079": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "5082": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5083": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "5086": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5087": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5094": {
      "op": "SHL"
    },
    "5095": {
      "op": "SUB"
    },
    "5096": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "AND",
      "path": "20",
      "statement": 55
    },
    "5097": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5983,
        5988
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5099": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5100": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5101": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5102": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "5104": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5106": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5107": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5109": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5110": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5980
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5111": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5988
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5112": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5988
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5115": {
      "op": "NOT"
    },
    "5116": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5988
      ],
      "op": "AND",
      "path": "20"
    },
    "5117": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5988
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5118": {
      "fn": "CardinalToken.includeUsersInFees",
      "offset": [
        5958,
        5988
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5119": {
      "fn": "CardinalToken.includeUsersInFees",
      "jump": "o",
      "offset": [
        5887,
        5995
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5120": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5121": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5123": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5130": {
      "op": "SHL"
    },
    "5131": {
      "op": "SUB"
    },
    "5132": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5133": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5134": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5135": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142A"
    },
    "5138": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5139": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5141": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5148": {
      "op": "SHL"
    },
    "5149": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5150": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5151": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5153": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5154": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "5157": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5158": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "5161": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5162": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5163": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16085,
        16086
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 56,
      "value": "0x5"
    },
    "5165": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16050,
        16081
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5166": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16050,
        16086
      ],
      "op": "GT",
      "path": "20"
    },
    "5167": {
      "branch": 122,
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16050,
        16086
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5168": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14A1"
    },
    "5171": {
      "branch": 122,
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5172": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5174": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5181": {
      "op": "SHL"
    },
    "5182": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5183": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5186": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5188": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5189": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "ADD",
      "path": "20"
    },
    "5190": {
      "op": "MSTORE"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5195": {
      "op": "DUP3"
    },
    "5196": {
      "op": "ADD"
    },
    "5197": {
      "op": "MSTORE"
    },
    "5198": {
      "op": "PUSH32",
      "value": "0x546865206D656D626572206769766561776179207472616E73616374696F6E20"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5233": {
      "op": "DUP3"
    },
    "5234": {
      "op": "ADD"
    },
    "5235": {
      "op": "MSTORE"
    },
    "5236": {
      "op": "PUSH32",
      "value": "0x6665652063616E2774206265206D6F7265207468616E2035252E000000000000"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5271": {
      "op": "DUP3"
    },
    "5272": {
      "op": "ADD"
    },
    "5273": {
      "op": "MSTORE"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5276": {
      "op": "ADD"
    },
    "5277": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "5280": {
      "op": "JUMP"
    },
    "5281": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16042,
        16149
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5282": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16159,
        16183
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 57,
      "value": "0x11"
    },
    "5284": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16159,
        16217
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5285": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16159,
        16217
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5286": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16159,
        16217
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5287": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16232,
        16300
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 58,
      "value": "0x40"
    },
    "5289": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16232,
        16300
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5290": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16186,
        16217
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5291": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16186,
        16217
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5292": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16232,
        16300
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x39E1F3E4CC8FEB7DBC01C16E37AA1546C352489807C660593C62538F536AC051"
    },
    "5325": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16232,
        16300
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5326": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16232,
        16300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5328": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16232,
        16300
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5329": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        16232,
        16300
      ],
      "op": "LOG2",
      "path": "20"
    },
    "5330": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "offset": [
        15928,
        16307
      ],
      "op": "POP",
      "path": "20"
    },
    "5331": {
      "fn": "CardinalToken.updateMemberGiveawayTransactionFee",
      "jump": "o",
      "offset": [
        15928,
        16307
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5332": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5333": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5335": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5342": {
      "op": "SHL"
    },
    "5343": {
      "op": "SUB"
    },
    "5344": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5345": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5346": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5347": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14FE"
    },
    "5350": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5351": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5353": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5360": {
      "op": "SHL"
    },
    "5361": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5362": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5366": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "5369": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5370": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "5373": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5375": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17159,
        17160
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 59,
      "value": "0x5"
    },
    "5377": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17129,
        17155
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5378": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17129,
        17160
      ],
      "op": "GT",
      "path": "20"
    },
    "5379": {
      "branch": 123,
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17129,
        17160
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5380": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x156C"
    },
    "5383": {
      "branch": 123,
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5384": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5386": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5393": {
      "op": "SHL"
    },
    "5394": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5395": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5398": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5400": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5401": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "ADD",
      "path": "20"
    },
    "5402": {
      "op": "MSTORE"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5407": {
      "op": "DUP3"
    },
    "5408": {
      "op": "ADD"
    },
    "5409": {
      "op": "MSTORE"
    },
    "5410": {
      "op": "PUSH32",
      "value": "0x54686520646576656C6F706572207472616E73616374696F6E20666565206361"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5445": {
      "op": "DUP3"
    },
    "5446": {
      "op": "ADD"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "PUSH20",
      "value": "0x3713BA1031329036B7B932903A3430B7101A9297"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "5471": {
      "op": "SHL"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5474": {
      "op": "DUP3"
    },
    "5475": {
      "op": "ADD"
    },
    "5476": {
      "op": "MSTORE"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5479": {
      "op": "ADD"
    },
    "5480": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "5483": {
      "op": "JUMP"
    },
    "5484": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17121,
        17217
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5485": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17227,
        17246
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 60,
      "value": "0x13"
    },
    "5487": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17227,
        17275
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5488": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17227,
        17275
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5489": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17227,
        17275
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5490": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17290,
        17348
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 61,
      "value": "0x40"
    },
    "5492": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17290,
        17348
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5493": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17249,
        17275
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5494": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17249,
        17275
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5495": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17290,
        17348
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x4BEE3C216A701857ABD67FED754EFDD065A8599BE5476E2C4B118FB1896B9FFA"
    },
    "5528": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17290,
        17348
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5529": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17290,
        17348
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5531": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17290,
        17348
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5532": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17290,
        17348
      ],
      "op": "LOG2",
      "path": "20"
    },
    "5533": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "offset": [
        17017,
        17355
      ],
      "op": "POP",
      "path": "20"
    },
    "5534": {
      "fn": "CardinalToken.updateDeveloperTransactionFee",
      "jump": "o",
      "offset": [
        17017,
        17355
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5536": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5538": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5545": {
      "op": "SHL"
    },
    "5546": {
      "op": "SUB"
    },
    "5547": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5548": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5549": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5550": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C9"
    },
    "5553": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5554": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5556": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5557": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5563": {
      "op": "SHL"
    },
    "5564": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5565": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5566": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5568": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5569": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "5572": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5573": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "5576": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5577": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5584": {
      "op": "SHL"
    },
    "5585": {
      "op": "SUB"
    },
    "5586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 62
    },
    "5587": {
      "branch": 137,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "5588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162E"
    },
    "5591": {
      "branch": 137,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5601": {
      "op": "SHL"
    },
    "5602": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5606": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5608": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "5610": {
      "op": "MSTORE"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5615": {
      "op": "DUP3"
    },
    "5616": {
      "op": "ADD"
    },
    "5617": {
      "op": "MSTORE"
    },
    "5618": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5653": {
      "op": "DUP3"
    },
    "5654": {
      "op": "ADD"
    },
    "5655": {
      "op": "MSTORE"
    },
    "5656": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5665": {
      "op": "SHL"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5668": {
      "op": "DUP3"
    },
    "5669": {
      "op": "ADD"
    },
    "5670": {
      "op": "MSTORE"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5673": {
      "op": "ADD"
    },
    "5674": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "5677": {
      "op": "JUMP"
    },
    "5678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5679": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 63,
      "value": "0xF99"
    },
    "5682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC5"
    },
    "5686": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5687": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17621,
        17766
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5688": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5690": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5697": {
      "op": "SHL"
    },
    "5698": {
      "op": "SUB"
    },
    "5699": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5700": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5701": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5702": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1661"
    },
    "5705": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5708": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5709": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5715": {
      "op": "SHL"
    },
    "5716": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5717": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5718": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5720": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5721": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "5724": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5725": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "5728": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5729": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5736": {
      "op": "SHL"
    },
    "5737": {
      "op": "SUB"
    },
    "5738": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 64
    },
    "5739": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5740": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5741": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "AND",
      "path": "20"
    },
    "5742": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5744": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5745": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5746": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5747": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17733
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "5749": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5751": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5752": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5754": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5755": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17743
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5756": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5757": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5760": {
      "op": "NOT"
    },
    "5761": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "AND",
      "path": "20"
    },
    "5762": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5763": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5764": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5765": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5766": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5767": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5768": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "OR",
      "path": "20"
    },
    "5769": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5770": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "offset": [
        17720,
        17759
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5771": {
      "fn": "CardinalToken.addOrRemovePairAddress",
      "jump": "o",
      "offset": [
        17621,
        17766
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5772": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15603,
        15725
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5773": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5775": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "op": "SUB"
    },
    "5784": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5785": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5786": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5787": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B6"
    },
    "5790": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5793": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5800": {
      "op": "SHL"
    },
    "5801": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5805": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5806": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "5809": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5810": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2481"
    },
    "5813": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5814": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5821": {
      "op": "SHL"
    },
    "5822": {
      "op": "SUB"
    },
    "5823": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 65
    },
    "5824": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5825": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5826": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "AND",
      "path": "20"
    },
    "5827": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5829": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5830": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5831": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5832": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15698
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "5834": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5836": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5837": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5839": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5840": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15704
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5841": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5842": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5845": {
      "op": "NOT"
    },
    "5846": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "AND",
      "path": "20"
    },
    "5847": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5848": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5849": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5850": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5851": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5852": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5853": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "OR",
      "path": "20"
    },
    "5854": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5855": {
      "fn": "CardinalToken.updateBlackList",
      "offset": [
        15689,
        15718
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5856": {
      "fn": "CardinalToken.updateBlackList",
      "jump": "o",
      "offset": [
        15603,
        15725
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5857": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5864": {
      "op": "SHL"
    },
    "5865": {
      "op": "SUB"
    },
    "5866": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 66
    },
    "5867": {
      "branch": 127,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "2"
    },
    "5868": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1743"
    },
    "5871": {
      "branch": 127,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5872": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5874": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5875": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5881": {
      "op": "SHL"
    },
    "5882": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5883": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5886": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5888": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5889": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "2"
    },
    "5890": {
      "op": "MSTORE"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5893": {
      "op": "DUP1"
    },
    "5894": {
      "op": "DUP3"
    },
    "5895": {
      "op": "ADD"
    },
    "5896": {
      "op": "MSTORE"
    },
    "5897": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "ADD"
    },
    "5934": {
      "op": "MSTORE"
    },
    "5935": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5945": {
      "op": "DUP3"
    },
    "5946": {
      "op": "ADD"
    },
    "5947": {
      "op": "MSTORE"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5950": {
      "op": "ADD"
    },
    "5951": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "5954": {
      "op": "JUMP"
    },
    "5955": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5962": {
      "op": "SHL"
    },
    "5963": {
      "op": "SUB"
    },
    "5964": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 67
    },
    "5965": {
      "branch": 128,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "2"
    },
    "5966": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A4"
    },
    "5969": {
      "branch": 128,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5970": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5972": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5979": {
      "op": "SHL"
    },
    "5980": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5981": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5984": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5986": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5987": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "2"
    },
    "5988": {
      "op": "MSTORE"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5993": {
      "op": "DUP3"
    },
    "5994": {
      "op": "ADD"
    },
    "5995": {
      "op": "MSTORE"
    },
    "5996": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6031": {
      "op": "DUP3"
    },
    "6032": {
      "op": "ADD"
    },
    "6033": {
      "op": "MSTORE"
    },
    "6034": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6039": {
      "op": "SHL"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6042": {
      "op": "DUP3"
    },
    "6043": {
      "op": "ADD"
    },
    "6044": {
      "op": "MSTORE"
    },
    "6045": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6047": {
      "op": "ADD"
    },
    "6048": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "6051": {
      "op": "JUMP"
    },
    "6052": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6059": {
      "op": "SHL"
    },
    "6060": {
      "op": "SUB"
    },
    "6061": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 68
    },
    "6062": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6063": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "2"
    },
    "6064": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6066": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6067": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6068": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6069": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6071": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6073": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6074": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6075": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6076": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6078": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6079": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6080": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6081": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6082": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6083": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "2"
    },
    "6084": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6085": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6086": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6087": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6088": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6089": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6090": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6091": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6092": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6093": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6094": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6095": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6096": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6097": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 69
    },
    "6098": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6099": {
      "op": "DUP5"
    },
    "6100": {
      "op": "DUP2"
    },
    "6101": {
      "op": "MSTORE"
    },
    "6102": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6135": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6136": {
      "op": "ADD"
    },
    "6137": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6138": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6140": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6141": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6142": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6143": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "2"
    },
    "6144": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6145": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6146": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "6147": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "6148": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "6149": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6150": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6157": {
      "op": "SHL"
    },
    "6158": {
      "op": "SUB"
    },
    "6159": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6160": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6161": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "2"
    },
    "6162": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6164": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6165": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6166": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6167": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6169": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6171": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6172": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6173": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6174": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6176": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6177": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6178": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6179": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6180": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6181": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "2"
    },
    "6182": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6183": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6184": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6185": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6186": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6187": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6188": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6191": {
      "op": "NOT"
    },
    "6192": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6193": {
      "branch": 129,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "2"
    },
    "6194": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF11"
    },
    "6197": {
      "branch": 129,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6198": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 70
    },
    "6199": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6200": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "2"
    },
    "6201": {
      "branch": 130,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6202": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1885"
    },
    "6205": {
      "branch": 130,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6206": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6208": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6215": {
      "op": "SHL"
    },
    "6216": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6217": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6220": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6222": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6223": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "2"
    },
    "6224": {
      "op": "MSTORE"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6229": {
      "op": "DUP3"
    },
    "6230": {
      "op": "ADD"
    },
    "6231": {
      "op": "MSTORE"
    },
    "6232": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6267": {
      "op": "DUP3"
    },
    "6268": {
      "op": "ADD"
    },
    "6269": {
      "op": "MSTORE"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "6276": {
      "op": "JUMP"
    },
    "6277": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6278": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 71,
      "value": "0xF11"
    },
    "6281": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6282": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6283": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6284": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6285": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "2"
    },
    "6286": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16E1"
    },
    "6289": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6290": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6297": {
      "op": "SHL"
    },
    "6298": {
      "op": "SUB"
    },
    "6299": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 72
    },
    "6300": {
      "branch": 131,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "2"
    },
    "6301": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18F6"
    },
    "6304": {
      "branch": 131,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6305": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6307": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6314": {
      "op": "SHL"
    },
    "6315": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6316": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6319": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6321": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6322": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6323": {
      "op": "MSTORE"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6328": {
      "op": "DUP3"
    },
    "6329": {
      "op": "ADD"
    },
    "6330": {
      "op": "MSTORE"
    },
    "6331": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6366": {
      "op": "DUP3"
    },
    "6367": {
      "op": "ADD"
    },
    "6368": {
      "op": "MSTORE"
    },
    "6369": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6377": {
      "op": "SHL"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6380": {
      "op": "DUP3"
    },
    "6381": {
      "op": "ADD"
    },
    "6382": {
      "op": "MSTORE"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6385": {
      "op": "ADD"
    },
    "6386": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "6389": {
      "op": "JUMP"
    },
    "6390": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6397": {
      "op": "SHL"
    },
    "6398": {
      "op": "SUB"
    },
    "6399": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 73
    },
    "6400": {
      "branch": 132,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "2"
    },
    "6401": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1958"
    },
    "6404": {
      "branch": 132,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6405": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6407": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6414": {
      "op": "SHL"
    },
    "6415": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6416": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6419": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6421": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6422": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "2"
    },
    "6423": {
      "op": "MSTORE"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6428": {
      "op": "DUP3"
    },
    "6429": {
      "op": "ADD"
    },
    "6430": {
      "op": "MSTORE"
    },
    "6431": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6466": {
      "op": "DUP3"
    },
    "6467": {
      "op": "ADD"
    },
    "6468": {
      "op": "MSTORE"
    },
    "6469": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6475": {
      "op": "SHL"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6478": {
      "op": "DUP3"
    },
    "6479": {
      "op": "ADD"
    },
    "6480": {
      "op": "MSTORE"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6483": {
      "op": "ADD"
    },
    "6484": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "6487": {
      "op": "JUMP"
    },
    "6488": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6495": {
      "op": "SHL"
    },
    "6496": {
      "op": "SUB"
    },
    "6497": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6498": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "2"
    },
    "6499": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6501": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6502": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6503": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6504": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6506": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6507": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6508": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6509": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6511": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6512": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6513": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6514": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 74
    },
    "6515": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6516": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "2"
    },
    "6517": {
      "branch": 133,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6518": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D0"
    },
    "6521": {
      "branch": 133,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6522": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6524": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6531": {
      "op": "SHL"
    },
    "6532": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6533": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6536": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6538": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6539": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "2"
    },
    "6540": {
      "op": "MSTORE"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6545": {
      "op": "DUP3"
    },
    "6546": {
      "op": "ADD"
    },
    "6547": {
      "op": "MSTORE"
    },
    "6548": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6583": {
      "op": "DUP3"
    },
    "6584": {
      "op": "ADD"
    },
    "6585": {
      "op": "MSTORE"
    },
    "6586": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6595": {
      "op": "SHL"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6598": {
      "op": "DUP3"
    },
    "6599": {
      "op": "ADD"
    },
    "6600": {
      "op": "MSTORE"
    },
    "6601": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6603": {
      "op": "ADD"
    },
    "6604": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "6607": {
      "op": "JUMP"
    },
    "6608": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6615": {
      "op": "SHL"
    },
    "6616": {
      "op": "SUB"
    },
    "6617": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 75
    },
    "6618": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6619": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "2"
    },
    "6620": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6622": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6623": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6624": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6625": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6627": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6628": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6629": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6630": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6632": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6633": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6634": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6635": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6636": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6637": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "2"
    },
    "6638": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6639": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6640": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 76
    },
    "6641": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6642": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "2"
    },
    "6643": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6644": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6645": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6646": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6647": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6648": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6649": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6650": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6651": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6652": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6653": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A07"
    },
    "6656": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6657": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6658": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6659": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2452"
    },
    "6662": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6663": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6664": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6665": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "6666": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "6667": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6668": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6669": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6670": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "6671": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 77
    },
    "6672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6678": {
      "op": "SHL"
    },
    "6679": {
      "op": "SUB"
    },
    "6680": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "2"
    },
    "6681": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6688": {
      "op": "SHL"
    },
    "6689": {
      "op": "SUB"
    },
    "6690": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "2"
    },
    "6691": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6724": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6725": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6727": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6728": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A53"
    },
    "6731": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6732": {
      "op": "DUP2"
    },
    "6733": {
      "op": "MSTORE"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6736": {
      "op": "ADD"
    },
    "6737": {
      "op": "SWAP1"
    },
    "6738": {
      "op": "JUMP"
    },
    "6739": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6740": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6742": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6743": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6744": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6745": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "2"
    },
    "6746": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6747": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6748": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 78,
      "value": "0xF11"
    },
    "6751": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6752": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12232,
        12798
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6753": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6755": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6756": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6757": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12366,
        12367
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "6759": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6760": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6761": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6762": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "6764": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6765": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "ADD",
      "path": "20"
    },
    "6766": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6767": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6768": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12328,
        12349
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6770": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12328,
        12349
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6771": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6773": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6774": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "ADD",
      "path": "20"
    },
    "6775": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6776": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6777": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "6778": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6779": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "6780": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "ADD",
      "path": "20"
    },
    "6781": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6782": {
      "op": "POP"
    },
    "6783": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12352,
        12368
      ],
      "op": "POP",
      "path": "20"
    },
    "6784": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12328,
        12368
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6785": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12328,
        12368
      ],
      "op": "POP",
      "path": "20"
    },
    "6786": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12396,
        12400
      ],
      "op": "ADDRESS",
      "path": "20",
      "statement": 79
    },
    "6787": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12382
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6788": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12383,
        12384
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6790": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6791": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6792": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6793": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "LT",
      "path": "20"
    },
    "6794": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A95"
    },
    "6797": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6798": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A95"
    },
    "6801": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24B6"
    },
    "6804": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        12378,
        12385
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6805": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6812": {
      "op": "SHL"
    },
    "6813": {
      "op": "SUB"
    },
    "6814": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12401
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6815": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12401
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6816": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12401
      ],
      "op": "AND",
      "path": "20"
    },
    "6817": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6819": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6820": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6821": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "MUL",
      "path": "20"
    },
    "6822": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6823": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6824": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6825": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "ADD",
      "path": "20"
    },
    "6826": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6827": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "ADD",
      "path": "20"
    },
    "6828": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12401
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6829": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12401
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6830": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12401
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6831": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12401
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6832": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12434
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 80,
      "value": "0x14"
    },
    "6834": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12434
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6835": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6837": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6838": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6839": {
      "op": "PUSH4",
      "value": "0x15AB88C9"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6846": {
      "op": "SHL"
    },
    "6847": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6848": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6849": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6850": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6851": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12434
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6852": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12434
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6853": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12434
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6854": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12434
      ],
      "op": "AND",
      "path": "20"
    },
    "6855": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12434
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6856": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12439
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAD5C4648"
    },
    "6861": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12439
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6862": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6864": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6865": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6866": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ADD",
      "path": "20"
    },
    "6867": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6868": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6869": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12378,
        12385
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6870": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6871": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6872": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "SUB",
      "path": "20"
    },
    "6873": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ADD",
      "path": "20"
    },
    "6874": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6875": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12434
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6876": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6877": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "6878": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6879": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6880": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6881": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AE9"
    },
    "6884": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6885": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6887": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6888": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6889": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6890": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "POP",
      "path": "20"
    },
    "6891": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "GAS",
      "path": "20"
    },
    "6892": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "6893": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6894": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6895": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6896": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AFD"
    },
    "6899": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6900": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6901": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6903": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6904": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "6905": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6906": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6908": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6909": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6910": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "POP",
      "path": "20"
    },
    "6911": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "POP",
      "path": "20"
    },
    "6912": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "POP",
      "path": "20"
    },
    "6913": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "POP",
      "path": "20"
    },
    "6914": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6916": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6917": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6918": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "6920": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "NOT",
      "path": "20"
    },
    "6921": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "6923": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6924": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ADD",
      "path": "20"
    },
    "6925": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "AND",
      "path": "20"
    },
    "6926": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6927": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ADD",
      "path": "20"
    },
    "6928": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6929": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6931": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6932": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "POP",
      "path": "20"
    },
    "6933": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6934": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "ADD",
      "path": "20"
    },
    "6935": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6936": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B21"
    },
    "6939": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6940": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6941": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24CC"
    },
    "6944": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        12421,
        12441
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6945": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12421,
        12441
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6946": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12415
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6947": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12416,
        12417
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6949": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6950": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6951": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6952": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "LT",
      "path": "20"
    },
    "6953": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B34"
    },
    "6956": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6957": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B34"
    },
    "6960": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24B6"
    },
    "6963": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        12411,
        12418
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6964": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6971": {
      "op": "SHL"
    },
    "6972": {
      "op": "SUB"
    },
    "6973": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12441
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6974": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12441
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6975": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12441
      ],
      "op": "AND",
      "path": "20"
    },
    "6976": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6978": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6979": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6980": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "MUL",
      "path": "20"
    },
    "6981": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6982": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6983": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6984": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "ADD",
      "path": "20"
    },
    "6985": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12418
      ],
      "op": "ADD",
      "path": "20"
    },
    "6986": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12411,
        12441
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6987": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12483,
        12496
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 81,
      "value": "0x14"
    },
    "6989": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12483,
        12496
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6990": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12451,
        12506
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B5A"
    },
    "6993": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12451,
        12506
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6994": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12468,
        12472
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6995": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12468,
        12472
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6996": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12483,
        12496
      ],
      "op": "AND",
      "path": "20"
    },
    "6997": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12499,
        12505
      ],
      "op": "DUP6",
      "path": "20"
    },
    "6998": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12451,
        12459
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16E1"
    },
    "7001": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        12451,
        12506
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7002": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12451,
        12506
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7003": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12529
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 82,
      "value": "0x14"
    },
    "7005": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12529
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7006": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7008": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7009": {
      "op": "PUSH4",
      "value": "0x791AC947"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7016": {
      "op": "SHL"
    },
    "7017": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7018": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7025": {
      "op": "SHL"
    },
    "7026": {
      "op": "SUB"
    },
    "7027": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12529
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7028": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12529
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7029": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12529
      ],
      "op": "AND",
      "path": "20"
    },
    "7030": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12529
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7031": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12580
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x791AC947"
    },
    "7036": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12580
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7037": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B92"
    },
    "7040": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7041": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12594,
        12600
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7042": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12594,
        12600
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7043": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12614,
        12630
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7044": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12614,
        12630
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7045": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12644,
        12648
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7046": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12644,
        12648
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7047": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12670,
        12674
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "7048": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12670,
        12674
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7049": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12689,
        12704
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "7050": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12689,
        12704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7051": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7053": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "ADD",
      "path": "20"
    },
    "7054": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24E9"
    },
    "7057": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "i",
      "offset": [
        12516,
        12714
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7058": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7059": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7061": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7063": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7064": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7065": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7066": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "SUB",
      "path": "20"
    },
    "7067": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7068": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7070": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP8",
      "path": "20"
    },
    "7071": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7072": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "7073": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7074": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7075": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7076": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BAC"
    },
    "7079": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7080": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7082": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7083": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7084": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7085": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "POP",
      "path": "20"
    },
    "7086": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "GAS",
      "path": "20"
    },
    "7087": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "CALL",
      "path": "20"
    },
    "7088": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7089": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7090": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7091": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BC0"
    },
    "7094": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7095": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7096": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7098": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7099": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "7100": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7101": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7103": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7104": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12516,
        12714
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7105": {
      "op": "POP"
    },
    "7106": {
      "op": "POP"
    },
    "7107": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12730,
        12791
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 83,
      "value": "0x40"
    },
    "7109": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12730,
        12791
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7110": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12769,
        12790
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "7111": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12769,
        12790
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7112": {
      "op": "POP"
    },
    "7113": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12761,
        12767
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7114": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12761,
        12767
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7115": {
      "op": "POP"
    },
    "7116": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12730,
        12791
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x55CDE9DF0AA5720272C955ECD1EF12A4C4D3326A4B8C1C4D0557A25BE8C25E10"
    },
    "7149": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12730,
        12791
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7150": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12730,
        12791
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7152": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12730,
        12791
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7153": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12730,
        12791
      ],
      "op": "LOG3",
      "path": "20"
    },
    "7154": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12318,
        12798
      ],
      "op": "POP",
      "path": "20"
    },
    "7155": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12232,
        12798
      ],
      "op": "POP",
      "path": "20"
    },
    "7156": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "offset": [
        12232,
        12798
      ],
      "op": "POP",
      "path": "20"
    },
    "7157": {
      "fn": "CardinalToken.swapCardinalTokensForMatic",
      "jump": "o",
      "offset": [
        12232,
        12798
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7158": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12948,
        13637
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7159": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13009,
        13025
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7161": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13050,
        13069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "7163": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13050,
        13069
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7164": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13028,
        13047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "7166": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13028,
        13047
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7167": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13028,
        13069
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C08"
    },
    "7170": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13028,
        13069
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7171": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13028,
        13069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7172": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13028,
        13069
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "7175": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13028,
        13069
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7176": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13028,
        13069
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7177": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13009,
        13069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7178": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13009,
        13069
      ],
      "op": "POP",
      "path": "20"
    },
    "7179": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13079,
        13099
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7181": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13135,
        13143
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7182": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13112,
        13131
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "7184": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13112,
        13131
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7185": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13103,
        13109
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7186": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13103,
        13131
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C1B"
    },
    "7189": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13103,
        13131
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7190": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13103,
        13131
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7191": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13103,
        13131
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2411"
    },
    "7194": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13103,
        13131
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7195": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13103,
        13131
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7196": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13102,
        13143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C25"
    },
    "7199": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13102,
        13143
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7200": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13102,
        13143
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7201": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13102,
        13143
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "7204": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13102,
        13143
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7205": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13102,
        13143
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7206": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13079,
        13143
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7207": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13079,
        13143
      ],
      "op": "POP",
      "path": "20"
    },
    "7208": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13153,
        13173
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7210": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13209,
        13217
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7211": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13186,
        13205
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "7213": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13186,
        13205
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7214": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13177,
        13183
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7215": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13177,
        13205
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C38"
    },
    "7218": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13177,
        13205
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7219": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13177,
        13205
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7220": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13177,
        13205
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2411"
    },
    "7223": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13177,
        13205
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7224": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13177,
        13205
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7225": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13176,
        13217
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C42"
    },
    "7228": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13176,
        13217
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7229": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13176,
        13217
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7230": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13176,
        13217
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2430"
    },
    "7233": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13176,
        13217
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7234": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13176,
        13217
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7235": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13278
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE"
    },
    "7237": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13278
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7238": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7240": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7241": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13153,
        13217
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7242": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13153,
        13217
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7243": {
      "op": "POP"
    },
    "7244": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13229,
        13250
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7246": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13229,
        13250
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7253": {
      "op": "SHL"
    },
    "7254": {
      "op": "SUB"
    },
    "7255": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13278
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7256": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13278
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7257": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13278
      ],
      "op": "AND",
      "path": "20"
    },
    "7258": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13278
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7259": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13291,
        13303
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7260": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13291,
        13303
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7261": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13229,
        13250
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7262": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7263": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13229,
        13250
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7264": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7265": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13291,
        13303
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7266": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13278
      ],
      "op": "DUP8",
      "path": "20"
    },
    "7267": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "GAS",
      "path": "20"
    },
    "7268": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "CALL",
      "path": "20"
    },
    "7269": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7270": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "POP",
      "path": "20"
    },
    "7271": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "POP",
      "path": "20"
    },
    "7272": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "POP",
      "path": "20"
    },
    "7273": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7274": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7275": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7277": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7278": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "EQ",
      "path": "20"
    },
    "7279": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C94"
    },
    "7282": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7283": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7285": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7286": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7287": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "POP",
      "path": "20"
    },
    "7288": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "7290": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "NOT",
      "path": "20"
    },
    "7291": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3F"
    },
    "7293": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7294": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "ADD",
      "path": "20"
    },
    "7295": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "AND",
      "path": "20"
    },
    "7296": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7297": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "ADD",
      "path": "20"
    },
    "7298": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7300": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7301": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7302": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7303": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7304": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7305": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7307": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7309": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7310": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "ADD",
      "path": "20"
    },
    "7311": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "7312": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C99"
    },
    "7315": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7316": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7317": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7319": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7320": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "POP",
      "path": "20"
    },
    "7321": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7322": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13256,
        13308
      ],
      "op": "POP",
      "path": "20"
    },
    "7323": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13228,
        13308
      ],
      "op": "POP",
      "path": "20"
    },
    "7324": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13228,
        13308
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7325": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13228,
        13308
      ],
      "op": "POP",
      "path": "20"
    },
    "7326": {
      "branch": 124,
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13326,
        13342
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 84
    },
    "7327": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CFC"
    },
    "7330": {
      "branch": 124,
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7331": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7333": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7340": {
      "op": "SHL"
    },
    "7341": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7342": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7345": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7347": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7348": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "ADD",
      "path": "20"
    },
    "7349": {
      "op": "MSTORE"
    },
    "7350": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7354": {
      "op": "DUP3"
    },
    "7355": {
      "op": "ADD"
    },
    "7356": {
      "op": "MSTORE"
    },
    "7357": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2073656E64204D6174696320746F206D61726B6574696E"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7392": {
      "op": "DUP3"
    },
    "7393": {
      "op": "ADD"
    },
    "7394": {
      "op": "MSTORE"
    },
    "7395": {
      "op": "PUSH9",
      "value": "0x672061646472657373"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "7407": {
      "op": "SHL"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7410": {
      "op": "DUP3"
    },
    "7411": {
      "op": "ADD"
    },
    "7412": {
      "op": "MSTORE"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7415": {
      "op": "ADD"
    },
    "7416": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "7419": {
      "op": "JUMP"
    },
    "7420": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13318,
        13388
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7421": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13448
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "7423": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13448
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7424": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7426": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7427": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13399,
        13420
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7429": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13399,
        13420
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7436": {
      "op": "SHL"
    },
    "7437": {
      "op": "SUB"
    },
    "7438": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13448
      ],
      "op": "AND",
      "path": "20"
    },
    "7439": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13448
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7440": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13461,
        13473
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7441": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13461,
        13473
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7442": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13399,
        13420
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7443": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7444": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13399,
        13420
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7445": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7446": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13461,
        13473
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7447": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13448
      ],
      "op": "DUP8",
      "path": "20"
    },
    "7448": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "GAS",
      "path": "20"
    },
    "7449": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "CALL",
      "path": "20"
    },
    "7450": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7451": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "POP",
      "path": "20"
    },
    "7452": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "POP",
      "path": "20"
    },
    "7453": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "POP",
      "path": "20"
    },
    "7454": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7455": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7456": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7458": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7459": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "EQ",
      "path": "20"
    },
    "7460": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D49"
    },
    "7463": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7464": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7466": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7467": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7468": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "POP",
      "path": "20"
    },
    "7469": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "7471": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "NOT",
      "path": "20"
    },
    "7472": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3F"
    },
    "7474": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7475": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "ADD",
      "path": "20"
    },
    "7476": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "AND",
      "path": "20"
    },
    "7477": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7478": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "ADD",
      "path": "20"
    },
    "7479": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7481": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7482": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7483": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7484": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7485": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7486": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7488": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7490": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7491": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "ADD",
      "path": "20"
    },
    "7492": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "7493": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D4E"
    },
    "7496": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7497": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7498": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7500": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7501": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "POP",
      "path": "20"
    },
    "7502": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7503": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13426,
        13478
      ],
      "op": "POP",
      "path": "20"
    },
    "7504": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13398,
        13478
      ],
      "op": "POP",
      "path": "20"
    },
    "7505": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13398,
        13478
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7506": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13398,
        13478
      ],
      "op": "POP",
      "path": "20"
    },
    "7507": {
      "branch": 125,
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13496,
        13512
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 85
    },
    "7508": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DB1"
    },
    "7511": {
      "branch": 125,
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7512": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7514": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7521": {
      "op": "SHL"
    },
    "7522": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7523": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7526": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7528": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7529": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "ADD",
      "path": "20"
    },
    "7530": {
      "op": "MSTORE"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7535": {
      "op": "DUP3"
    },
    "7536": {
      "op": "ADD"
    },
    "7537": {
      "op": "MSTORE"
    },
    "7538": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2073656E64204D6174696320746F20646576656C6F7065"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7573": {
      "op": "DUP3"
    },
    "7574": {
      "op": "ADD"
    },
    "7575": {
      "op": "MSTORE"
    },
    "7576": {
      "op": "PUSH9",
      "value": "0x722061646472657373"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "7588": {
      "op": "SHL"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7591": {
      "op": "DUP3"
    },
    "7592": {
      "op": "ADD"
    },
    "7593": {
      "op": "MSTORE"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7596": {
      "op": "ADD"
    },
    "7597": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x92F"
    },
    "7600": {
      "op": "JUMP"
    },
    "7601": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13488,
        13558
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7602": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13574,
        13630
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 86,
      "value": "0x40"
    },
    "7604": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13574,
        13630
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7605": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13617,
        13629
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7606": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13617,
        13629
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7607": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13603,
        13615
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7608": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13603,
        13615
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7609": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13574,
        13630
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x2574A60C18822FDCA3D6638B38D78B1EDB836B2F6322DF3D8D4EEB9E14393603"
    },
    "7642": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13574,
        13630
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7643": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13574,
        13630
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7645": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13574,
        13630
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7646": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        13574,
        13630
      ],
      "op": "LOG3",
      "path": "20"
    },
    "7647": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12999,
        13637
      ],
      "op": "POP",
      "path": "20"
    },
    "7648": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12999,
        13637
      ],
      "op": "POP",
      "path": "20"
    },
    "7649": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12999,
        13637
      ],
      "op": "POP",
      "path": "20"
    },
    "7650": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12999,
        13637
      ],
      "op": "POP",
      "path": "20"
    },
    "7651": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12999,
        13637
      ],
      "op": "POP",
      "path": "20"
    },
    "7652": {
      "fn": "CardinalToken.sendFeesToWallets",
      "offset": [
        12948,
        13637
      ],
      "op": "POP",
      "path": "20"
    },
    "7653": {
      "fn": "CardinalToken.sendFeesToWallets",
      "jump": "o",
      "offset": [
        12948,
        13637
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7654": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7661": {
      "op": "SHL"
    },
    "7662": {
      "op": "SUB"
    },
    "7663": {
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 87
    },
    "7664": {
      "branch": 134,
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "AND",
      "path": "2"
    },
    "7665": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3C"
    },
    "7668": {
      "branch": 134,
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7669": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7671": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7672": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7678": {
      "op": "SHL"
    },
    "7679": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7680": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7683": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7685": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7686": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "ADD",
      "path": "2"
    },
    "7687": {
      "op": "MSTORE"
    },
    "7688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7692": {
      "op": "DUP3"
    },
    "7693": {
      "op": "ADD"
    },
    "7694": {
      "op": "MSTORE"
    },
    "7695": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7730": {
      "op": "DUP3"
    },
    "7731": {
      "op": "ADD"
    },
    "7732": {
      "op": "MSTORE"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7735": {
      "op": "ADD"
    },
    "7736": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "7739": {
      "op": "JUMP"
    },
    "7740": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7741": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8648
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 88
    },
    "7742": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7744": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7746": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7747": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7748": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7749": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E4E"
    },
    "7752": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7753": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7754": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2452"
    },
    "7757": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7758": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7759": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7760": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7761": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7762": {
      "op": "POP"
    },
    "7763": {
      "op": "POP"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7770": {
      "op": "SHL"
    },
    "7771": {
      "op": "SUB"
    },
    "7772": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 89
    },
    "7773": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "AND",
      "path": "2"
    },
    "7774": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7776": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7777": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7778": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7779": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7781": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7782": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7783": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7784": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7786": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7787": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7788": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7789": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7790": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7791": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7792": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7793": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7B"
    },
    "7796": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7797": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7798": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7799": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2452"
    },
    "7802": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7803": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7804": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7805": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7806": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7807": {
      "op": "POP"
    },
    "7808": {
      "op": "POP"
    },
    "7809": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x40"
    },
    "7811": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7812": {
      "op": "DUP2"
    },
    "7813": {
      "op": "DUP2"
    },
    "7814": {
      "op": "MSTORE"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7821": {
      "op": "SHL"
    },
    "7822": {
      "op": "SUB"
    },
    "7823": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7824": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "AND",
      "path": "2"
    },
    "7825": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7826": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7828": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7829": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7862": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7865": {
      "op": "ADD"
    },
    "7866": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7868": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7869": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7870": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7871": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SUB",
      "path": "2"
    },
    "7872": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7873": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7874": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "POP",
      "path": "20"
    },
    "7875": {
      "fn": "CardinalToken.mint",
      "offset": [
        18364,
        18544
      ],
      "op": "POP",
      "path": "20"
    },
    "7876": {
      "fn": "CardinalToken.mint",
      "jump": "o",
      "offset": [
        18364,
        18544
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7877": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7878": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7880": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7881": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7888": {
      "op": "SHL"
    },
    "7889": {
      "op": "SUB"
    },
    "7890": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 91
    },
    "7891": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7892": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7899": {
      "op": "SHL"
    },
    "7900": {
      "op": "SUB"
    },
    "7901": {
      "op": "NOT"
    },
    "7902": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7903": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "7904": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7905": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "7906": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7907": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7908": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7909": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x40"
    },
    "7911": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7913": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "7914": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7915": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7916": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7918": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7951": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7952": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7954": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7955": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "7956": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "7957": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "7958": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7959": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7966": {
      "op": "SHL"
    },
    "7967": {
      "op": "SUB"
    },
    "7968": {
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 93
    },
    "7969": {
      "branch": 135,
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "AND",
      "path": "2"
    },
    "7970": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F77"
    },
    "7973": {
      "branch": 135,
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7974": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7976": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7983": {
      "op": "SHL"
    },
    "7984": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7985": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7988": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7990": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7991": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "ADD",
      "path": "2"
    },
    "7992": {
      "op": "MSTORE"
    },
    "7993": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7997": {
      "op": "DUP3"
    },
    "7998": {
      "op": "ADD"
    },
    "7999": {
      "op": "MSTORE"
    },
    "8000": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8035": {
      "op": "DUP3"
    },
    "8036": {
      "op": "ADD"
    },
    "8037": {
      "op": "MSTORE"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8042": {
      "op": "SHL"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8045": {
      "op": "DUP3"
    },
    "8046": {
      "op": "ADD"
    },
    "8047": {
      "op": "MSTORE"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8050": {
      "op": "ADD"
    },
    "8051": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "8054": {
      "op": "JUMP"
    },
    "8055": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8062": {
      "op": "SHL"
    },
    "8063": {
      "op": "SUB"
    },
    "8064": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8065": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "AND",
      "path": "2"
    },
    "8066": {
      "fn": "ERC20._burn",
      "offset": [
        9337,
        9359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8068": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8069": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8070": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8071": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8073": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8074": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8075": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8076": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8078": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8079": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8080": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8081": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 94
    },
    "8082": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8083": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "LT",
      "path": "2"
    },
    "8084": {
      "branch": 136,
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8085": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FEB"
    },
    "8088": {
      "branch": 136,
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8089": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8091": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8098": {
      "op": "SHL"
    },
    "8099": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8100": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8103": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8105": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8106": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "ADD",
      "path": "2"
    },
    "8107": {
      "op": "MSTORE"
    },
    "8108": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8110": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8112": {
      "op": "DUP3"
    },
    "8113": {
      "op": "ADD"
    },
    "8114": {
      "op": "MSTORE"
    },
    "8115": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8150": {
      "op": "DUP3"
    },
    "8151": {
      "op": "ADD"
    },
    "8152": {
      "op": "MSTORE"
    },
    "8153": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8158": {
      "op": "SHL"
    },
    "8159": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8161": {
      "op": "DUP3"
    },
    "8162": {
      "op": "ADD"
    },
    "8163": {
      "op": "MSTORE"
    },
    "8164": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8166": {
      "op": "ADD"
    },
    "8167": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "8170": {
      "op": "JUMP"
    },
    "8171": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8178": {
      "op": "SHL"
    },
    "8179": {
      "op": "SUB"
    },
    "8180": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 95
    },
    "8181": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "AND",
      "path": "2"
    },
    "8182": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8184": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8185": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8186": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8187": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8189": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8190": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8191": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8192": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8194": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8195": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8196": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8197": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8198": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "SUB",
      "path": "2"
    },
    "8199": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8200": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8201": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9571
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 96,
      "value": "0x2"
    },
    "8203": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8204": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8205": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8206": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8207": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8208": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x201A"
    },
    "8211": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8212": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8213": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8214": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x246A"
    },
    "8217": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8218": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8219": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8220": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8221": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8222": {
      "op": "POP"
    },
    "8223": {
      "op": "POP"
    },
    "8224": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 97,
      "value": "0x40"
    },
    "8226": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8227": {
      "op": "DUP3"
    },
    "8228": {
      "op": "DUP2"
    },
    "8229": {
      "op": "MSTORE"
    },
    "8230": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8232": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8239": {
      "op": "SHL"
    },
    "8240": {
      "op": "SUB"
    },
    "8241": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8242": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "AND",
      "path": "2"
    },
    "8243": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8244": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8277": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8280": {
      "op": "ADD"
    },
    "8281": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F9"
    },
    "8284": {
      "op": "JUMP"
    },
    "8285": {
      "op": "JUMPDEST"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8290": {
      "op": "DUP1"
    },
    "8291": {
      "op": "DUP4"
    },
    "8292": {
      "op": "MSTORE"
    },
    "8293": {
      "op": "DUP4"
    },
    "8294": {
      "op": "MLOAD"
    },
    "8295": {
      "op": "DUP1"
    },
    "8296": {
      "op": "DUP3"
    },
    "8297": {
      "op": "DUP6"
    },
    "8298": {
      "op": "ADD"
    },
    "8299": {
      "op": "MSTORE"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8302": {
      "op": "JUMPDEST"
    },
    "8303": {
      "op": "DUP2"
    },
    "8304": {
      "op": "DUP2"
    },
    "8305": {
      "op": "LT"
    },
    "8306": {
      "op": "ISZERO"
    },
    "8307": {
      "op": "PUSH2",
      "value": "0x208A"
    },
    "8310": {
      "op": "JUMPI"
    },
    "8311": {
      "op": "DUP6"
    },
    "8312": {
      "op": "DUP2"
    },
    "8313": {
      "op": "ADD"
    },
    "8314": {
      "op": "DUP4"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "op": "MLOAD"
    },
    "8317": {
      "op": "DUP6"
    },
    "8318": {
      "op": "DUP3"
    },
    "8319": {
      "op": "ADD"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8322": {
      "op": "ADD"
    },
    "8323": {
      "op": "MSTORE"
    },
    "8324": {
      "op": "DUP3"
    },
    "8325": {
      "op": "ADD"
    },
    "8326": {
      "op": "PUSH2",
      "value": "0x206E"
    },
    "8329": {
      "op": "JUMP"
    },
    "8330": {
      "op": "JUMPDEST"
    },
    "8331": {
      "op": "DUP2"
    },
    "8332": {
      "op": "DUP2"
    },
    "8333": {
      "op": "GT"
    },
    "8334": {
      "op": "ISZERO"
    },
    "8335": {
      "op": "PUSH2",
      "value": "0x209C"
    },
    "8338": {
      "op": "JUMPI"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8343": {
      "op": "DUP4"
    },
    "8344": {
      "op": "DUP8"
    },
    "8345": {
      "op": "ADD"
    },
    "8346": {
      "op": "ADD"
    },
    "8347": {
      "op": "MSTORE"
    },
    "8348": {
      "op": "JUMPDEST"
    },
    "8349": {
      "op": "POP"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8352": {
      "op": "ADD"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8355": {
      "op": "NOT"
    },
    "8356": {
      "op": "AND"
    },
    "8357": {
      "op": "SWAP3"
    },
    "8358": {
      "op": "SWAP1"
    },
    "8359": {
      "op": "SWAP3"
    },
    "8360": {
      "op": "ADD"
    },
    "8361": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8363": {
      "op": "ADD"
    },
    "8364": {
      "op": "SWAP4"
    },
    "8365": {
      "op": "SWAP3"
    },
    "8366": {
      "op": "POP"
    },
    "8367": {
      "op": "POP"
    },
    "8368": {
      "op": "POP"
    },
    "8369": {
      "jump": "o",
      "op": "JUMP"
    },
    "8370": {
      "op": "JUMPDEST"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8377": {
      "op": "SHL"
    },
    "8378": {
      "op": "SUB"
    },
    "8379": {
      "op": "DUP2"
    },
    "8380": {
      "op": "AND"
    },
    "8381": {
      "op": "DUP2"
    },
    "8382": {
      "op": "EQ"
    },
    "8383": {
      "op": "PUSH2",
      "value": "0xF99"
    },
    "8386": {
      "op": "JUMPI"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8389": {
      "op": "DUP1"
    },
    "8390": {
      "op": "REVERT"
    },
    "8391": {
      "op": "JUMPDEST"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8394": {
      "op": "DUP1"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8397": {
      "op": "DUP4"
    },
    "8398": {
      "op": "DUP6"
    },
    "8399": {
      "op": "SUB"
    },
    "8400": {
      "op": "SLT"
    },
    "8401": {
      "op": "ISZERO"
    },
    "8402": {
      "op": "PUSH2",
      "value": "0x20DA"
    },
    "8405": {
      "op": "JUMPI"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8408": {
      "op": "DUP1"
    },
    "8409": {
      "op": "REVERT"
    },
    "8410": {
      "op": "JUMPDEST"
    },
    "8411": {
      "op": "DUP3"
    },
    "8412": {
      "op": "CALLDATALOAD"
    },
    "8413": {
      "op": "PUSH2",
      "value": "0x20E5"
    },
    "8416": {
      "op": "DUP2"
    },
    "8417": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "8420": {
      "jump": "i",
      "op": "JUMP"
    },
    "8421": {
      "op": "JUMPDEST"
    },
    "8422": {
      "op": "SWAP5"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8425": {
      "op": "SWAP4"
    },
    "8426": {
      "op": "SWAP1"
    },
    "8427": {
      "op": "SWAP4"
    },
    "8428": {
      "op": "ADD"
    },
    "8429": {
      "op": "CALLDATALOAD"
    },
    "8430": {
      "op": "SWAP4"
    },
    "8431": {
      "op": "POP"
    },
    "8432": {
      "op": "POP"
    },
    "8433": {
      "op": "POP"
    },
    "8434": {
      "jump": "o",
      "op": "JUMP"
    },
    "8435": {
      "op": "JUMPDEST"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8438": {
      "op": "DUP1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8443": {
      "op": "DUP5"
    },
    "8444": {
      "op": "DUP7"
    },
    "8445": {
      "op": "SUB"
    },
    "8446": {
      "op": "SLT"
    },
    "8447": {
      "op": "ISZERO"
    },
    "8448": {
      "op": "PUSH2",
      "value": "0x2108"
    },
    "8451": {
      "op": "JUMPI"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8454": {
      "op": "DUP1"
    },
    "8455": {
      "op": "REVERT"
    },
    "8456": {
      "op": "JUMPDEST"
    },
    "8457": {
      "op": "DUP4"
    },
    "8458": {
      "op": "CALLDATALOAD"
    },
    "8459": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "8462": {
      "op": "DUP2"
    },
    "8463": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "8466": {
      "jump": "i",
      "op": "JUMP"
    },
    "8467": {
      "op": "JUMPDEST"
    },
    "8468": {
      "op": "SWAP3"
    },
    "8469": {
      "op": "POP"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8472": {
      "op": "DUP5"
    },
    "8473": {
      "op": "ADD"
    },
    "8474": {
      "op": "CALLDATALOAD"
    },
    "8475": {
      "op": "PUSH2",
      "value": "0x2123"
    },
    "8478": {
      "op": "DUP2"
    },
    "8479": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "8482": {
      "jump": "i",
      "op": "JUMP"
    },
    "8483": {
      "op": "JUMPDEST"
    },
    "8484": {
      "op": "SWAP3"
    },
    "8485": {
      "op": "SWAP6"
    },
    "8486": {
      "op": "SWAP3"
    },
    "8487": {
      "op": "SWAP5"
    },
    "8488": {
      "op": "POP"
    },
    "8489": {
      "op": "POP"
    },
    "8490": {
      "op": "POP"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8493": {
      "op": "SWAP2"
    },
    "8494": {
      "op": "SWAP1"
    },
    "8495": {
      "op": "SWAP2"
    },
    "8496": {
      "op": "ADD"
    },
    "8497": {
      "op": "CALLDATALOAD"
    },
    "8498": {
      "op": "SWAP1"
    },
    "8499": {
      "jump": "o",
      "op": "JUMP"
    },
    "8500": {
      "op": "JUMPDEST"
    },
    "8501": {
      "op": "DUP1"
    },
    "8502": {
      "op": "CALLDATALOAD"
    },
    "8503": {
      "op": "DUP1"
    },
    "8504": {
      "op": "ISZERO"
    },
    "8505": {
      "op": "ISZERO"
    },
    "8506": {
      "op": "DUP2"
    },
    "8507": {
      "op": "EQ"
    },
    "8508": {
      "op": "PUSH2",
      "value": "0x2144"
    },
    "8511": {
      "op": "JUMPI"
    },
    "8512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8514": {
      "op": "DUP1"
    },
    "8515": {
      "op": "REVERT"
    },
    "8516": {
      "op": "JUMPDEST"
    },
    "8517": {
      "op": "SWAP2"
    },
    "8518": {
      "op": "SWAP1"
    },
    "8519": {
      "op": "POP"
    },
    "8520": {
      "jump": "o",
      "op": "JUMP"
    },
    "8521": {
      "op": "JUMPDEST"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8524": {
      "op": "DUP1"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8527": {
      "op": "DUP4"
    },
    "8528": {
      "op": "DUP6"
    },
    "8529": {
      "op": "SUB"
    },
    "8530": {
      "op": "SLT"
    },
    "8531": {
      "op": "ISZERO"
    },
    "8532": {
      "op": "PUSH2",
      "value": "0x215C"
    },
    "8535": {
      "op": "JUMPI"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8538": {
      "op": "DUP1"
    },
    "8539": {
      "op": "REVERT"
    },
    "8540": {
      "op": "JUMPDEST"
    },
    "8541": {
      "op": "DUP3"
    },
    "8542": {
      "op": "CALLDATALOAD"
    },
    "8543": {
      "op": "PUSH2",
      "value": "0x2167"
    },
    "8546": {
      "op": "DUP2"
    },
    "8547": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "8550": {
      "jump": "i",
      "op": "JUMP"
    },
    "8551": {
      "op": "JUMPDEST"
    },
    "8552": {
      "op": "SWAP2"
    },
    "8553": {
      "op": "POP"
    },
    "8554": {
      "op": "PUSH2",
      "value": "0x2175"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8559": {
      "op": "DUP5"
    },
    "8560": {
      "op": "ADD"
    },
    "8561": {
      "op": "PUSH2",
      "value": "0x2134"
    },
    "8564": {
      "jump": "i",
      "op": "JUMP"
    },
    "8565": {
      "op": "JUMPDEST"
    },
    "8566": {
      "op": "SWAP1"
    },
    "8567": {
      "op": "POP"
    },
    "8568": {
      "op": "SWAP3"
    },
    "8569": {
      "op": "POP"
    },
    "8570": {
      "op": "SWAP3"
    },
    "8571": {
      "op": "SWAP1"
    },
    "8572": {
      "op": "POP"
    },
    "8573": {
      "jump": "o",
      "op": "JUMP"
    },
    "8574": {
      "op": "JUMPDEST"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8579": {
      "op": "DUP3"
    },
    "8580": {
      "op": "DUP5"
    },
    "8581": {
      "op": "SUB"
    },
    "8582": {
      "op": "SLT"
    },
    "8583": {
      "op": "ISZERO"
    },
    "8584": {
      "op": "PUSH2",
      "value": "0x2190"
    },
    "8587": {
      "op": "JUMPI"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8590": {
      "op": "DUP1"
    },
    "8591": {
      "op": "REVERT"
    },
    "8592": {
      "op": "JUMPDEST"
    },
    "8593": {
      "op": "POP"
    },
    "8594": {
      "op": "CALLDATALOAD"
    },
    "8595": {
      "op": "SWAP2"
    },
    "8596": {
      "op": "SWAP1"
    },
    "8597": {
      "op": "POP"
    },
    "8598": {
      "jump": "o",
      "op": "JUMP"
    },
    "8599": {
      "op": "JUMPDEST"
    },
    "8600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8604": {
      "op": "DUP3"
    },
    "8605": {
      "op": "DUP5"
    },
    "8606": {
      "op": "SUB"
    },
    "8607": {
      "op": "SLT"
    },
    "8608": {
      "op": "ISZERO"
    },
    "8609": {
      "op": "PUSH2",
      "value": "0x21A9"
    },
    "8612": {
      "op": "JUMPI"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8615": {
      "op": "DUP1"
    },
    "8616": {
      "op": "REVERT"
    },
    "8617": {
      "op": "JUMPDEST"
    },
    "8618": {
      "op": "DUP2"
    },
    "8619": {
      "op": "CALLDATALOAD"
    },
    "8620": {
      "op": "PUSH2",
      "value": "0xC45"
    },
    "8623": {
      "op": "DUP2"
    },
    "8624": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "8627": {
      "jump": "i",
      "op": "JUMP"
    },
    "8628": {
      "op": "JUMPDEST"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8631": {
      "op": "DUP1"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8634": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8636": {
      "op": "DUP5"
    },
    "8637": {
      "op": "DUP7"
    },
    "8638": {
      "op": "SUB"
    },
    "8639": {
      "op": "SLT"
    },
    "8640": {
      "op": "ISZERO"
    },
    "8641": {
      "op": "PUSH2",
      "value": "0x21C9"
    },
    "8644": {
      "op": "JUMPI"
    },
    "8645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8647": {
      "op": "DUP1"
    },
    "8648": {
      "op": "REVERT"
    },
    "8649": {
      "op": "JUMPDEST"
    },
    "8650": {
      "op": "DUP4"
    },
    "8651": {
      "op": "CALLDATALOAD"
    },
    "8652": {
      "op": "SWAP3"
    },
    "8653": {
      "op": "POP"
    },
    "8654": {
      "op": "PUSH2",
      "value": "0x21D9"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8659": {
      "op": "DUP6"
    },
    "8660": {
      "op": "ADD"
    },
    "8661": {
      "op": "PUSH2",
      "value": "0x2134"
    },
    "8664": {
      "jump": "i",
      "op": "JUMP"
    },
    "8665": {
      "op": "JUMPDEST"
    },
    "8666": {
      "op": "SWAP2"
    },
    "8667": {
      "op": "POP"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8670": {
      "op": "DUP5"
    },
    "8671": {
      "op": "ADD"
    },
    "8672": {
      "op": "CALLDATALOAD"
    },
    "8673": {
      "op": "SWAP1"
    },
    "8674": {
      "op": "POP"
    },
    "8675": {
      "op": "SWAP3"
    },
    "8676": {
      "op": "POP"
    },
    "8677": {
      "op": "SWAP3"
    },
    "8678": {
      "op": "POP"
    },
    "8679": {
      "op": "SWAP3"
    },
    "8680": {
      "jump": "o",
      "op": "JUMP"
    },
    "8681": {
      "op": "JUMPDEST"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8684": {
      "op": "DUP1"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8687": {
      "op": "DUP4"
    },
    "8688": {
      "op": "DUP6"
    },
    "8689": {
      "op": "SUB"
    },
    "8690": {
      "op": "SLT"
    },
    "8691": {
      "op": "ISZERO"
    },
    "8692": {
      "op": "PUSH2",
      "value": "0x21FC"
    },
    "8695": {
      "op": "JUMPI"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8698": {
      "op": "DUP1"
    },
    "8699": {
      "op": "REVERT"
    },
    "8700": {
      "op": "JUMPDEST"
    },
    "8701": {
      "op": "DUP3"
    },
    "8702": {
      "op": "CALLDATALOAD"
    },
    "8703": {
      "op": "PUSH2",
      "value": "0x2207"
    },
    "8706": {
      "op": "DUP2"
    },
    "8707": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "8710": {
      "jump": "i",
      "op": "JUMP"
    },
    "8711": {
      "op": "JUMPDEST"
    },
    "8712": {
      "op": "SWAP2"
    },
    "8713": {
      "op": "POP"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8716": {
      "op": "DUP4"
    },
    "8717": {
      "op": "ADD"
    },
    "8718": {
      "op": "CALLDATALOAD"
    },
    "8719": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "8722": {
      "op": "DUP2"
    },
    "8723": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "8726": {
      "jump": "i",
      "op": "JUMP"
    },
    "8727": {
      "op": "JUMPDEST"
    },
    "8728": {
      "op": "DUP1"
    },
    "8729": {
      "op": "SWAP2"
    },
    "8730": {
      "op": "POP"
    },
    "8731": {
      "op": "POP"
    },
    "8732": {
      "op": "SWAP3"
    },
    "8733": {
      "op": "POP"
    },
    "8734": {
      "op": "SWAP3"
    },
    "8735": {
      "op": "SWAP1"
    },
    "8736": {
      "op": "POP"
    },
    "8737": {
      "jump": "o",
      "op": "JUMP"
    },
    "8738": {
      "op": "JUMPDEST"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8741": {
      "op": "DUP2"
    },
    "8742": {
      "op": "DUP2"
    },
    "8743": {
      "op": "SHR"
    },
    "8744": {
      "op": "SWAP1"
    },
    "8745": {
      "op": "DUP3"
    },
    "8746": {
      "op": "AND"
    },
    "8747": {
      "op": "DUP1"
    },
    "8748": {
      "op": "PUSH2",
      "value": "0x2236"
    },
    "8751": {
      "op": "JUMPI"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8754": {
      "op": "DUP3"
    },
    "8755": {
      "op": "AND"
    },
    "8756": {
      "op": "SWAP2"
    },
    "8757": {
      "op": "POP"
    },
    "8758": {
      "op": "JUMPDEST"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8761": {
      "op": "DUP3"
    },
    "8762": {
      "op": "LT"
    },
    "8763": {
      "op": "DUP2"
    },
    "8764": {
      "op": "EQ"
    },
    "8765": {
      "op": "ISZERO"
    },
    "8766": {
      "op": "PUSH2",
      "value": "0x2257"
    },
    "8769": {
      "op": "JUMPI"
    },
    "8770": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8777": {
      "op": "SHL"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8780": {
      "op": "MSTORE"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8785": {
      "op": "MSTORE"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8790": {
      "op": "REVERT"
    },
    "8791": {
      "op": "JUMPDEST"
    },
    "8792": {
      "op": "POP"
    },
    "8793": {
      "op": "SWAP2"
    },
    "8794": {
      "op": "SWAP1"
    },
    "8795": {
      "op": "POP"
    },
    "8796": {
      "jump": "o",
      "op": "JUMP"
    },
    "8797": {
      "op": "JUMPDEST"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8800": {
      "op": "DUP1"
    },
    "8801": {
      "op": "DUP3"
    },
    "8802": {
      "op": "MSTORE"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "8805": {
      "op": "SWAP1"
    },
    "8806": {
      "op": "DUP3"
    },
    "8807": {
      "op": "ADD"
    },
    "8808": {
      "op": "MSTORE"
    },
    "8809": {
      "op": "PUSH32",
      "value": "0x596F752068617665206265656E20626C61636B6C69737465642066726F6D2074"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8844": {
      "op": "DUP3"
    },
    "8845": {
      "op": "ADD"
    },
    "8846": {
      "op": "MSTORE"
    },
    "8847": {
      "op": "PUSH32",
      "value": "0x726164696E67207468652043617264696E616C20546F6B656E2E20496620796F"
    },
    "8880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8882": {
      "op": "DUP3"
    },
    "8883": {
      "op": "ADD"
    },
    "8884": {
      "op": "MSTORE"
    },
    "8885": {
      "op": "PUSH32",
      "value": "0x75207468696E6B207468697320697320616E206572726F722C20706C65617365"
    },
    "8918": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8920": {
      "op": "DUP3"
    },
    "8921": {
      "op": "ADD"
    },
    "8922": {
      "op": "MSTORE"
    },
    "8923": {
      "op": "PUSH32",
      "value": "0x20636F6E74616374207468652043617264696E616C20486F757365207465616D"
    },
    "8956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8958": {
      "op": "DUP3"
    },
    "8959": {
      "op": "ADD"
    },
    "8960": {
      "op": "MSTORE"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "8965": {
      "op": "SHL"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8968": {
      "op": "DUP3"
    },
    "8969": {
      "op": "ADD"
    },
    "8970": {
      "op": "MSTORE"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8973": {
      "op": "ADD"
    },
    "8974": {
      "op": "SWAP1"
    },
    "8975": {
      "jump": "o",
      "op": "JUMP"
    },
    "8976": {
      "op": "JUMPDEST"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8979": {
      "op": "DUP1"
    },
    "8980": {
      "op": "DUP3"
    },
    "8981": {
      "op": "MSTORE"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "8984": {
      "op": "SWAP1"
    },
    "8985": {
      "op": "DUP3"
    },
    "8986": {
      "op": "ADD"
    },
    "8987": {
      "op": "MSTORE"
    },
    "8988": {
      "op": "PUSH32",
      "value": "0x546865206164647265737320796F752061726520747279696E6720746F207365"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9023": {
      "op": "DUP3"
    },
    "9024": {
      "op": "ADD"
    },
    "9025": {
      "op": "MSTORE"
    },
    "9026": {
      "op": "PUSH32",
      "value": "0x6E642043617264696E616C20546F6B656E7320746F20686173206265656E2062"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9061": {
      "op": "DUP3"
    },
    "9062": {
      "op": "ADD"
    },
    "9063": {
      "op": "MSTORE"
    },
    "9064": {
      "op": "PUSH32",
      "value": "0x6C61636B6C69737465642066726F6D2074726164696E67207468652043617264"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9099": {
      "op": "DUP3"
    },
    "9100": {
      "op": "ADD"
    },
    "9101": {
      "op": "MSTORE"
    },
    "9102": {
      "op": "PUSH32",
      "value": "0x696E616C20546F6B656E2E20496620796F75207468696E6B2074686973206973"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9137": {
      "op": "DUP3"
    },
    "9138": {
      "op": "ADD"
    },
    "9139": {
      "op": "MSTORE"
    },
    "9140": {
      "op": "PUSH32",
      "value": "0x20616E206572726F722C20706C6561736520636F6E7461637420746865204361"
    },
    "9173": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9175": {
      "op": "DUP3"
    },
    "9176": {
      "op": "ADD"
    },
    "9177": {
      "op": "MSTORE"
    },
    "9178": {
      "op": "PUSH18",
      "value": "0x393234B730B6102437BAB9B2903A32B0B697"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "9199": {
      "op": "SHL"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9202": {
      "op": "DUP3"
    },
    "9203": {
      "op": "ADD"
    },
    "9204": {
      "op": "MSTORE"
    },
    "9205": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9208": {
      "op": "ADD"
    },
    "9209": {
      "op": "SWAP1"
    },
    "9210": {
      "jump": "o",
      "op": "JUMP"
    },
    "9211": {
      "op": "JUMPDEST"
    },
    "9212": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9217": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9219": {
      "op": "SHL"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9222": {
      "op": "MSTORE"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9225": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9227": {
      "op": "MSTORE"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9232": {
      "op": "REVERT"
    },
    "9233": {
      "op": "JUMPDEST"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9236": {
      "op": "DUP2"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9239": {
      "op": "NOT"
    },
    "9240": {
      "op": "DIV"
    },
    "9241": {
      "op": "DUP4"
    },
    "9242": {
      "op": "GT"
    },
    "9243": {
      "op": "DUP3"
    },
    "9244": {
      "op": "ISZERO"
    },
    "9245": {
      "op": "ISZERO"
    },
    "9246": {
      "op": "AND"
    },
    "9247": {
      "op": "ISZERO"
    },
    "9248": {
      "op": "PUSH2",
      "value": "0x242B"
    },
    "9251": {
      "op": "JUMPI"
    },
    "9252": {
      "op": "PUSH2",
      "value": "0x242B"
    },
    "9255": {
      "op": "PUSH2",
      "value": "0x23FB"
    },
    "9258": {
      "jump": "i",
      "op": "JUMP"
    },
    "9259": {
      "op": "JUMPDEST"
    },
    "9260": {
      "op": "POP"
    },
    "9261": {
      "op": "MUL"
    },
    "9262": {
      "op": "SWAP1"
    },
    "9263": {
      "jump": "o",
      "op": "JUMP"
    },
    "9264": {
      "op": "JUMPDEST"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9267": {
      "op": "DUP3"
    },
    "9268": {
      "op": "PUSH2",
      "value": "0x244D"
    },
    "9271": {
      "op": "JUMPI"
    },
    "9272": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9279": {
      "op": "SHL"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9282": {
      "op": "MSTORE"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9287": {
      "op": "MSTORE"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9292": {
      "op": "REVERT"
    },
    "9293": {
      "op": "JUMPDEST"
    },
    "9294": {
      "op": "POP"
    },
    "9295": {
      "op": "DIV"
    },
    "9296": {
      "op": "SWAP1"
    },
    "9297": {
      "jump": "o",
      "op": "JUMP"
    },
    "9298": {
      "op": "JUMPDEST"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9301": {
      "op": "DUP3"
    },
    "9302": {
      "op": "NOT"
    },
    "9303": {
      "op": "DUP3"
    },
    "9304": {
      "op": "GT"
    },
    "9305": {
      "op": "ISZERO"
    },
    "9306": {
      "op": "PUSH2",
      "value": "0x2465"
    },
    "9309": {
      "op": "JUMPI"
    },
    "9310": {
      "op": "PUSH2",
      "value": "0x2465"
    },
    "9313": {
      "op": "PUSH2",
      "value": "0x23FB"
    },
    "9316": {
      "jump": "i",
      "op": "JUMP"
    },
    "9317": {
      "op": "JUMPDEST"
    },
    "9318": {
      "op": "POP"
    },
    "9319": {
      "op": "ADD"
    },
    "9320": {
      "op": "SWAP1"
    },
    "9321": {
      "jump": "o",
      "op": "JUMP"
    },
    "9322": {
      "op": "JUMPDEST"
    },
    "9323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9325": {
      "op": "DUP3"
    },
    "9326": {
      "op": "DUP3"
    },
    "9327": {
      "op": "LT"
    },
    "9328": {
      "op": "ISZERO"
    },
    "9329": {
      "op": "PUSH2",
      "value": "0x247C"
    },
    "9332": {
      "op": "JUMPI"
    },
    "9333": {
      "op": "PUSH2",
      "value": "0x247C"
    },
    "9336": {
      "op": "PUSH2",
      "value": "0x23FB"
    },
    "9339": {
      "jump": "i",
      "op": "JUMP"
    },
    "9340": {
      "op": "JUMPDEST"
    },
    "9341": {
      "op": "POP"
    },
    "9342": {
      "op": "SUB"
    },
    "9343": {
      "op": "SWAP1"
    },
    "9344": {
      "jump": "o",
      "op": "JUMP"
    },
    "9345": {
      "op": "JUMPDEST"
    },
    "9346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9348": {
      "op": "DUP1"
    },
    "9349": {
      "op": "DUP3"
    },
    "9350": {
      "op": "MSTORE"
    },
    "9351": {
      "op": "DUP2"
    },
    "9352": {
      "op": "DUP2"
    },
    "9353": {
      "op": "ADD"
    },
    "9354": {
      "op": "MSTORE"
    },
    "9355": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9390": {
      "op": "DUP3"
    },
    "9391": {
      "op": "ADD"
    },
    "9392": {
      "op": "MSTORE"
    },
    "9393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9395": {
      "op": "ADD"
    },
    "9396": {
      "op": "SWAP1"
    },
    "9397": {
      "jump": "o",
      "op": "JUMP"
    },
    "9398": {
      "op": "JUMPDEST"
    },
    "9399": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9406": {
      "op": "SHL"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9409": {
      "op": "MSTORE"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9414": {
      "op": "MSTORE"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9419": {
      "op": "REVERT"
    },
    "9420": {
      "op": "JUMPDEST"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9425": {
      "op": "DUP3"
    },
    "9426": {
      "op": "DUP5"
    },
    "9427": {
      "op": "SUB"
    },
    "9428": {
      "op": "SLT"
    },
    "9429": {
      "op": "ISZERO"
    },
    "9430": {
      "op": "PUSH2",
      "value": "0x24DE"
    },
    "9433": {
      "op": "JUMPI"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9436": {
      "op": "DUP1"
    },
    "9437": {
      "op": "REVERT"
    },
    "9438": {
      "op": "JUMPDEST"
    },
    "9439": {
      "op": "DUP2"
    },
    "9440": {
      "op": "MLOAD"
    },
    "9441": {
      "op": "PUSH2",
      "value": "0xC45"
    },
    "9444": {
      "op": "DUP2"
    },
    "9445": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "9448": {
      "jump": "i",
      "op": "JUMP"
    },
    "9449": {
      "op": "JUMPDEST"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9454": {
      "op": "DUP3"
    },
    "9455": {
      "op": "ADD"
    },
    "9456": {
      "op": "DUP8"
    },
    "9457": {
      "op": "DUP4"
    },
    "9458": {
      "op": "MSTORE"
    },
    "9459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9461": {
      "op": "DUP8"
    },
    "9462": {
      "op": "DUP2"
    },
    "9463": {
      "op": "DUP6"
    },
    "9464": {
      "op": "ADD"
    },
    "9465": {
      "op": "MSTORE"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9470": {
      "op": "DUP6"
    },
    "9471": {
      "op": "ADD"
    },
    "9472": {
      "op": "MSTORE"
    },
    "9473": {
      "op": "DUP2"
    },
    "9474": {
      "op": "DUP8"
    },
    "9475": {
      "op": "MLOAD"
    },
    "9476": {
      "op": "DUP1"
    },
    "9477": {
      "op": "DUP5"
    },
    "9478": {
      "op": "MSTORE"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9481": {
      "op": "DUP7"
    },
    "9482": {
      "op": "ADD"
    },
    "9483": {
      "op": "SWAP2"
    },
    "9484": {
      "op": "POP"
    },
    "9485": {
      "op": "DUP3"
    },
    "9486": {
      "op": "DUP10"
    },
    "9487": {
      "op": "ADD"
    },
    "9488": {
      "op": "SWAP4"
    },
    "9489": {
      "op": "POP"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9492": {
      "op": "JUMPDEST"
    },
    "9493": {
      "op": "DUP2"
    },
    "9494": {
      "op": "DUP2"
    },
    "9495": {
      "op": "LT"
    },
    "9496": {
      "op": "ISZERO"
    },
    "9497": {
      "op": "PUSH2",
      "value": "0x2539"
    },
    "9500": {
      "op": "JUMPI"
    },
    "9501": {
      "op": "DUP5"
    },
    "9502": {
      "op": "MLOAD"
    },
    "9503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9509": {
      "op": "SHL"
    },
    "9510": {
      "op": "SUB"
    },
    "9511": {
      "op": "AND"
    },
    "9512": {
      "op": "DUP4"
    },
    "9513": {
      "op": "MSTORE"
    },
    "9514": {
      "op": "SWAP4"
    },
    "9515": {
      "op": "DUP4"
    },
    "9516": {
      "op": "ADD"
    },
    "9517": {
      "op": "SWAP4"
    },
    "9518": {
      "op": "SWAP2"
    },
    "9519": {
      "op": "DUP4"
    },
    "9520": {
      "op": "ADD"
    },
    "9521": {
      "op": "SWAP2"
    },
    "9522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9524": {
      "op": "ADD"
    },
    "9525": {
      "op": "PUSH2",
      "value": "0x2514"
    },
    "9528": {
      "op": "JUMP"
    },
    "9529": {
      "op": "JUMPDEST"
    },
    "9530": {
      "op": "POP"
    },
    "9531": {
      "op": "POP"
    },
    "9532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9538": {
      "op": "SHL"
    },
    "9539": {
      "op": "SUB"
    },
    "9540": {
      "op": "SWAP7"
    },
    "9541": {
      "op": "SWAP1"
    },
    "9542": {
      "op": "SWAP7"
    },
    "9543": {
      "op": "AND"
    },
    "9544": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9546": {
      "op": "DUP6"
    },
    "9547": {
      "op": "ADD"
    },
    "9548": {
      "op": "MSTORE"
    },
    "9549": {
      "op": "POP"
    },
    "9550": {
      "op": "POP"
    },
    "9551": {
      "op": "POP"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9554": {
      "op": "ADD"
    },
    "9555": {
      "op": "MSTORE"
    },
    "9556": {
      "op": "SWAP4"
    },
    "9557": {
      "op": "SWAP3"
    },
    "9558": {
      "op": "POP"
    },
    "9559": {
      "op": "POP"
    },
    "9560": {
      "op": "POP"
    },
    "9561": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c769c77a60df87096c7e8e86495a0e47f217dcf3",
  "source": "// SPDX-License-Identifier: MIT\n \npragma solidity 0.8.8;\n \nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/Uniswap.sol\";\n\n/**\n * @title Cardinal House Token\n * @dev Token contract for the Cardinal House ecosystem currency\n */\ncontract CardinalToken is ERC20, Ownable {\n\n    // Mapping to exclude some contracts from fees. Transfers are excluded from fees if address in this mapping is recipient or sender.\n    mapping (address => bool) public excludedFromFees;\n\n    // Blacklist mapping to prevent addresses from trading if necessary (i.e. flagged for malicious activity).\n    mapping (address => bool) public blacklist;\n\n    // Mapping to determine which addresses can mint Cardinal Tokens for bridging.\n    mapping (address => bool) public minters;\n\n    // Mapping to determine which addresses are pair addresses.\n    mapping (address => bool) public pairAddresses;\n\n    // Address of the contract for burning Cardinal Tokens.\n    address public burnWalletAddress;\n\n    // Liquidity wallet address used to hold 30% of the Cardinal Tokens for the liquidity pool.\n    // After these tokens are moved to the DEX, this address will no longer be used.\n    address public liquidityWalletAddress;\n\n    // Address of the Cardinal Token presale contract.\n    address public preSaleAddress;\n\n    // Wallet address used for the Cardinal Token member giveaways.\n    address payable public memberGiveawayWalletAddress;\n\n    // Marketing wallet address used for funding marketing.\n    address payable public marketingWalletAddress;\n\n    // Developer wallet address used for funding the team.\n    address payable public developerWalletAddress;\n\n    // The DEX router address for swapping Cardinal Tokens for Matic.\n    address public uniswapRouterAddress;\n\n    // Member giveaway transaction fee - deployed at 2%.\n    uint256 public memberGiveawayFeePercent = 2;\n\n    // Marketing transaction fee - deployed at 2%.\n    uint256 public marketingFeePercent = 2;\n\n    // Developer team transaction fee - deployed at 1%.\n    uint256 public developerFeePercent = 1;\n\n    // DEX router interface.\n    IUniswapV2Router02 private uniswapRouter;\n\n    // Address of the Matic to Cardinal Token pair on the DEX.\n    address public uniswapPair;\n\n    // Determines how many Cardinal Tokens this contract needs before it swaps for Matic to pay fee wallets.\n    uint256 public contractTokenDivisor = 1000;\n\n    // Events to emit when the transaction fees are updated or transaction fee tokens are sold and dispersed\n    event memberGiveawayTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n    event marketingTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n    event developerTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n    event transactionFeesSwappedForMatic(uint256 indexed cardinalTokenAmount, uint256 indexed maticAmount);\n    event transactionFeeMaticDispersed(uint256 indexed marketingFee, uint256 indexed developerFee);\n\n    // Initial token distribution:\n    // 35% - Pre-sale\n    // 35% - Liquidity pool (6 month lockup period)\n    // 10% - Marketing\n    // 20% - Developer coins (6 month lockup period)\n    constructor(\n        uint256 initialSupply,\n        address _preSaleAddress, \n        address _burnWalletAddress,\n        address _liquidityWalletAddress,\n        address payable _memberGiveawayWalletAddress,\n        address payable _marketingWalletAddress,\n        address payable _developerWalletAddress,\n        address _uniswapRouterAddress) ERC20(\"CardinalToken\", \"CRNL\") {\n            preSaleAddress = _preSaleAddress;\n            memberGiveawayWalletAddress = _memberGiveawayWalletAddress;\n            burnWalletAddress = _burnWalletAddress;\n            liquidityWalletAddress = _liquidityWalletAddress;\n            marketingWalletAddress = _marketingWalletAddress;\n            developerWalletAddress = _developerWalletAddress;\n            uniswapRouterAddress = _uniswapRouterAddress;\n\n            excludedFromFees[memberGiveawayWalletAddress] = true;\n            excludedFromFees[developerWalletAddress] = true;\n            excludedFromFees[marketingWalletAddress] = true;\n            excludedFromFees[liquidityWalletAddress] = true;\n            excludedFromFees[preSaleAddress] = true;\n\n            _mint(preSaleAddress, ((initialSupply) * 35 / 100));\n            _mint(liquidityWalletAddress, ((initialSupply) * 35 / 100));\n            _mint(marketingWalletAddress, initialSupply / 10);\n            _mint(developerWalletAddress, initialSupply / 5);\n\n            IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(uniswapRouterAddress);\n            uniswapRouter = _uniswapV2Router;\n            _approve(address(this), address(uniswapRouter), initialSupply);\n            uniswapPair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\n            IERC20(uniswapPair).approve(address(uniswapRouter), type(uint256).max);\n\n            pairAddresses[uniswapPair] = true;\n    }\n\n    /**\n     * @dev Returns the contract address\n     * @return contract address\n     */\n    function getContractAddress() external view returns (address){\n        return address(this);\n    }\n\n    /**\n    * @dev Adds a user to be excluded from fees.\n    * @param user address of the user to be excluded from fees.\n     */\n    function excludeUserFromFees(address user) external onlyOwner {\n        excludedFromFees[user] = true;\n    }\n\n    /**\n    * @dev Gets the current timestamp, used for testing + verification\n    * @return the the timestamp of the current block\n     */\n    function getCurrentTimestamp() external view returns (uint256) {\n        return block.timestamp;\n    }\n\n    /**\n    * @dev Removes a user from the fee exclusion.\n    * @param user address of the user than will now have to pay transaction fees.\n     */\n    function includeUsersInFees(address user) external onlyOwner {\n        excludedFromFees[user] = false;\n    }\n\n    /**\n     * @dev Overrides the BEP20 transfer function to include transaction fees.\n     * @param recipient the recipient of the transfer\n     * @param amount the amount to be transfered\n     * @return bool representing if the transfer was successful\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        // Ensure the sender isn't blacklisted.\n        require(!blacklist[_msgSender()], \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n        // Ensure the recipient isn't blacklisted.\n        require(!blacklist[recipient], \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n\n        // Stops investors from owning more than 5% of the total supply from purchasing Cardinal Tokens from the DEX.\n        if (pairAddresses[_msgSender()] && !excludedFromFees[_msgSender()] && !excludedFromFees[recipient]) {\n            require((balanceOf(recipient) + amount) < (totalSupply() / 20), \"You can't have more than 5% of the total Cardinal Token supply after a DEX swap.\");\n        }\n\n        // If the sender or recipient is excluded from fees, perform the default transfer.\n        if (excludedFromFees[_msgSender()] || excludedFromFees[recipient]) {\n            _transfer(_msgSender(), recipient, amount);\n            return true;\n        }\n\n        // Member giveaway transaction fee.\n        uint256 memberGiveawayFee = (amount * memberGiveawayFeePercent) / 100;\n        // Marketing team transaction fee.\n        uint256 marketingFee = (amount * marketingFeePercent) / 100;\n        // Developer team transaction fee.\n        uint256 developerFee = (amount * developerFeePercent) / 100;\n\n        // The total fee to send to the contract address (marketing + development).\n        uint256 contractFee = marketingFee + developerFee;\n \n        // Sends the transaction fees to the giveaway wallet and contract address\n        _transfer(_msgSender(), memberGiveawayWalletAddress, memberGiveawayFee);\n        _transfer(_msgSender(), address(this), contractFee);\n \n        // Sends [initial amount] - [fees] to the recipient\n        uint256 valueAfterFees = amount - contractFee - memberGiveawayFee;\n        _transfer(_msgSender(), recipient, valueAfterFees);\n\n        uint256 contractCardinalTokenBalance = balanceOf(address(this));\n\n        if (!pairAddresses[_msgSender()]) {\n            if (contractCardinalTokenBalance > balanceOf(uniswapPair) / contractTokenDivisor) {\n                swapCardinalTokensForMatic(contractCardinalTokenBalance, 0);\n            }\n                \n            uint256 contractMaticBalance = address(this).balance;\n            if (contractMaticBalance > 0) {\n                sendFeesToWallets(address(this).balance);\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Overrides the BEP20 transferFrom function to include transaction fees.\n     * @param from the address from where the tokens are coming from\n     * @param to the recipient of the transfer\n     * @param amount the amount to be transfered\n     * @return bool representing if the transfer was successful\n     */\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\n        // Ensure the sender isn't blacklisted.\n        require(!blacklist[_msgSender()], \"You have been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n        // Ensure the address where the tokens are coming from isn't blacklisted.\n        require(!blacklist[from], \"The address you're trying to spend the Cardinal Tokens from has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n        // Ensure the recipient isn't blacklisted.\n        require(!blacklist[to], \"The address you are trying to send Cardinal Tokens to has been blacklisted from trading the Cardinal Token. If you think this is an error, please contact the Cardinal House team.\");\n\n        // If the from address or to address is excluded from fees, perform the default transferFrom.\n        if (excludedFromFees[from] || excludedFromFees[to] || excludedFromFees[_msgSender()]) {\n            _spendAllowance(from, _msgSender(), amount);\n            _transfer(from, to, amount);\n            return true;\n        }\n\n        // Member giveaway transaction fee.\n        uint256 memberGiveawayFee = (amount * memberGiveawayFeePercent) / 100;\n        // Marketing team transaction fee.\n        uint256 marketingFee = (amount * marketingFeePercent) / 100;\n        // Developer team transaction fee.\n        uint256 developerFee = (amount * developerFeePercent) / 100;\n\n        // The total fee to send to the contract address (marketing + development).\n        uint256 contractFee = marketingFee + developerFee;\n \n        // Sends the transaction fees to the giveaway wallet and contract address\n        _spendAllowance(from, _msgSender(), amount);\n        _transfer(from, memberGiveawayWalletAddress, memberGiveawayFee);\n        _transfer(from, address(this), contractFee);\n \n        // Sends [initial amount] - [fees] to the recipient\n        uint256 valueAfterFees = amount - contractFee - memberGiveawayFee;\n        _transfer(from, to, valueAfterFees);\n\n        uint256 contractCardinalTokenBalance = balanceOf(address(this));\n\n        if (!pairAddresses[_msgSender()]) {\n            if (contractCardinalTokenBalance > balanceOf(uniswapPair) / contractTokenDivisor) {\n                swapCardinalTokensForMatic(contractCardinalTokenBalance, 0);\n            }\n                \n            uint256 contractMaticBalance = address(this).balance;\n            if (contractMaticBalance > 0) {\n                sendFeesToWallets(address(this).balance);\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Swaps Cardinal Tokens from transaction fees to Matic.\n     * @param amount the amount of Cardinal Tokens to swap\n     * @param minimumAmountOut the minimum amount of Matic to receive from the swap \n     */\n    function swapCardinalTokensForMatic(uint256 amount, uint256 minimumAmountOut) private {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapRouter.WETH();\n        _approve(address(this), address(uniswapRouter), amount);\n        uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            amount,\n            minimumAmountOut,\n            path,\n            address(this),\n            block.timestamp\n        );\n\n        emit transactionFeesSwappedForMatic(amount, address(this).balance);\n    }\n\n    /**\n     * @dev Sends Matic to transaction fee wallets after Cardinal Token swaps.\n     * @param amount the amount to be transfered\n     */\n    function sendFeesToWallets(uint256 amount) private {\n        uint256 totalFee = marketingFeePercent + developerFeePercent;\n        uint256 marketingFee = (amount * marketingFeePercent) / totalFee;\n        uint256 developerFee = (amount * developerFeePercent) / totalFee;\n\n        (bool marketingSuccess, ) = marketingWalletAddress.call{value: marketingFee}(\"\");\n        require(marketingSuccess, \"Failed to send Matic to marketing address\");\n        (bool developerSuccess, ) = developerWalletAddress.call{value: developerFee}(\"\");\n        require(developerSuccess, \"Failed to send Matic to developer address\");\n\n        emit transactionFeeMaticDispersed(marketingFee, developerFee);\n    }\n\n    /**\n     * @dev Sends Matic to transaction fee wallets manually as opposed to happening automatically after a certain level of volume\n     */\n    function disperseFeesManually() external onlyOwner {\n        uint256 contractMaticBalance = address(this).balance;\n        sendFeesToWallets(contractMaticBalance);\n    }\n\n    /**\n     * @dev Swaps all Cardinal Tokens in the contract for Matic and then disperses those funds to the transaction fee wallets.\n     * @param amount the amount of Cardinal Tokens in the contract to swap for Matic\n     * @param useAmount boolean to determine if the amount sent in is swapped for Matic or if the entire contract balance is swapped\n     * @param minimumAmountOut the minimum Matic output for the Cardinal Token swap\n     */\n    function swapCardinalTokensForMaticManually(uint256 amount, bool useAmount, uint256 minimumAmountOut) external onlyOwner {\n        if (useAmount) {\n            swapCardinalTokensForMatic(amount, minimumAmountOut);\n        }\n        else {\n            uint256 contractCardinalTokenBalance = balanceOf(address(this));\n            swapCardinalTokensForMatic(contractCardinalTokenBalance, minimumAmountOut);\n        }\n\n        uint256 contractMaticBalance = address(this).balance;\n        sendFeesToWallets(contractMaticBalance);\n    }\n\n    receive() external payable {}\n\n    /**\n     * @dev Sets the value that determines how many Cardinal Tokens need to be in the contract before it's swapped for Matic.\n     * @param newDivisor the new divisor value to determine the swap threshold\n     */\n    function setContractTokenDivisor(uint256 newDivisor) external onlyOwner {\n        contractTokenDivisor = newDivisor;\n    }\n\n    /**\n    * @dev Updates the blacklist mapping for a given address\n    * @param user the address that is being added or removed from the blacklist\n    * @param blacklisted a boolean that determines if the given address is being added or removed from the blacklist\n    */\n    function updateBlackList(address user, bool blacklisted) external onlyOwner {\n        blacklist[user] = blacklisted;\n    }\n\n    /**\n    * @dev Function to update the member giveaway transaction fee - can't be more than 5 percent\n    * @param newMemberGiveawayTransactionFee the new member giveaway transaction fee\n    */\n    function updateMemberGiveawayTransactionFee(uint256 newMemberGiveawayTransactionFee) external onlyOwner {\n        require(newMemberGiveawayTransactionFee <= 5, \"The member giveaway transaction fee can't be more than 5%.\");\n        memberGiveawayFeePercent = newMemberGiveawayTransactionFee;\n        emit memberGiveawayTransactionFeeUpdated(newMemberGiveawayTransactionFee);\n    }\n\n    /**\n    * @dev Function to update the marketing transaction fee - can't be more than 5 percent\n    * @param newMarketingTransactionFee the new marketing transaction fee\n    */\n    function updateMarketingTransactionFee(uint256 newMarketingTransactionFee) external onlyOwner {\n        require(newMarketingTransactionFee <= 5, \"The marketing transaction fee can't be more than 5%.\");\n        marketingFeePercent = newMarketingTransactionFee;\n        emit marketingTransactionFeeUpdated(newMarketingTransactionFee);\n    }\n\n    /**\n    * @dev Function to update the developer transaction fee - can't be more than 5 percent\n    * @param newDeveloperTransactionFee the new developer transaction fee\n    */\n    function updateDeveloperTransactionFee(uint256 newDeveloperTransactionFee) external onlyOwner {\n        require(newDeveloperTransactionFee <= 5, \"The developer transaction fee can't be more than 5%.\");\n        developerFeePercent = newDeveloperTransactionFee;\n        emit developerTransactionFeeUpdated(newDeveloperTransactionFee);\n    }\n\n    /**\n    * @dev Only owner function to add/remove an address as a pair address.\n    * @param pairAddr the pair address to either add or remove as a pair\n    * @param isPairAddress boolean to determine if the address is now a pair or no longer a pair\n    */\n    function addOrRemovePairAddress(address pairAddr, bool isPairAddress) external onlyOwner {\n        pairAddresses[pairAddr] = isPairAddress;\n    }\n\n    /**\n    * @dev Function to add or remove a Cardinal Token minter\n    * @param user the address that will be added or removed as a minter\n    * @param isMinter boolean representing if the address provided will be added or removed as a minter\n    */\n    function updateMinter(address user, bool isMinter) external onlyOwner {\n        minters[user] = isMinter;\n    }\n\n    /**\n    * @dev Minter only function to mint new Cardinal Tokens for bridging ONLY\n    * @param user the address that the tokens will be minted to\n    * @param amount the amount of tokens to be minted to the user\n    */\n    function mint(address user, uint256 amount) external {\n        require(minters[_msgSender()], \"You are not authorized to mint Cardinal Tokens.\");\n        _mint(user, amount);\n    }\n\n    /**\n    * @dev Minter only function to burn Cardinal Tokens for bridging and deflation upon service purchases with the Cardinal Token ONLY\n    * @param user the address to burn the tokens from\n    * @param amount the amount of tokens to be burned\n    */\n    function burn(address user, uint256 amount) external {\n        require(minters[_msgSender()], \"You are not authorized to burn Cardinal Tokens.\");\n        _burn(user, amount);\n    }\n}",
  "sourceMap": "309:18681:20:-:0;;;1930:1;1888:43;;2026:1;1989:38;;2127:1;2090:38;;2454:4;2416:42;;3213:1836;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:2;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;3604:14:20::1;:32:::0;;-1:-1:-1;;;;;;3604:32:20;;::::1;-1:-1:-1::0;;;;;3604:32:20;;::::1;::::0;;;::::1;::::0;;3650:27:::1;:58:::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;3722:17:::1;:38:::0;;;::::1;::::0;;::::1;;::::0;;3774:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3836:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3898:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3960:20:::1;:44:::0;;;;::::1;::::0;;::::1;;::::0;;;-1:-1:-1;4019:45:20;;;:16:::1;:45;::::0;;;;;:52;;-1:-1:-1;;4019:52:20;;::::1;-1:-1:-1::0;4019:52:20;;::::1;::::0;;;4102:22;;;::::1;4085:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;4163:22;;;::::1;4146:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;4224:22;;;::::1;4207:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;4285:14;;;::::1;4268:32:::0;;;;:39;;;;::::1;;::::0;;;4328:14;;4322:51:::1;::::0;4328:14:::1;4368:3;4345:20;4346:13:::0;4363:2:::1;4345:20;:::i;:::-;:26;;;;:::i;:::-;4322:5;:51::i;:::-;4393:22;::::0;4387:59:::1;::::0;-1:-1:-1;;;;;4393:22:20::1;4441:3;4418:20;4419:13:::0;4436:2:::1;4418:20;:::i;4387:59::-;4466:22;::::0;4460:49:::1;::::0;-1:-1:-1;;;;;4466:22:20::1;4490:18;4506:2;4490:13:::0;:18:::1;:::i;4460:49::-;4529:22;::::0;4523:48:::1;::::0;-1:-1:-1;;;;;4529:22:20::1;4553:17;4569:1;4553:13:::0;:17:::1;:::i;4523:48::-;4643:20;::::0;4678:13:::1;:32:::0;;-1:-1:-1;;;;;;4678:32:20::1;-1:-1:-1::0;;;;;4643:20:20;;::::1;4678:32:::0;;::::1;::::0;;4724:62:::1;4741:4;4643:20:::0;4772:13;4724:8:::1;:62::i;:::-;4832:16;-1:-1:-1::0;;;;;4832:24:20::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4814:56:20::1;;4879:4;4886:16;-1:-1:-1::0;;;;;4886:21:20::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4814:96;::::0;-1:-1:-1;;;;;;4814:96:20::1;::::0;;;;;;-1:-1:-1;;;;;2313:15:40;;;4814:96:20::1;::::0;::::1;2295:34:40::0;2365:15;;2345:18;;;2338:43;2230:18;;4814:96:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4800:11;:110:::0;;-1:-1:-1;;;;;;4800:110:20::1;-1:-1:-1::0;;;;;4800:110:20;;::::1;::::0;;::::1;::::0;;;4960:13:::1;::::0;4924:70:::1;::::0;-1:-1:-1;;;4924:70:20;;4960:13;::::1;4924:70;::::0;::::1;2566:51:40::0;-1:-1:-1;;2633:18:40;;;2626:34;4800:110:20;4924:27:::1;::::0;2539:18:40;;4924:70:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;5023:11:20::1;::::0;-1:-1:-1;;;;;5023:11:20::1;5009:26;::::0;;;:13:::1;:26;::::0;;;;:33;;-1:-1:-1;;5009:33:20::1;5038:4;5009:33;::::0;;-1:-1:-1;309:18681:20;;-1:-1:-1;;;;;;;309:18681:20;640:96:11;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8415:389:2:-;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;3155:2:40;8490:65:2;;;3137:21:40;3194:2;3174:18;;;3167:30;3233:33;3213:18;;;3206:61;3284:18;;8490:65:2;;;;;;;;;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;3592:25:40;;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;3580:2:40;3565:18;8701:37:2;;;;;;;8415:389;;:::o;10123:370::-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;3830:2:40;10246:68:2;;;3812:21:40;3869:2;3849:18;;;3842:30;3908:34;3888:18;;;3881:62;-1:-1:-1;;;3959:18:40;;;3952:34;4003:19;;10246:68:2;3628:400:40;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;4235:2:40;10324:68:2;;;4217:21:40;4274:2;4254:18;;;4247:30;4313:34;4293:18;;;4286:62;-1:-1:-1;;;4364:18:40;;;4357:32;4406:19;;10324:68:2;4033:398:40;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;3592:25:40;;;10454:32:2;;3565:18:40;10454:32:2;;;;;;;10123:370;;;:::o;309:18681:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;309:18681:20;;;-1:-1:-1;309:18681:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:40;-1:-1:-1;;;;;89:31:40;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1145::-;307:6;315;323;331;339;347;355;363;416:3;404:9;395:7;391:23;387:33;384:53;;;433:1;430;423:12;384:53;462:9;456:16;446:26;;515:2;504:9;500:18;494:25;528:31;553:5;528:31;:::i;:::-;628:2;613:18;;607:25;578:5;;-1:-1:-1;641:33:40;607:25;641:33;:::i;:::-;745:2;730:18;;724:25;693:7;;-1:-1:-1;758:33:40;724:25;758:33;:::i;:::-;862:3;847:19;;841:26;810:7;;-1:-1:-1;876:33:40;841:26;876:33;:::i;:::-;980:3;965:19;;959:26;928:7;;-1:-1:-1;994:33:40;959:26;994:33;:::i;:::-;1098:3;1083:19;;1077:26;1046:7;;-1:-1:-1;1112:33:40;1077:26;1112:33;:::i;:::-;1216:3;1201:19;;1195:26;1164:7;;-1:-1:-1;1230:33:40;1195:26;1230:33;:::i;:::-;1282:7;1272:17;;;150:1145;;;;;;;;;;;:::o;1300:127::-;1361:10;1356:3;1352:20;1349:1;1342:31;1392:4;1389:1;1382:15;1416:4;1413:1;1406:15;1432:168;1472:7;1538:1;1534;1530:6;1526:14;1523:1;1520:21;1515:1;1508:9;1501:17;1497:45;1494:71;;;1545:18;;:::i;:::-;-1:-1:-1;1585:9:40;;1432:168::o;1605:217::-;1645:1;1671;1661:132;;1715:10;1710:3;1706:20;1703:1;1696:31;1750:4;1747:1;1740:15;1778:4;1775:1;1768:15;1661:132;-1:-1:-1;1807:9:40;;1605:217::o;1827:251::-;1897:6;1950:2;1938:9;1929:7;1925:23;1921:32;1918:52;;;1966:1;1963;1956:12;1918:52;1998:9;1992:16;2017:31;2042:5;2017:31;:::i;:::-;2067:5;1827:251;-1:-1:-1;;;1827:251:40:o;2671:277::-;2738:6;2791:2;2779:9;2770:7;2766:23;2762:32;2759:52;;;2807:1;2804;2797:12;2759:52;2839:9;2833:16;2892:5;2885:13;2878:21;2871:5;2868:32;2858:60;;2914:1;2911;2904:12;3313:128;3353:3;3384:1;3380:6;3377:1;3374:13;3371:39;;;3390:18;;:::i;:::-;-1:-1:-1;3426:9:40;;3313:128::o;4436:380::-;4515:1;4511:12;;;;4558;;;4579:61;;4633:4;4625:6;4621:17;4611:27;;4579:61;4686:2;4678:6;4675:14;4655:18;4652:38;4649:161;;;4732:10;4727:3;4723:20;4720:1;4713:31;4767:4;4764:1;4757:15;4795:4;4792:1;4785:15;4649:161;;4436:380;;;:::o;:::-;309:18681:20;;;;;;",
  "sourcePath": "contracts/CardinalToken.sol",
  "type": "contract"
}